-- Generated on 2018-06-01 16:56 by extract-ddl.sh -d REPONSES_INTE -o 00-reponses-ddl -s ORA112 -p /platform
-- new object type path: SCHEMA_EXPORT/TYPE/TYPE_SPEC
CREATE TYPE "NX_STRING_TABLE" AS TABLE OF VARCHAR2(4000);


CREATE TYPE "NX_STRING_ARRAY" AS VARRAY(200) OF VARCHAR2(32767);


-- new object type path: SCHEMA_EXPORT/SEQUENCE/SEQUENCE
 CREATE SEQUENCE  "HIBERNATE_SEQUENCE"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 13388199 CACHE 100 NOORDER  NOCYCLE 


-- new object type path: SCHEMA_EXPORT/TABLE/TABLE
CREATE TABLE "FSD_DC_CREATOR" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "FSD_DC_NATURE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "FSD_DC_SUBJECTS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "FSD_ECM_PATH" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "HIERARCHY_READ_ACL" 
   (	"ID" VARCHAR2(36 BYTE), 
	"ACL_ID" VARCHAR2(34 BYTE)
   ) 


CREATE TABLE "HISTORIQUEATTRIBUTION" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"DATEATTRIBUTION" TIMESTAMP (6), 
	"MINATTRIBUTION" NVARCHAR2(2000), 
	"TYPEATTRIBUTION" NVARCHAR2(2000)
   ) 


CREATE TABLE "INDEXATION" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"INDEXATIONREFERENCE" NVARCHAR2(2000)
   ) 


CREATE TABLE "INDEXATION_COMP" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"INDEXATIONREFERENCE" NVARCHAR2(2000)
   ) 


CREATE TABLE "INFO_COMMENTS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"NUMBEROFCOMMENTS" NUMBER(19,0)
   ) 


CREATE TABLE "IXA_AN_ANALYSE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_ETAT_QUESTION" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_AN_ANALYSE" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_TITLE" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_TYPE_UNITE_STRUCTURELLE" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_AN_RUBRIQUE" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_SE_RUBRIQUE" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_SE_THEME" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "NXP_UIDSEQ" 
   (	"SEQ_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"SEQ_INDEX" NUMBER(10,0) NOT NULL ENABLE, 
	"SEQ_KEY" VARCHAR2(255 CHAR) NOT NULL ENABLE
   ) 


CREATE TABLE "VOC_BOOLEAN_REQUETEUR" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_SE_RENVOI" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "ALTR_RECIPIENTS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "ATTRIBUTION#ANONYMOUSTYPE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"TITREJOMINISTERE" NVARCHAR2(2000), 
	"INTITULEMINISERE" NVARCHAR2(2000), 
	"ID_MINISTERE_ATTRIBUTAIRE" NVARCHAR2(2000)
   ) 


CREATE TABLE "BIRTREPORT" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"REPORTKEY" NVARCHAR2(2000), 
	"OLDMODELREF" NVARCHAR2(2000), 
	"MODELREF" NVARCHAR2(2000)
   ) 


CREATE TABLE "BIRTREPORTMODEL" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"REPORTNAME" NVARCHAR2(2000), 
	"PARAMETREORGANIGRAMME" NVARCHAR2(2000), 
	"DROITVISIBILITERESTRAINTSGG" NUMBER(1,0) DEFAULT 0
   ) 


CREATE TABLE "CASE_DOCUMENTSID" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "CASE_ITEM" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"RECEIVE_DATE" TIMESTAMP (6), 
	"BODY" NVARCHAR2(2000), 
	"TYPE" NVARCHAR2(2000), 
	"REFERENCE" NVARCHAR2(2000), 
	"DEFAULTCASEID" NVARCHAR2(2000), 
	"DOCUMENT_DATE" TIMESTAMP (6), 
	"IMPORT_DATE" TIMESTAMP (6), 
	"SENDING_DATE" TIMESTAMP (6), 
	"CONFIDENTIALITY" NVARCHAR2(2000), 
	"ORIGIN" NVARCHAR2(2000)
   ) 


CREATE TABLE "CASE_LINK" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"COMMENT" NVARCHAR2(2000), 
	"TYPEINFO" NVARCHAR2(2000), 
	"CASEDOCUMENTID" VARCHAR2(50 BYTE), 
	"DRAFT" NUMBER(1,0), 
	"CASEITEMID" NVARCHAR2(2000), 
	"DATE" TIMESTAMP (6), 
	"ISACTIONABLE" NUMBER(1,0), 
	"SENDERMAILBOXID" NVARCHAR2(2000), 
	"SENTDATE" TIMESTAMP (6), 
	"CASEREPOSITORYNAME" NVARCHAR2(2000), 
	"TYPE" NVARCHAR2(2000), 
	"ISSENT" NUMBER(1,0), 
	"SENDER" NVARCHAR2(2000), 
	"ISREAD" NUMBER(1,0), 
	"DATEFIELDDEBUTVALIDATION" TIMESTAMP (6)
   ) 


CREATE TABLE "CLASSIFICATION_TARGETS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "CMDIST_ALL_ACTION_PAR_6B4BBED8" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "IXA_SE_RUBRIQUE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "IXA_SE_THEME" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "IXA_TA_RUBRIQUE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "JENA_GRAPH" 
   (	"ID" NUMBER(*,0) NOT NULL ENABLE, 
	"NAME" VARCHAR2(4000 BYTE)
   ) 


CREATE TABLE "JENA_G1T0_REIF" 
   (	"SUBJ" NVARCHAR2(250), 
	"PROP" NVARCHAR2(250), 
	"OBJ" NVARCHAR2(250), 
	"GRAPHID" NUMBER(*,0), 
	"STMT" NVARCHAR2(250) NOT NULL ENABLE, 
	"HASTYPE" CHAR(1 BYTE) NOT NULL ENABLE
   ) 


CREATE TABLE "JENA_G1T1_STMT" 
   (	"SUBJ" NVARCHAR2(250) NOT NULL ENABLE, 
	"PROP" NVARCHAR2(250) NOT NULL ENABLE, 
	"OBJ" NVARCHAR2(250) NOT NULL ENABLE, 
	"GRAPHID" NUMBER(*,0)
   ) 


CREATE TABLE "JENA_G2T0_REIF" 
   (	"SUBJ" NVARCHAR2(250), 
	"PROP" NVARCHAR2(250), 
	"OBJ" NVARCHAR2(250), 
	"GRAPHID" NUMBER(*,0), 
	"STMT" NVARCHAR2(250) NOT NULL ENABLE, 
	"HASTYPE" CHAR(1 BYTE) NOT NULL ENABLE
   ) 


CREATE TABLE "JENA_G2T1_STMT" 
   (	"SUBJ" NVARCHAR2(250) NOT NULL ENABLE, 
	"PROP" NVARCHAR2(250) NOT NULL ENABLE, 
	"OBJ" NVARCHAR2(250) NOT NULL ENABLE, 
	"GRAPHID" NUMBER(*,0)
   ) 


CREATE TABLE "JENA_G3T0_REIF" 
   (	"SUBJ" NVARCHAR2(250), 
	"PROP" NVARCHAR2(250), 
	"OBJ" NVARCHAR2(250), 
	"GRAPHID" NUMBER(*,0), 
	"STMT" NVARCHAR2(250) NOT NULL ENABLE, 
	"HASTYPE" CHAR(1 BYTE) NOT NULL ENABLE
   ) 


CREATE TABLE "JENA_G3T1_STMT" 
   (	"SUBJ" NVARCHAR2(250) NOT NULL ENABLE, 
	"PROP" NVARCHAR2(250) NOT NULL ENABLE, 
	"OBJ" NVARCHAR2(250) NOT NULL ENABLE, 
	"GRAPHID" NUMBER(*,0)
   ) 


CREATE TABLE "RQMET_ETATQUESTION" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "SEARCH_COVERAGE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "SEARCH_CURRENTLIFECYCLESTATES" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "SEARCH_NATURE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "SEARCH_SEARCHPATH" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "SEARCH_SUBJECTS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "SIGNALEMENTQUESTION" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"DATEATTENDUE" TIMESTAMP (6), 
	"DATEDEFFET" TIMESTAMP (6)
   ) 


CREATE TABLE "SMART_FOLDER" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(19,0), 
	"QUERYPART" NVARCHAR2(2000)
   ) 


CREATE TABLE "SORTINFOTYPE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"SORTCOLUMN" NVARCHAR2(2000), 
	"SORTASCENDING" NUMBER(1,0)
   ) 


CREATE TABLE "STATISTIQUE_DIRECTION" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE, 
	"ACTIF" NUMBER(1,0), 
	"DIRECTION" VARCHAR2(255 CHAR), 
	"EDITION" VARCHAR2(255 CHAR), 
	"MINISTERE" VARCHAR2(255 CHAR), 
	"NBQUESTIONENCOURS" NUMBER(10,0), 
	"ORDRE_PROTOCOLAIRE" NUMBER(10,0)
   ) 


CREATE TABLE "REPOSITORIES" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"NAME" VARCHAR2(250 BYTE)
   ) 


CREATE TABLE "REQUETECOMPLEXE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"MINISTEREINTERROGE" NVARCHAR2(2000), 
	"POSTE" NVARCHAR2(2000), 
	"NUMEROQUESTIONFIN" NUMBER(19,0), 
	"DATEJOQUESTIONDEBUT" TIMESTAMP (6), 
	"CLAUSECARACTERISTIQUES" NVARCHAR2(2000), 
	"INDEXASSEMBLEE" NVARCHAR2(2000), 
	"LEGISLATURE" NVARCHAR2(2000), 
	"NOMAUTEUR" NVARCHAR2(2000), 
	"DATEJOREPONSEFIN" TIMESTAMP (6), 
	"INDEXMINISTERE" NVARCHAR2(2000), 
	"GROUPEPOLITIQUE" NVARCHAR2(2000), 
	"DATEJOREPONSEDEBUT" TIMESTAMP (6), 
	"MINISTEREATTRIBUTE" NVARCHAR2(2000), 
	"DATEJOQUESTIONFIN" TIMESTAMP (6), 
	"NUMEROQUESTIONDEBUT" NUMBER(19,0), 
	"DATESIGNALEMENTDEBUT" TIMESTAMP (6), 
	"DATESIGNALEMENTFIN" TIMESTAMP (6), 
	"DIRECTIONPILOTE" NVARCHAR2(2000), 
	"MINISTERERATTACHEMENT" NVARCHAR2(2000)
   ) 


CREATE TABLE "REQUETEFEUILLEROUTE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"RANGEBEGINDATESTEPSTART" TIMESTAMP (6), 
	"RANGEENDDATESTEPSTART" TIMESTAMP (6), 
	"STATUSSTEP" NVARCHAR2(2000), 
	"ISMANDATORY" NUMBER(1,0), 
	"TYPETASK" NVARCHAR2(2000), 
	"HASAUTOMATICVALIDATION" NUMBER(1,0), 
	"TYPESTEP" NVARCHAR2(2000), 
	"RANGEBEGINDATESTEPEND" TIMESTAMP (6), 
	"TITREFEUILLEROUTE" NVARCHAR2(2000), 
	"RANGEENDDATESTEPEND" TIMESTAMP (6), 
	"CURRENTLIFECYCLESTATE" NVARCHAR2(2000), 
	"VALIDATIONSTATUSID" NVARCHAR2(2000), 
	"POSTEID" NVARCHAR2(2000), 
	"DISTRIBUTIONMAILBOXID" NVARCHAR2(2000)
   ) 


CREATE TABLE "REQUETEMETADONNEES" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"CLAUSEETATRETIREOUNONRETIRE" NVARCHAR2(2000), 
	"ETATSIGNALE" NUMBER(1,0), 
	"ETATRENOUVELE" NUMBER(1,0), 
	"ETATCLOTUREAUTRE" NUMBER(1,0), 
	"ETATRETIRE" NUMBER(1,0), 
	"ETATCADUQUE" NUMBER(1,0), 
	"ETATRAPPELE" NUMBER(1,0), 
	"ETATNONRETIRE" NUMBER(1,0), 
	"ETATREATTRIBUE" NUMBER(1,0)
   ) 


CREATE TABLE "REQUETESIMPLE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"CRITERE_REQUETE" NVARCHAR2(2000), 
	"CRITERE_REQUETE_CLAUSE" NVARCHAR2(2000)
   ) 


CREATE TABLE "REQUETETEXTEINTEGRAL" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"APPLIQUERRECHERCHEEXACTE" NUMBER(1,0), 
	"DANSTEXTEREPONSE" NUMBER(1,0), 
	"DANSTEXTEQUESTION" NUMBER(1,0), 
	"CRITERE_REQUETE" NVARCHAR2(2000), 
	"SUBCLAUSE" NVARCHAR2(2000), 
	"DANSTITRE" NUMBER(1,0)
   ) 


CREATE TABLE "RMLBX_PRECALCULLIST" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(150)
   ) 


CREATE TABLE "ROUTING_TASK" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"AUTOMATICVALIDATION" NUMBER(1,0), 
	"POSTELABEL" NVARCHAR2(2000), 
	"VALIDATIONSTATUS" NVARCHAR2(2000), 
	"MINISTERELABEL" NVARCHAR2(2000), 
	"ALREADYDUPLICATED" NUMBER(1,0), 
	"DISTRIBUTIONMAILBOXID" NVARCHAR2(2000), 
	"DOCUMENTROUTEID" VARCHAR2(50 BYTE), 
	"TYPE" NVARCHAR2(2000), 
	"DATEFINETAPE" TIMESTAMP (6), 
	"DUEDATE" TIMESTAMP (6), 
	"ISMAILSEND" NUMBER(1,0), 
	"ACTIONNABLE" NUMBER(1,0), 
	"DEADLINE" NUMBER(19,0), 
	"VALIDATIONUSERLABEL" NVARCHAR2(2000), 
	"VALIDATIONUSERID" NVARCHAR2(2000), 
	"OBLIGATOIREMINISTERE" NUMBER(1,0), 
	"AUTOMATICVALIDATED" NUMBER(1,0), 
	"DATEDEBUTETAPE" TIMESTAMP (6), 
	"ISREAFFECTATION" NUMBER(1,0), 
	"OBLIGATOIRESGG" NUMBER(1,0), 
	"DIRECTIONLABEL" NVARCHAR2(2000), 
	"DIRECTIONID" VARCHAR2(50 BYTE), 
	"MINISTEREID" NVARCHAR2(2000)
   ) 


CREATE TABLE "RQC_CARACTERISTIQUEQUESTION" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "RQC_ORIGINEQUESTION" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "UITYPESCONF_DENIEDTYPES" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "UI_TYPES_CONFIGURATION" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"DENYALLTYPES" NUMBER(1,0)
   ) 


CREATE TABLE "USERSETTINGS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"USER" NVARCHAR2(2000)
   ) 


CREATE TABLE "USERSUBSCRIPTION" 
   (	"ID" NUMBER(10,0) NOT NULL ENABLE, 
	"DOCID" VARCHAR2(255 CHAR), 
	"NOTIFICATION" VARCHAR2(255 CHAR), 
	"USERID" VARCHAR2(255 CHAR)
   ) 


CREATE TABLE "VCARD" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"EMAIL" NVARCHAR2(2000), 
	"SOUND" NVARCHAR2(2000), 
	"GEO" NVARCHAR2(2000), 
	"TITLE" NVARCHAR2(2000), 
	"BDAY" NVARCHAR2(2000), 
	"NOTE" NVARCHAR2(2000), 
	"REV" NVARCHAR2(2000), 
	"NICKNAME" NVARCHAR2(2000), 
	"MAILER" NVARCHAR2(2000), 
	"LABEL" NVARCHAR2(2000), 
	"TEL" NVARCHAR2(2000), 
	"UID" NVARCHAR2(2000), 
	"FN" NVARCHAR2(2000), 
	"LOGO" NVARCHAR2(2000), 
	"N" NVARCHAR2(2000), 
	"ORG" NVARCHAR2(2000), 
	"AGENT" NVARCHAR2(2000), 
	"ADR" NVARCHAR2(2000), 
	"KEY" NVARCHAR2(2000), 
	"VERSION" NVARCHAR2(2000), 
	"URL" NVARCHAR2(2000), 
	"TZ" NVARCHAR2(2000), 
	"ROLE" NVARCHAR2(2000), 
	"PHOTO" NVARCHAR2(2000)
   ) 


CREATE TABLE "VERSIONS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"VERSIONABLEID" VARCHAR2(36 BYTE), 
	"CREATED" TIMESTAMP (6), 
	"LABEL" VARCHAR2(250 BYTE), 
	"DESCRIPTION" NVARCHAR2(2000), 
	"ISLATEST" NUMBER(1,0), 
	"ISLATESTMAJOR" NUMBER(1,0)
   ) 


CREATE TABLE "WSNOTIFICATION" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"NBESSAIS" NUMBER(19,0), 
	"IDQUESTION" NVARCHAR2(2000), 
	"POSTEID" NVARCHAR2(2000), 
	"WEBSERVICE" NVARCHAR2(2000)
   ) 


CREATE TABLE "topic" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "subtopic" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"parent" NVARCHAR2(2000), 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "continent" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "RELATEDTEXTRESOURCE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"RELATEDTEXTID" NVARCHAR2(2000), 
	"RELATEDTEXT" NVARCHAR2(2000)
   ) 


CREATE TABLE "RELATION" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"SOURCE" NVARCHAR2(2000), 
	"TARGET" NVARCHAR2(2000)
   ) 


CREATE TABLE "RELATION_SEARCH" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"DC_TITLE" NVARCHAR2(2000), 
	"ECM_FULLTEXT" NVARCHAR2(2000)
   ) 


CREATE TABLE "REL_SRCH_ECM_PATH" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "RENOUVELLEMENTQUESTION" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"DATEDEFFET" TIMESTAMP (6)
   ) 


CREATE TABLE "REPLOGL_DETAILS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "REPLOG_LINES" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "REPONSES_LOGGING" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"STATUS" NVARCHAR2(2000), 
	"STARTDATE" TIMESTAMP (6), 
	"ENDDATE" TIMESTAMP (6), 
	"ENDCOUNT" NUMBER(19,0), 
	"PREVISIONALCOUNT" NUMBER(19,0), 
	"MESSAGE" NVARCHAR2(2000), 
	"CLOSEENDCOUNT" NUMBER(19,0), 
	"CLOSEPREVISIONALCOUNT" NUMBER(19,0), 
	"CURRENTGOUVERNEMENT" VARCHAR2(255 BYTE), 
	"NEXTGOUVERNEMENT" VARCHAR2(255 BYTE)
   ) 


CREATE TABLE "REPONSES_LOGGING_DETAIL" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"MESSAGE" NVARCHAR2(2000), 
	"STATUS" NVARCHAR2(2000)
   ) 


CREATE TABLE "REPONSES_LOGGING_LINE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"MESSAGE" NVARCHAR2(2000), 
	"STATUS" NVARCHAR2(2000), 
	"PREVISIONALCOUNT" NUMBER(19,0), 
	"ENDCOUNT" NUMBER(19,0), 
	"ENDDATE" TIMESTAMP (6), 
	"STARTDATE" TIMESTAMP (6)
   ) 


CREATE TABLE "HISTORIQUE_MDP" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE, 
	"LOGIN" VARCHAR2(255 CHAR), 
	"DERNIER_MDP" VARCHAR2(255 CHAR), 
	"DATE_ENREGISTREMENT" TIMESTAMP (6)
   ) 


CREATE TABLE "GOUVERNEMENT" 
   (	"ID_ORGANIGRAMME" NVARCHAR2(255) NOT NULL ENABLE, 
	"DATE_FIN" TIMESTAMP (6), 
	"DATE_DEBUT" TIMESTAMP (6), 
	"DATE_VERROU" TIMESTAMP (6), 
	"LABEL" NVARCHAR2(255), 
	"DELETED" NUMBER(1,0), 
	"UTILISATEUR_VERROU" NVARCHAR2(255), 
	"FUNCTION_READ" NVARCHAR2(255)
   ) 


CREATE TABLE "INSTITUTION" 
   (	"ID_ORGANIGRAMME" NVARCHAR2(255) NOT NULL ENABLE, 
	"DATE_FIN" TIMESTAMP (6), 
	"DATE_DEBUT" TIMESTAMP (6), 
	"DATE_VERROU" TIMESTAMP (6), 
	"LABEL" NVARCHAR2(255), 
	"DELETED" NUMBER(1,0), 
	"UTILISATEUR_VERROU" NVARCHAR2(255), 
	"FUNCTION_READ" NVARCHAR2(255)
   ) 


CREATE TABLE "ENTITE" 
   (	"ID_ORGANIGRAMME" NVARCHAR2(255) NOT NULL ENABLE, 
	"DATE_FIN" TIMESTAMP (6), 
	"DATE_DEBUT" TIMESTAMP (6), 
	"DATE_VERROU" TIMESTAMP (6), 
	"LABEL" NVARCHAR2(255), 
	"DELETED" NUMBER(1,0), 
	"UTILISATEUR_VERROU" NVARCHAR2(255), 
	"ID_PARENT_GOUV" NVARCHAR2(255), 
	"EDITION" NVARCHAR2(255), 
	"FORMULE" NVARCHAR2(255), 
	"CIVILITE_MINISTRE" NVARCHAR2(255), 
	"NOM_MINISTRE" NVARCHAR2(255), 
	"PRENOM_MINISTRE" NVARCHAR2(255), 
	"ORDRE" NUMBER(19,0), 
	"FUNCTION_READ" NVARCHAR2(255), 
	"NOR_MINISTERE" VARCHAR2(3500 BYTE), 
	"SUIVI_ACTIVITE_NORMATIVE" NUMBER(1,0)
   ) 


CREATE TABLE "UNITE_STRUCTURELLE" 
   (	"ID_ORGANIGRAMME" NVARCHAR2(255) NOT NULL ENABLE, 
	"DATE_FIN" TIMESTAMP (6), 
	"DATE_DEBUT" TIMESTAMP (6), 
	"DATE_VERROU" TIMESTAMP (6), 
	"LABEL" NVARCHAR2(255), 
	"DELETED" NUMBER(1,0), 
	"UTILISATEUR_VERROU" NVARCHAR2(255), 
	"ID_PARENT_ENTITE" VARCHAR2(3500 BYTE), 
	"ID_PARENT_UNITE" VARCHAR2(3500 BYTE), 
	"ID_PARENT_INSTITUTION" VARCHAR2(3500 BYTE), 
	"TYPE" NVARCHAR2(255), 
	"FUNCTION_READ" NVARCHAR2(255), 
	"NOR_DIRECTION" VARCHAR2(3500 BYTE)
   ) 


CREATE TABLE "POSTE" 
   (	"ID_ORGANIGRAMME" NVARCHAR2(255) NOT NULL ENABLE, 
	"DATE_FIN" TIMESTAMP (6), 
	"DATE_DEBUT" TIMESTAMP (6), 
	"DATE_VERROU" TIMESTAMP (6), 
	"LABEL" NVARCHAR2(255), 
	"DELETED" NUMBER(1,0), 
	"UTILISATEUR_VERROU" NVARCHAR2(255), 
	"ID_PARENT_ENTITE" VARCHAR2(3500 BYTE), 
	"ID_PARENT_UNITE" VARCHAR2(3500 BYTE), 
	"ID_PARENT_INSTITUTION" VARCHAR2(3500 BYTE), 
	"CHARGE_MISSION_SGG" NUMBER(1,0), 
	"POSTE_BDC" NUMBER(1,0), 
	"SUPERVISEUR_SGG" NUMBER(1,0), 
	"CONSEILLER_PM" NUMBER(1,0), 
	"WS_URL" NVARCHAR2(500), 
	"WS_LOGIN" NVARCHAR2(255), 
	"WS_MDP" NVARCHAR2(255), 
	"WS_CLE" NVARCHAR2(255), 
	"MEMBRES" VARCHAR2(3500 BYTE), 
	"FUNCTION_READ" NVARCHAR2(255), 
	"POSTE_WS" NUMBER(1,0)
   ) 


CREATE TABLE "ETATQUESTION" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"DATE_CHANGEMENT_ETAT" TIMESTAMP (6), 
	"ETATQUESTION" NVARCHAR2(2000)
   ) 


CREATE TABLE "CK_LOG" 
   (	"LINENUM" NUMBER, 
	"LINEMSG" VARCHAR2(2000 BYTE)
   ) 


CREATE TABLE "MISC" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"LIFECYCLEPOLICY" VARCHAR2(250 BYTE), 
	"LIFECYCLESTATE" VARCHAR2(250 BYTE)
   ) 


CREATE TABLE "MLBX_FAVORITES" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "MLBX_GROUPS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "MLBX_NOTIFIED_USERS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "MLBX_PROFILES" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "MLBX_USERS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "NAV" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"SE_THEME" NVARCHAR2(2000), 
	"AN_RUBRIQUE" NVARCHAR2(2000)
   ) 


CREATE TABLE "NAVIGATIONSETTINGS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"HOMEPAGE" NVARCHAR2(2000), 
	"PAGINATION" NVARCHAR2(2000), 
	"FULLNAVIGATION" NUMBER(1,0)
   ) 


CREATE TABLE "NXP_LOGS" 
   (	"LOG_ID" NUMBER(*,0) NOT NULL ENABLE, 
	"LOG_EVENT_CATEGORY" VARCHAR2(255 CHAR), 
	"LOG_EVENT_COMMENT" VARCHAR2(1024 CHAR), 
	"LOG_DOC_LIFE_CYCLE" VARCHAR2(255 CHAR), 
	"LOG_DOC_PATH" VARCHAR2(1024 CHAR), 
	"LOG_DOC_TYPE" VARCHAR2(255 CHAR), 
	"LOG_DOC_UUID" VARCHAR2(255 CHAR), 
	"LOG_EVENT_DATE" TIMESTAMP (6), 
	"LOG_EVENT_ID" VARCHAR2(255 CHAR) NOT NULL ENABLE, 
	"LOG_PRINCIPAL_NAME" VARCHAR2(255 CHAR)
   ) 


CREATE TABLE "NXP_LOGS_MAPEXTINFOS" 
   (	"LOG_FK" NUMBER(*,0) NOT NULL ENABLE, 
	"INFO_FK" NUMBER(19,0) NOT NULL ENABLE, 
	"MAPKEY" VARCHAR2(255 CHAR) NOT NULL ENABLE
   ) 


CREATE TABLE "CVD_SELECTEDLAYOUTCOLUMNS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "DC_CONTRIBUTORS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(100)
   ) 


CREATE TABLE "DC_SUBJECTS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "DEFAULTSETTINGS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"LANGUAGE" NVARCHAR2(2000)
   ) 


CREATE TABLE "DELEGATION" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"SOURCEID" NVARCHAR2(2000), 
	"DATEDEBUT" TIMESTAMP (6), 
	"DATEFIN" TIMESTAMP (6), 
	"DESTINATAIREID" NVARCHAR2(2000)
   ) 


CREATE TABLE "DEL_PROFILLIST" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "DOCRI_PARTICIPATINGDOCUMENTS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(50)
   ) 


CREATE TABLE "documentsLists" 
   (	"id" NVARCHAR2(2000), 
	"ref" NVARCHAR2(2000), 
	"repo" NVARCHAR2(2000), 
	"userid" NVARCHAR2(2000), 
	"listid" NVARCHAR2(2000), 
	"reftype" NUMBER(19,0)
   ) 


CREATE TABLE "DOSSIER_REPONSE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"NUMEROQUESTION" NUMBER(19,0), 
	"IDDOCUMENTQUESTION" VARCHAR2(50 BYTE), 
	"LASTDOCUMENTROUTE" VARCHAR2(50 BYTE), 
	"LISTEELIMINATION" VARCHAR2(50 BYTE), 
	"IDDOCUMENTREPONSE" VARCHAR2(50 BYTE), 
	"ETAPEREDACTIONATTEINTE" NUMBER(1,0), 
	"IDDOSSIERLOT" VARCHAR2(50 BYTE), 
	"IDDOCUMENTFDD" VARCHAR2(50 BYTE), 
	"MINISTEREATTRIBUTAIRECOURANT" NVARCHAR2(50), 
	"REAFFECTATIONCOUNT" NUMBER(19,0), 
	"ETAPESIGNATUREATTEINTE" NUMBER(1,0), 
	"MINISTEREATTRIBUTAIREPRECEDENT" NVARCHAR2(50), 
	"MINISTEREREATTRIBUTION" NVARCHAR2(50), 
	"LABELETAPESUIVANTE" NVARCHAR2(2000), 
	"HISTORIQUEDOSSIERTRAITE" NUMBER(1,0), 
	"ISARBITRATED" NUMBER(1,0) DEFAULT 0, 
	"HASPJ" NUMBER(1,0) DEFAULT 0
   ) 


CREATE TABLE "DOSSIER_REPONSES_LINK" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"ETATQUESTION" NVARCHAR2(100), 
	"AUTOMATICVALIDATED" NUMBER(1,0), 
	"MOTSCLES" NVARCHAR2(2000), 
	"IDMINISTEREATTRIBUTAIRE" VARCHAR2(50 BYTE), 
	"SOURCENUMEROQUESTION" NVARCHAR2(100), 
	"ROUTINGTASKLABEL" NVARCHAR2(2000), 
	"TYPEQUESTION" NVARCHAR2(100), 
	"ROUTINGTASKTYPE" NVARCHAR2(50), 
	"DATEPUBLICATIONJO" TIMESTAMP (6), 
	"ETATSQUESTION" NVARCHAR2(10), 
	"ROUTINGTASKID" NVARCHAR2(50), 
	"NOMCOMPLETAUTEUR" NVARCHAR2(201), 
	"ROUTINGTASKMAILBOXLABEL" NVARCHAR2(2000), 
	"INTITULEMINISTERE" NVARCHAR2(2000), 
	"SORTFIELD" NVARCHAR2(100), 
	"NUMEROQUESTION" NUMBER(19,0), 
	"ISMAILSEND" NUMBER(1,0), 
	"DATESIGNALEMENTQUESTION" TIMESTAMP (6)
   ) 


CREATE TABLE "ALTR_EXTERNALRECIPIENTS" 
   (	"ID" VARCHAR2(36 BYTE), 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   )


CREATE TABLE "VOC_TYPE_QUESTION_AN" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_FEUILLEROUTE_TYPE_CREATION" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"parent" NVARCHAR2(2000), 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_BORDEREAU_LABEL" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "nature" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_VALIDATION_STATUT_ETAPE" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "REWRITE_TABLE" 
   (	"STATEMENT_ID" VARCHAR2(30 BYTE), 
	"MV_OWNER" VARCHAR2(30 BYTE), 
	"MV_NAME" VARCHAR2(30 BYTE), 
	"SEQUENCE" NUMBER(*,0), 
	"QUERY" VARCHAR2(2000 BYTE), 
	"QUERY_BLOCK_NO" NUMBER(*,0), 
	"REWRITTEN_TXT" VARCHAR2(2000 BYTE), 
	"MESSAGE" VARCHAR2(512 BYTE), 
	"PASS" VARCHAR2(3 BYTE), 
	"MV_IN_MSG" VARCHAR2(30 BYTE), 
	"MEASURE_IN_MSG" VARCHAR2(30 BYTE), 
	"JOIN_BACK_TBL" VARCHAR2(30 BYTE), 
	"JOIN_BACK_COL" VARCHAR2(30 BYTE), 
	"ORIGINAL_COST" NUMBER(*,0), 
	"REWRITTEN_COST" NUMBER(*,0), 
	"FLAGS" NUMBER(*,0), 
	"RESERVED1" NUMBER(*,0), 
	"RESERVED2" VARCHAR2(10 BYTE)
   ) 


CREATE TABLE "SW_ACLR_USERID_USER" 
   (	"USER_ID" VARCHAR2(34 BYTE) NOT NULL ENABLE, 
	"USERGROUP" VARCHAR2(200 BYTE)
   ) 


CREATE TABLE "SW_ACLR_USER_ACLID" 
   (	"USERGROUP" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"ACL_ID" VARCHAR2(34 BYTE)
   ) 


CREATE TABLE "QRTZ_SIMPLE_TRIGGERS" 
   (	"SCHED_NAME" VARCHAR2(120 BYTE) NOT NULL ENABLE, 
	"TRIGGER_NAME" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"TRIGGER_GROUP" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"REPEAT_COUNT" NUMBER(7,0) NOT NULL ENABLE, 
	"REPEAT_INTERVAL" NUMBER(12,0) NOT NULL ENABLE, 
	"TIMES_TRIGGERED" NUMBER(10,0) NOT NULL ENABLE
   ) 


CREATE TABLE "QRTZ_CRON_TRIGGERS" 
   (	"SCHED_NAME" VARCHAR2(120 BYTE) NOT NULL ENABLE, 
	"TRIGGER_NAME" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"TRIGGER_GROUP" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"CRON_EXPRESSION" VARCHAR2(120 BYTE) NOT NULL ENABLE, 
	"TIME_ZONE_ID" VARCHAR2(80 BYTE)
   ) 


CREATE TABLE "QRTZ_SIMPROP_TRIGGERS" 
   (	"SCHED_NAME" VARCHAR2(120 BYTE) NOT NULL ENABLE, 
	"TRIGGER_NAME" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"TRIGGER_GROUP" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"STR_PROP_1" VARCHAR2(512 BYTE), 
	"STR_PROP_2" VARCHAR2(512 BYTE), 
	"STR_PROP_3" VARCHAR2(512 BYTE), 
	"INT_PROP_1" NUMBER(10,0), 
	"INT_PROP_2" NUMBER(10,0), 
	"LONG_PROP_1" NUMBER(13,0), 
	"LONG_PROP_2" NUMBER(13,0), 
	"DEC_PROP_1" NUMBER(13,4), 
	"DEC_PROP_2" NUMBER(13,4), 
	"BOOL_PROP_1" VARCHAR2(1 BYTE), 
	"BOOL_PROP_2" VARCHAR2(1 BYTE)
   ) 


CREATE TABLE "QRTZ_PAUSED_TRIGGER_GRPS" 
   (	"SCHED_NAME" VARCHAR2(120 BYTE) NOT NULL ENABLE, 
	"TRIGGER_GROUP" VARCHAR2(200 BYTE) NOT NULL ENABLE
   ) 


CREATE TABLE "QRTZ_FIRED_TRIGGERS" 
   (	"SCHED_NAME" VARCHAR2(120 BYTE) NOT NULL ENABLE, 
	"ENTRY_ID" VARCHAR2(95 BYTE) NOT NULL ENABLE, 
	"TRIGGER_NAME" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"TRIGGER_GROUP" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"INSTANCE_NAME" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"FIRED_TIME" NUMBER(13,0) NOT NULL ENABLE, 
	"PRIORITY" NUMBER(13,0) NOT NULL ENABLE, 
	"STATE" VARCHAR2(16 BYTE) NOT NULL ENABLE, 
	"JOB_NAME" VARCHAR2(200 BYTE), 
	"JOB_GROUP" VARCHAR2(200 BYTE), 
	"IS_NONCONCURRENT" VARCHAR2(1 BYTE), 
	"REQUESTS_RECOVERY" VARCHAR2(1 BYTE)
   ) 


CREATE TABLE "QRTZ_SCHEDULER_STATE" 
   (	"SCHED_NAME" VARCHAR2(120 BYTE) NOT NULL ENABLE, 
	"INSTANCE_NAME" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"LAST_CHECKIN_TIME" NUMBER(13,0) NOT NULL ENABLE, 
	"CHECKIN_INTERVAL" NUMBER(13,0) NOT NULL ENABLE
   ) 


CREATE TABLE "QRTZ_LOCKS" 
   (	"SCHED_NAME" VARCHAR2(120 BYTE) NOT NULL ENABLE, 
	"LOCK_NAME" VARCHAR2(40 BYTE) NOT NULL ENABLE
   ) 


CREATE TABLE "LISTEELIMINATION" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"EN_COURS" NUMBER(1,0), 
	"SUPPRESSION_EN_COURS" NUMBER(1,0), 
	"ABANDON_EN_COURS" NUMBER(1,0)
   ) 


CREATE TABLE "LOCK_JETON_MAITRE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"ID_JETON_MAITRE" VARCHAR2(36 BYTE), 
	"ID_PROPRIETAIRE" NVARCHAR2(2000), 
	"TYPE_WEBSERVICE" NVARCHAR2(2000), 
	"NUMERO_JETON" NUMBER(19,0)
   ) 


CREATE TABLE "CLUSTER_NODES" 
   (	"NODEID" VARCHAR2(25 BYTE), 
	"CREATED" TIMESTAMP (6)
   ) 


CREATE TABLE "CLUSTER_INVALS" 
   (	"NODEID" VARCHAR2(25 BYTE), 
	"ID" VARCHAR2(36 BYTE), 
	"FRAGMENTS" VARCHAR2(4000 BYTE), 
	"KIND" NUMBER(3,0)
   ) 


CREATE TABLE "TIMBRE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"CURRENTMIN" NVARCHAR2(2000), 
	"NEXTMIN" NVARCHAR2(2000)
   ) 


CREATE TABLE "STATISTIQUE_GROUPE" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE, 
	"ACTIF" NUMBER(1,0), 
	"EDITION" VARCHAR2(255 CHAR), 
	"GROUPE" VARCHAR2(255 CHAR), 
	"MINISTERE" VARCHAR2(255 CHAR), 
	"NBQUESTION" NUMBER(10,0), 
	"ORDRE_PROTOCOLAIRE" NUMBER(10,0), 
	"ORIGINE" VARCHAR2(255 CHAR)
   ) 


CREATE TABLE "STATISTIQUE_MINISTERE" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE, 
	"ACTIF" NUMBER(1,0), 
	"EDITION" VARCHAR2(255 CHAR), 
	"MINISTERE" VARCHAR2(255 CHAR), 
	"NBQUESTIONSSREPONSE" NUMBER(10,0), 
	"NBQUESTIONSSREPONSESUP2MOIS" NUMBER(10,0), 
	"NBRENOUVELLE" NUMBER(10,0), 
	"NBRETIRE" NUMBER(10,0), 
	"ORDRE_PROTOCOLAIRE" NUMBER(10,0), 
	"NBRENOUVELLEEC" NUMBER(10,0)
   ) 


CREATE TABLE "STATISTIQUE_MOIS" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE, 
	"ACTIF" NUMBER(1,0), 
	"EDITION" VARCHAR2(255 CHAR), 
	"MINISTERE" VARCHAR2(255 CHAR), 
	"MOIS" VARCHAR2(255 CHAR), 
	"NBQUESTION" NUMBER(10,0), 
	"NBREPONSE" NUMBER(10,0), 
	"NBREPONSETOTAL" NUMBER(10,0), 
	"ORDRE_PROTOCOLAIRE" NUMBER(10,0)
   ) 


CREATE TABLE "STATISTIQUE_QUESTION_REPONSE" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE, 
	"ACTIF" NUMBER(1,0), 
	"EDITION" VARCHAR2(255 CHAR), 
	"MINISTERE" VARCHAR2(255 CHAR), 
	"NBQUESTION" NUMBER(10,0), 
	"NBREPONDU1MOIS" NUMBER(10,0), 
	"NBREPONDU2MOIS" NUMBER(10,0), 
	"NBREPONDUSUPERIEUR" NUMBER(10,0), 
	"ORDRE_PROTOCOLAIRE" NUMBER(10,0), 
	"ORIGINE" VARCHAR2(255 CHAR)
   ) 


CREATE TABLE "STATUS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"SERVICEID" NVARCHAR2(2000), 
	"ADMINISTRATIVE_STATUS" NVARCHAR2(2000), 
	"INSTANCEID" NVARCHAR2(2000), 
	"USERLOGIN" NVARCHAR2(2000), 
	"STATUSMESSAGE" NVARCHAR2(2000)
   ) 


CREATE TABLE "STEP_FOLDER" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"EXECUTION" NVARCHAR2(2000)
   ) 


CREATE TABLE "TAG" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"LABEL" NVARCHAR2(2000)
   ) 


CREATE TABLE "TYPE_CONTACT" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"EMAIL" NVARCHAR2(2000), 
	"MAILBOXID" NVARCHAR2(2000), 
	"NAME" NVARCHAR2(2000), 
	"SERVICE" NVARCHAR2(2000), 
	"SURNAME" NVARCHAR2(2000)
   ) 


CREATE TABLE "UID" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"UID" NVARCHAR2(2000)
   ) 


CREATE TABLE "UITYPESCONF_ALLOWEDTYPES" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "DUBLINCORE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"CREATOR" NVARCHAR2(2000), 
	"NATURE" NVARCHAR2(2000), 
	"SOURCE" NVARCHAR2(2000), 
	"CREATED" TIMESTAMP (6), 
	"DESCRIPTION" NVARCHAR2(2000), 
	"RIGHTS" NVARCHAR2(2000), 
	"VALID" TIMESTAMP (6), 
	"FORMAT" NVARCHAR2(2000), 
	"ISSUED" TIMESTAMP (6), 
	"MODIFIED" TIMESTAMP (6), 
	"LANGUAGE" NVARCHAR2(2000), 
	"COVERAGE" NVARCHAR2(2000), 
	"EXPIRED" TIMESTAMP (6), 
	"LASTCONTRIBUTOR" NVARCHAR2(2000), 
	"TITLE" NVARCHAR2(2000)
   ) 


CREATE TABLE "ELEMENTFONDDOSSIER" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"MINISTEREAJOUTE" NVARCHAR2(2000), 
	"FILEPATH" NVARCHAR2(2000), 
	"TYPE" NVARCHAR2(2000), 
	"NUMEROVERSION" NVARCHAR2(2000), 
	"NIVEAUVISIBILITE" NVARCHAR2(2000), 
	"USERNAME" NVARCHAR2(2000)
   ) 


CREATE TABLE "FACETED_SEARCH" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"CONTENT_VIEW_NAME" NVARCHAR2(2000)
   ) 


CREATE TABLE "FACETED_SEARCH_DEFAULT" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"ECM_FULLTEXT" NVARCHAR2(2000), 
	"DC_CREATED_MAX" TIMESTAMP (6), 
	"DC_CREATED_MIN" TIMESTAMP (6), 
	"DC_MODIFIED_MAX" TIMESTAMP (6), 
	"DC_MODIFIED_MIN" TIMESTAMP (6)
   ) 


CREATE TABLE "FAVORISDOSSIER" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"TARGETDOCUMENT" NVARCHAR2(2000)
   ) 


CREATE TABLE "FAVORISINDEXATION" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"TYPEINDEXATION" NVARCHAR2(2000), 
	"NIVEAU1" NVARCHAR2(2000), 
	"NIVEAU2" NVARCHAR2(2000)
   ) 


CREATE TABLE "FEUILLE_ROUTE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"TITREQUESTION" NVARCHAR2(2000), 
	"DEMANDEVALIDATION" NUMBER(1,0), 
	"MINISTERE" NVARCHAR2(50), 
	"FEUILLEROUTEDEFAUT" NUMBER(1,0), 
	"TYPECREATION" NVARCHAR2(50), 
	"IDDIRECTIONPILOTE" NVARCHAR2(50), 
	"INTITULEDIRECTIONPILOTE" NVARCHAR2(2000)
   ) 


CREATE TABLE "FILE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"FILENAME" NVARCHAR2(2000)
   ) 


CREATE TABLE "FONDDOSSIER" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"REPERTOIRE_PARLEMENT" NVARCHAR2(2000), 
	"REPERTOIRE_MINISTERE" NVARCHAR2(2000), 
	"REPERTOIRE_SGG" NVARCHAR2(2000)
   ) 


CREATE TABLE "FSD_DC_COVERAGE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "CMDIST_ALL_COPY_PARTI_21AB3C5B" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "CMDIST_INITIAL_ACTION_4CD43708" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(100)
   ) 


CREATE TABLE "CMDIST_INITIAL_ACTION_88A481B7" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "CMDIST_INITIAL_COPY_E_B3610C04" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "CMDIST_INITIAL_COPY_I_D6588F7E" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "CMDOC_SENDERS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "COMMENT" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"AUTHOR" NVARCHAR2(2000), 
	"CREATIONDATE" TIMESTAMP (6), 
	"COMMENTEDDOCID" VARCHAR2(50 BYTE), 
	"TEXT" NVARCHAR2(2000)
   ) 


CREATE TABLE "COMMON" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"ICON" NVARCHAR2(2000), 
	"ICON-EXPANDED" NVARCHAR2(2000), 
	"SIZE" NUMBER(19,0)
   ) 


CREATE TABLE "CONTENT" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"NAME" NVARCHAR2(2000), 
	"LENGTH" NUMBER(19,0), 
	"DATA" VARCHAR2(40 BYTE), 
	"ENCODING" NVARCHAR2(2000), 
	"DIGEST" NVARCHAR2(2000), 
	"MIME-TYPE" NVARCHAR2(2000)
   ) 


CREATE TABLE "CONTENT_VIEW_DISPLAY" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"PAGESIZE" NUMBER(19,0)
   ) 


CREATE TABLE "STATISTIQUE_VALEUR" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE, 
	"IDRAPPORT" VARCHAR2(255 CHAR), 
	"LIBELLE" VARCHAR2(255 CHAR), 
	"REQUETE" VARCHAR2(255 CHAR), 
	"VALEUR" VARCHAR2(255 CHAR)
   ) 


CREATE TABLE "STATISTIQUE_DATE_PARCOURS" 
   (	"IDMINISTERE" NVARCHAR2(50), 
	"MINISTERE" NVARCHAR2(2000), 
	"ORIGINE" NVARCHAR2(50), 
	"NUMERO" NUMBER(19,0), 
	"DATEJO" TIMESTAMP (6), 
	"DATEJOREPONSE" TIMESTAMP (6), 
	"DATETRANSMISSIONMINISTERE" TIMESTAMP (6), 
	"DATETRANSMISSIONPARLEMENT" TIMESTAMP (6), 
	"DATESIGNALEMENTQUESTION" TIMESTAMP (6), 
	"EDITION" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_ETAT_ETAPE" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "BATCH_LOG" 
   (	"ID_LOG" NUMBER(19,0) NOT NULL ENABLE, 
	"END_TIME" TIMESTAMP (6), 
	"ERROR_COUNT" NUMBER(19,0) NOT NULL ENABLE, 
	"NAME" NVARCHAR2(255) NOT NULL ENABLE, 
	"PARENT_ID" NUMBER(19,0), 
	"SERVER" NVARCHAR2(255) NOT NULL ENABLE, 
	"START_TIME" TIMESTAMP (6) NOT NULL ENABLE, 
	"TOMCAT" NUMBER(19,0) NOT NULL ENABLE, 
	"TYPE" NVARCHAR2(255) NOT NULL ENABLE
   ) 


CREATE TABLE "BATCH_RESULT" 
   (	"ID_RESULT" NUMBER(19,0) NOT NULL ENABLE, 
	"ID_LOG" NUMBER(19,0) NOT NULL ENABLE, 
	"EXECUTION_RESULT" NUMBER(19,0), 
	"EXECUTION_TIME" NUMBER(19,0) NOT NULL ENABLE, 
	"TEXT" NVARCHAR2(2000) NOT NULL ENABLE
   ) 


CREATE TABLE "NOTIFICATIONS_SUIVI_BATCHS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"ETAT_NOTIFICATION" NUMBER(1,0)
   ) 


CREATE TABLE "NSB_RECEIVERMAILLIST" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "STATISTIQUE_ETAPE" 
   (	"DATEJO" TIMESTAMP (6), 
	"NUMERO" NUMBER(19,0), 
	"ORIGINE" NVARCHAR2(50), 
	"AUTEUR" NVARCHAR2(201), 
	"IDMINISTERE" VARCHAR2(255 BYTE), 
	"MINISTERE" NVARCHAR2(2000), 
	"IDDIRECTION" NVARCHAR2(50), 
	"DIRECTION" NVARCHAR2(2000), 
	"DATEJOREPONSE" TIMESTAMP (6), 
	"IDTYPE" NVARCHAR2(2000), 
	"TYPE" VARCHAR2(255 BYTE), 
	"POSTE" NVARCHAR2(2000), 
	"IDMAILBOX" VARCHAR2(255 BYTE), 
	"DATEDEBUT" TIMESTAMP (6), 
	"DATEFIN" TIMESTAMP (6), 
	"REPONDU" NUMBER(1,0), 
	"IDMINISTEREETAPE" VARCHAR2(2000 BYTE), 
	"IDMINISTERERATTACHEMENT" VARCHAR2(255 BYTE), 
	"INTITULEMINISTERERATTACHEMENT" NVARCHAR2(2000), 
	"VALIDATIONSTATUS" NVARCHAR2(2000), 
	"DATESIGNALEMENTQUESTION" TIMESTAMP (6), 
	"EDITION" NVARCHAR2(2000), 
	"EDITIONMINISTERERATTACHEMENT" NVARCHAR2(2000),
	"INTITULEDIRECTIONPILOTE" NVARCHAR2(2000)
   ) 


CREATE TABLE "EXPORT_DOCUMENT" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"DATEREQUEST" TIMESTAMP (6), 
	"OWNER" NVARCHAR2(2000)
   ) 


CREATE TABLE "INFO_UTILISATEUR_CONNECTION" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"USERNAME" NVARCHAR2(2000), 
	"ISLOGOUT" NUMBER(1,0), 
	"FIRSTNAME" NVARCHAR2(2000), 
	"DATECONNECTION" TIMESTAMP (6), 
	"LASTNAME" NVARCHAR2(2000), 
	"COURRIEL" NVARCHAR2(2000), 
	"TELEPHONE" NVARCHAR2(2000), 
	"MINISTERERATTACHEMENT" NVARCHAR2(2000), 
	"DIRECTION" NVARCHAR2(2000), 
	"POSTE" NVARCHAR2(2000), 
	"DATECREATION" TIMESTAMP (6), 
	"DATEDERNIERECONNEXION" TIMESTAMP (6)
   ) 


CREATE TABLE "JENA_SYS_STMT" 
   (	"SUBJ" NVARCHAR2(250) NOT NULL ENABLE, 
	"PROP" NVARCHAR2(250) NOT NULL ENABLE, 
	"OBJ" NVARCHAR2(250) NOT NULL ENABLE, 
	"GRAPHID" NUMBER(*,0)
   ) 


CREATE TABLE "JETON_DOC" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"TYPE_WEBSERVICE" NVARCHAR2(50), 
	"ID_JETON" NUMBER(19,0), 
	"ID_OWNER" VARCHAR2(50 BYTE), 
	"ID_DOC" VARCHAR2(50 BYTE), 
	"CREATED" TIMESTAMP (6), 
	"DATE_ATTRIBUTION" TIMESTAMP (6), 
	"MIN_ATTRIBUTION" NVARCHAR2(2000), 
	"TYPE_ATTRIBUTION" NVARCHAR2(2000)
   ) 


CREATE TABLE "JETON_MAITRE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"ID_PROPRIETAIRE" VARCHAR2(50 BYTE), 
	"TYPE_WEBSERVICE" NVARCHAR2(50), 
	"NUMERO_JETON" NUMBER(19,0)
   ) 


CREATE TABLE "LOCALTHEMECONFIG" 
   (	"ID" NUMBER(10,0) NOT NULL ENABLE, 
	"DOCID" VARCHAR2(255 CHAR), 
	"ENGINE" VARCHAR2(255 CHAR), 
	"THEMODE" VARCHAR2(255 CHAR), 
	"PAGE" VARCHAR2(255 CHAR), 
	"PERSPECTIVE" VARCHAR2(255 CHAR), 
	"THEME" VARCHAR2(255 CHAR)
   ) 


CREATE TABLE "LOCKS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"OWNER" VARCHAR2(250 BYTE), 
	"CREATED" TIMESTAMP (6)
   ) 


CREATE TABLE "MAIL" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"HTMLTEXT" NVARCHAR2(2000), 
	"MESSAGEID" NVARCHAR2(2000), 
	"TEXT" NVARCHAR2(2000), 
	"SENDER" NVARCHAR2(2000), 
	"SENDING_DATE" TIMESTAMP (6)
   ) 


CREATE TABLE "MAILBOX" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"ORIGIN" NVARCHAR2(2000), 
	"LASTSYNCUPDATE" TIMESTAMP (6), 
	"DEFAULTCONFIDENTIALITY" NUMBER(19,0), 
	"MAILBOX_ID" NVARCHAR2(2000), 
	"TYPE" NVARCHAR2(2000), 
	"SYNCHRONIZERID" NVARCHAR2(2000), 
	"AFFILIATED_MAILBOX_ID" NVARCHAR2(2000), 
	"OWNER" NVARCHAR2(2000), 
	"SYNCHRONIZEDSTATE" NVARCHAR2(2000)
   ) 


CREATE TABLE "MAILBOX_ID" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "MAIL_CC_RECIPIENTS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "MAIL_RECIPIENTS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "IXA_AN_RUBRIQUE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "IXACOMP_AN_ANALYSE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "IXACOMP_AN_RUBRIQUE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "IXACOMP_MOTCLEF_MINISTERE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "IXACOMP_SE_RENVOI" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "IXACOMP_SE_RUBRIQUE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "IXACOMP_SE_THEME" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "IXACOMP_TA_RUBRIQUE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "IXA_MOTCLEF_MINISTERE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "IXA_SE_RENVOI" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "country" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"parent" NVARCHAR2(2000), 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_LEGISLATURE" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"dateFin" TIMESTAMP (6), 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000), 
	"dateDebut" TIMESTAMP (6)
   ) 


CREATE TABLE "VOC_TYPE_QUESTION_RECHERCHE" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_ORIGINE_QUESTION" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_CARACT_QUESTION" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_GROUPE_POLITIQUE" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_CM_ROUTING_TASK_TYPE" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_STATUT_ETAPE_RECHERCHE" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_BOOLEAN" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_TA_RUBRIQUE" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"parent" NVARCHAR2(2000), 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "PARAMETER" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"PVALUE" NVARCHAR2(2000), 
	"PNAME" NVARCHAR2(2000)
   ) 


CREATE TABLE "PARAMETRE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"UNIT" NVARCHAR2(2000), 
	"VALUE" NVARCHAR2(2000)
   ) 


CREATE TABLE "PARTICIPANTLIST" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"TITLE" NVARCHAR2(2000), 
	"DESCRIPTION" NVARCHAR2(2000), 
	"PLID" NVARCHAR2(2000)
   ) 


CREATE TABLE "PROFIL_UTILISATEUR" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"PARAMETREMAIL" NVARCHAR2(2000), 
	"DERNIERECONNEXION" TIMESTAMP (6), 
	"DERNIERCHANGEMENTMOTDEPASSE" TIMESTAMP (6)
   ) 


CREATE TABLE "PROTOCOL" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"EMAIL" NVARCHAR2(2000), 
	"PORT" NVARCHAR2(2000), 
	"HOST" NVARCHAR2(2000), 
	"EMAILS_LIMIT" NUMBER(19,0), 
	"PASSWORD" NVARCHAR2(2000), 
	"SOCKET_FACTORY_FALLBACK" NUMBER(1,0), 
	"SOCKET_FACTORY_PORT" NVARCHAR2(2000), 
	"SSL_PROTOCOLS" NVARCHAR2(2000), 
	"STARTTLS_ENABLE" NUMBER(1,0), 
	"PROTOCOL_TYPE" NVARCHAR2(2000)
   ) 


CREATE TABLE "PROXIES" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"TARGETID" VARCHAR2(36 BYTE), 
	"VERSIONABLEID" VARCHAR2(36 BYTE)
   ) 


CREATE TABLE "PRU_COLUMNS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "PUBLISH_SECTIONS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "QUERYNAV" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"SUBJECTS" NVARCHAR2(2000), 
	"COVERAGE" NVARCHAR2(2000)
   ) 


CREATE TABLE "ACLR" 
   (	"ACL_ID" VARCHAR2(34 BYTE) NOT NULL ENABLE, 
	"ACL" VARCHAR2(4000 BYTE)
   ) 


CREATE TABLE "ACLR_MODIFIED" 
   (	"HIERARCHY_ID" VARCHAR2(36 BYTE), 
	"IS_NEW" NUMBER(1,0)
   ) 


CREATE TABLE "ACLR_PERMISSION" 
   (	"PERMISSION" VARCHAR2(250 BYTE)
   ) 


CREATE TABLE "ACLS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"NAME" VARCHAR2(250 BYTE), 
	"GRANT" NUMBER(1,0), 
	"PERMISSION" VARCHAR2(250 BYTE), 
	"USER" VARCHAR2(250 BYTE), 
	"GROUP" VARCHAR2(250 BYTE)
   ) 


CREATE TABLE "ACTIONNABLE_CASE_LINK" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"STEPDOCUMENTID" VARCHAR2(50 BYTE), 
	"VALIDATIONOPERATIONCHAINID" NVARCHAR2(2000), 
	"REFUSALOPERATIONCHAINID" NVARCHAR2(2000), 
	"DUEDATE" TIMESTAMP (6), 
	"TASKTYPE" NVARCHAR2(2000), 
	"AUTOMATICVALIDATION" NUMBER(1,0)
   ) 


CREATE TABLE "ADVANCED_SEARCH" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"TITLE" NVARCHAR2(2000), 
	"VALID_MAX" TIMESTAMP (6), 
	"EXPIRED_MIN" TIMESTAMP (6), 
	"FULLTEXT_NONE" NVARCHAR2(2000), 
	"FORMAT" NVARCHAR2(2000), 
	"ISCHECKEDINVERSION" NUMBER(1,0), 
	"VALID_MIN" TIMESTAMP (6), 
	"ISSUED_MAX" TIMESTAMP (6), 
	"EXPIRED_MAX" TIMESTAMP (6), 
	"CREATED_MIN" TIMESTAMP (6), 
	"CREATED_MAX" TIMESTAMP (6), 
	"FULLTEXT_PHRASE" NVARCHAR2(2000), 
	"MODIFIED_MAX" TIMESTAMP (6), 
	"FULLTEXT_ALL" NVARCHAR2(2000), 
	"SORTCOLUMN" NVARCHAR2(2000), 
	"DESCRIPTION" NVARCHAR2(2000), 
	"CURRENTLIFECYCLESTATE" NVARCHAR2(2000), 
	"SOURCE" NVARCHAR2(2000), 
	"SORTASCENDING" NUMBER(1,0), 
	"RIGHTS" NVARCHAR2(2000), 
	"LANGUAGE" NVARCHAR2(2000), 
	"ISSUED_MIN" TIMESTAMP (6), 
	"MODIFIED_MIN" TIMESTAMP (6), 
	"FULLTEXT_ONE_OF" NVARCHAR2(2000)
   ) 


CREATE TABLE "ALERT" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"DATEVALIDITYBEGIN" TIMESTAMP (6), 
	"ISACTIVATED" NUMBER(1,0), 
	"PERIODICITY" NVARCHAR2(2000), 
	"REQUETEID" NVARCHAR2(2000), 
	"DATEVALIDITYEND" TIMESTAMP (6), 
	"DATEDEMANDECONFIRMATION" TIMESTAMP (6), 
	"HASDEMANDECONFIRMATION" NUMBER(1,0)
   ) 


CREATE TABLE "ALLOT_IDDOSSIERS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "ALLOTISSEMENT" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"NOM" NVARCHAR2(2000)
   ) 


CREATE TABLE "HIERARCHY" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"PARENTID" VARCHAR2(36 BYTE), 
	"POS" NUMBER(10,0), 
	"NAME" NVARCHAR2(2000), 
	"ISPROPERTY" NUMBER(1,0), 
	"PRIMARYTYPE" VARCHAR2(250 BYTE), 
	"MIXINTYPES" VARCHAR2(250 BYTE), 
	"ISCHECKEDIN" NUMBER(1,0), 
	"BASEVERSIONID" VARCHAR2(36 BYTE), 
	"MAJORVERSION" NUMBER(19,0), 
	"MINORVERSION" NUMBER(19,0), 
	"ISVERSION" NUMBER(1,0)
   ) 


CREATE TABLE "REPLOGL_FULLLOG" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" CLOB
   ) 


CREATE TABLE "ANCESTORS" 
   (	"HIERARCHY_ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"ANCESTORS" "NX_STRING_TABLE" 
   ) 
 NESTED TABLE "ANCESTORS" STORE AS "ANCESTORS_ANCESTORS"
 RETURN AS VALUE


CREATE TABLE "ERRATUM#ANONYMOUSTYPE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"TEXTE_ERRATUM" NCLOB, 
	"DATEPUBLICATION" TIMESTAMP (6), 
	"PAGEJO" NUMBER(19,0), 
	"TEXTE_CONSOLIDE" NCLOB
   ) 


CREATE TABLE "FULLTEXT" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"JOBID" VARCHAR2(250 BYTE), 
	"FULLTEXT" CLOB, 
	"SIMPLETEXT" NCLOB, 
	"BINARYTEXT" NCLOB, 
	"FULLTEXT_IDQUESTION" CLOB, 
	"SIMPLETEXT_IDQUESTION" NCLOB, 
	"BINARYTEXT_IDQUESTION" NCLOB, 
	"FULLTEXT_TXTREPONSE" CLOB, 
	"SIMPLETEXT_TXTREPONSE" NCLOB, 
	"BINARYTEXT_TXTREPONSE" NCLOB, 
	"FULLTEXT_TXTQUESTION" CLOB, 
	"SIMPLETEXT_TXTQUESTION" NCLOB, 
	"BINARYTEXT_TXTQUESTION" NCLOB, 
	"FULLTEXT_SENATTITRE" CLOB, 
	"SIMPLETEXT_SENATTITRE" NCLOB, 
	"BINARYTEXT_SENATTITRE" NCLOB
   ) 


CREATE TABLE "JENA_LONG_LIT" 
   (	"ID" NUMBER(*,0) NOT NULL ENABLE, 
	"HEAD" NVARCHAR2(250) NOT NULL ENABLE, 
	"CHKSUM" NUMBER(*,0), 
	"TAIL" BLOB
   ) 


CREATE TABLE "JENA_LONG_URI" 
   (	"ID" NUMBER(*,0) NOT NULL ENABLE, 
	"HEAD" NVARCHAR2(250) NOT NULL ENABLE, 
	"CHKSUM" NUMBER(*,0), 
	"TAIL" BLOB
   ) 


CREATE TABLE "JENA_PREFIX" 
   (	"ID" NUMBER(*,0) NOT NULL ENABLE, 
	"HEAD" NVARCHAR2(250) NOT NULL ENABLE, 
	"CHKSUM" NUMBER(*,0), 
	"TAIL" BLOB
   ) 


CREATE TABLE "NOTE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"MIME_TYPE" NVARCHAR2(2000), 
	"NOTE" NCLOB
   ) 


CREATE TABLE "NXP_LOGS_EXTINFO" 
   (	"DISCRIMINATOR" VARCHAR2(31 CHAR) NOT NULL ENABLE, 
	"LOG_EXTINFO_ID" NUMBER(19,0) NOT NULL ENABLE, 
	"LOG_EXTINFO_STRING" VARCHAR2(255 CHAR), 
	"LOG_EXTINFO_BOOLEAN" NUMBER(1,0), 
	"LOG_EXTINFO_DOUBLE" FLOAT(126), 
	"LOG_EXTINFO_LONG" NUMBER(19,0), 
	"LOG_EXTINFO_DATE" TIMESTAMP (6), 
	"LOG_EXTINFO_BLOB" BLOB
   ) 


CREATE TABLE "QRTZ_TRIGGERS" 
   (	"SCHED_NAME" VARCHAR2(120 BYTE) NOT NULL ENABLE, 
	"TRIGGER_NAME" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"TRIGGER_GROUP" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"JOB_NAME" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"JOB_GROUP" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(250 BYTE), 
	"NEXT_FIRE_TIME" NUMBER(13,0), 
	"PREV_FIRE_TIME" NUMBER(13,0), 
	"PRIORITY" NUMBER(13,0), 
	"TRIGGER_STATE" VARCHAR2(16 BYTE) NOT NULL ENABLE, 
	"TRIGGER_TYPE" VARCHAR2(8 BYTE) NOT NULL ENABLE, 
	"START_TIME" NUMBER(13,0) NOT NULL ENABLE, 
	"END_TIME" NUMBER(13,0), 
	"CALENDAR_NAME" VARCHAR2(200 BYTE), 
	"MISFIRE_INSTR" NUMBER(2,0), 
	"JOB_DATA" BLOB
   ) 


CREATE TABLE "QRTZ_BLOB_TRIGGERS" 
   (	"SCHED_NAME" VARCHAR2(120 BYTE) NOT NULL ENABLE, 
	"TRIGGER_NAME" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"TRIGGER_GROUP" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"BLOB_DATA" BLOB
   ) 


CREATE TABLE "QRTZ_CALENDARS" 
   (	"SCHED_NAME" VARCHAR2(120 BYTE) NOT NULL ENABLE, 
	"CALENDAR_NAME" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"CALENDAR" BLOB NOT NULL ENABLE
   ) 


CREATE TABLE "ETAT_APPLICATION" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"DESCRIPTION_RESTRICTION" NVARCHAR2(2000), 
	"RESTRICTION_ACCES" NUMBER(1,0), 
	"AFFICHAGE" NUMBER(1,0), 
	"MESSAGE" CLOB
   ) 


CREATE TABLE "REPLOGD_FULLLOG" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" CLOB
   ) 


CREATE TABLE "QUESTION" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"ETATQUESTION" NVARCHAR2(100), 
	"INTITULEMINISTERE" NVARCHAR2(2000), 
	"ETATRENOUVELE" NUMBER(1,0), 
	"LEGISLATUREQUESTION" NUMBER(19,0), 
	"IDMANDAT" NVARCHAR2(10), 
	"HASHCONNEXITETEXTE" NVARCHAR2(50), 
	"DATECADUCITEQUESTION" TIMESTAMP (6), 
	"ETATSIGNALE" NUMBER(1,0), 
	"NOMCOMPLETAUTEUR" NVARCHAR2(201), 
	"ORIGINEQUESTION" NVARCHAR2(50), 
	"ETATRAPPELE" NUMBER(1,0), 
	"SOURCENUMEROQUESTION" NVARCHAR2(100), 
	"DATEPUBLICATIONJO" TIMESTAMP (6), 
	"ETATNONRETIRE" NUMBER(1,0), 
	"ETATSQUESTION" NVARCHAR2(10), 
	"PAGEJO" NVARCHAR2(19), 
	"ETATRETIRE" NUMBER(1,0), 
	"DATETRANSMISSIONASSEMBLEES" TIMESTAMP (6), 
	"DATERETRAITQUESTION" TIMESTAMP (6), 
	"TITREJOMINISTERE" NVARCHAR2(2000), 
	"TEXTE_JOINT" NVARCHAR2(2000), 
	"DATERENOUVELLEMENTQUESTION" TIMESTAMP (6), 
	"SENATQUESTIONTITRE" NVARCHAR2(2000), 
	"IDMINISTEREINTERROGE" NVARCHAR2(50), 
	"HASHCONNEXITEAN" NVARCHAR2(50), 
	"CIRCONSCRIPTIONAUTEUR" NVARCHAR2(100), 
	"GROUPEPOLITIQUE" NVARCHAR2(200), 
	"HASREPONSEINITIEE" NUMBER(1,0), 
	"DATERECEPTIONQUESTION" TIMESTAMP (6), 
	"HASHCONNEXITESE" NVARCHAR2(50), 
	"TEXTEQUESTION" NCLOB, 
	"MOTSCLES" NVARCHAR2(2000), 
	"CIVILITEAUTEUR" NVARCHAR2(10), 
	"NOMAUTEUR" NVARCHAR2(100), 
	"HASHCONNEXITETITRE" NVARCHAR2(50), 
	"ETATREATTRIBUE" NUMBER(1,0), 
	"PRENOMAUTEUR" NVARCHAR2(100), 
	"TYPEQUESTION" NVARCHAR2(100), 
	"CARACTERISTIQUEQUESTION" NVARCHAR2(50), 
	"NUMEROQUESTION" NUMBER(19,0), 
	"IDMINISTEREATTRIBUTAIRE" NVARCHAR2(50), 
	"INTITULEMINISTEREATTRIBUTAIRE" NVARCHAR2(2000), 
	"DATESIGNALEMENTQUESTION" TIMESTAMP (6), 
	"DATECLOTUREQUESTION" TIMESTAMP (6), 
	"DATERAPPELQUESTION" TIMESTAMP (6), 
	"IDMINISTERERATTACHEMENT" NVARCHAR2(50), 
	"INTITULEMINISTERERATTACHEMENT" NVARCHAR2(2000), 
	"IDDIRECTIONPILOTE" NVARCHAR2(50), 
	"INTITULEDIRECTIONPILOTE" NVARCHAR2(2000), 
	"CONNEXITE" NUMBER(19,0) DEFAULT 0
   ) 


CREATE TABLE "REPONSE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"PAGEJOREPONSE" NUMBER(19,0), 
	"IDENTIFIANT" NUMBER(19,0), 
	"NUMEROJOREPONSE" NUMBER(19,0), 
	"AN_RUBRIQUE" NVARCHAR2(2000), 
	"ISSIGNATUREVALIDE" NUMBER(1,0), 
	"SIGNATURE" NCLOB, 
	"IDAUTEURREPONSE" NVARCHAR2(2000), 
	"IDAUTEURREMOVESIGNATURE" NVARCHAR2(2000), 
	"VERROU" NVARCHAR2(2000), 
	"DATEPUBLICATIONJOREPONSE" TIMESTAMP (6), 
	"DATEVALIDATION" TIMESTAMP (6), 
	"ERRATUM" NCLOB
   ) 


CREATE TABLE "WEBCONTAINER" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"USECAPTCHA" NUMBER(1,0), 
	"WELCOMETEXT" NCLOB, 
	"THEME" NVARCHAR2(2000), 
	"ISWEBCONTAINER" NUMBER(1,0), 
	"BASELINE" NVARCHAR2(2000), 
	"TEMPLATE" NVARCHAR2(2000), 
	"THEMEPERSPECTIVE" NVARCHAR2(2000), 
	"THEMEPAGE" NVARCHAR2(2000), 
	"NAME" NVARCHAR2(2000), 
	"MODERATIONTYPE" NVARCHAR2(2000), 
	"URL" NVARCHAR2(2000), 
	"EMAIL" NVARCHAR2(2000)
   ) 


CREATE TABLE "QRTZ_JOB_DETAILS" 
   (	"SCHED_NAME" VARCHAR2(120 BYTE) NOT NULL ENABLE, 
	"JOB_NAME" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"JOB_GROUP" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(250 BYTE), 
	"JOB_CLASS_NAME" VARCHAR2(250 BYTE) NOT NULL ENABLE, 
	"IS_DURABLE" VARCHAR2(1 BYTE) NOT NULL ENABLE, 
	"IS_NONCONCURRENT" VARCHAR2(1 BYTE) NOT NULL ENABLE, 
	"IS_UPDATE_DATA" VARCHAR2(1 BYTE) NOT NULL ENABLE, 
	"REQUESTS_RECOVERY" VARCHAR2(1 BYTE) NOT NULL ENABLE, 
	"JOB_DATA" BLOB
   ) 


-- new object type path: SCHEMA_EXPORT/FUNCTION/FUNCTION
-- CONNECT REPONSES_INTE
CREATE FUNCTION "NEW_UUID" (guid_in VARCHAR2) RETURN VARCHAR2 AS
 BEGIN
  RETURN SUBSTR (guid_in, 1, 8)|| '+'|| SUBSTR (guid_in, 9, 4)|| '+'|| SUBSTR (guid_in, 13, 4)|| '+'|| SUBSTR (guid_in, 17, 4)|| '+'|| SUBSTR (guid_in, 21);
END;


CREATE FUNCTION "NX_ACCESS_ALLOWED" (id VARCHAR2, users NX_STRING_TABLE, permissions NX_STRING_TABLE)
RETURN NUMBER IS
  curid hierarchy.id%TYPE := id;
  newid hierarchy.id%TYPE;
  first BOOLEAN := TRUE;
BEGIN
  WHILE curid IS NOT NULL LOOP
    FOR r IN (SELECT * FROM acls WHERE acls.id = curid ORDER BY acls.pos) LOOP
      IF r.permission MEMBER OF permissions AND r.user MEMBER OF users THEN
        RETURN r."GRANT";
      END IF;
    END LOOP;
    SELECT parentid INTO newid FROM hierarchy WHERE hierarchy.id = curid;
    IF first AND newid IS NULL THEN
      SELECT versionableid INTO newid FROM versions WHERE versions.id = curid;
    END IF;
    first := FALSE;
    curid := newid;
  END LOOP;
  RETURN 0;
END;


CREATE FUNCTION NX_ANCESTORS(ids NX_STRING_TABLE)
RETURN NX_STRING_TABLE PIPELINED
IS
  id hierarchy.id%TYPE;
  curid hierarchy.id%TYPE;
BEGIN
  FOR i IN ids.FIRST .. ids.LAST LOOP
    curid := ids(i);
    LOOP
      SELECT parentid INTO curid FROM hierarchy WHERE hierarchy.id = curid;
      EXIT WHEN curid IS NULL;
      PIPE ROW(curid);
    END LOOP;
  END LOOP;
END;


CREATE FUNCTION "NX_GET_ANCESTORS" (id VARCHAR2)
RETURN NX_STRING_TABLE
IS
  curid hierarchy.id%TYPE := id;
  newid hierarchy.id%TYPE;
  ret NX_STRING_TABLE := NX_STRING_TABLE();
  first BOOLEAN := TRUE;
BEGIN
  WHILE curid IS NOT NULL LOOP
    BEGIN
      SELECT parentid INTO newid FROM hierarchy WHERE hierarchy.id = curid;
    EXCEPTION WHEN NO_DATA_FOUND THEN
      -- curid not in hierarchy at all
      newid := NULL;
    END;
    IF curid IS NOT NULL AND curid <> id THEN
      ret.EXTEND;
      ret(ret.COUNT) := curid;
    END IF;
    IF first AND newid IS NULL THEN
      BEGIN
        SELECT versionableid INTO newid FROM versions WHERE versions.id = curid;
      EXCEPTION
        WHEN NO_DATA_FOUND THEN NULL;
      END;
    END IF;
    first := FALSE;
    curid := newid;
  END LOOP;
  RETURN ret;
END;


create or replace FUNCTION "NX_GET_READ_ACL"(id VARCHAR2)
RETURN VARCHAR2
-- Compute the merged read acl for a doc id
IS
  curid acls.id%TYPE := id;
  newid acls.id%TYPE;
  acl VARCHAR2(32767) := NULL;
  first BOOLEAN := TRUE;
  sep VARCHAR2(1) := '|';
BEGIN
  WHILE curid IS NOT NULL LOOP
    FOR r in (SELECT * FROM RLACL WHERE HIERARCHY_ID = curid) LOOP
      IF acl IS NOT NULL THEN
         acl := acl || sep;
      END IF;
      if r.ACL IS NOT NULL THEN
         acl := acl || r.acl;
      END IF;
    END LOOP;
    -- recurse into parent
    BEGIN
      SELECT parentid INTO newid FROM hierarchy WHERE hierarchy.id = curid;
    EXCEPTION WHEN NO_DATA_FOUND THEN
      -- curid not in hierarchy at all
      newid := NULL;
    END;
    IF first AND newid IS NULL THEN
      BEGIN
        SELECT versionableid INTO newid FROM versions WHERE versions.id = curid;
      EXCEPTION
        WHEN NO_DATA_FOUND THEN NULL;
      END;
    END IF;
    first := FALSE;
    curid := newid;
  END LOOP;
  RETURN acl;
END;
/
;


CREATE FUNCTION "NX_GET_READ_ACLS_FOR" (users NX_STRING_TABLE)
RETURN NX_STRING_TABLE
-- List read acl ids for a list of user/groups, using the cache
IS
  user_md5 VARCHAR2(34) := sw_retrieve_user(users);
BEGIN
  RETURN SW_GET_READ_ACLS_FOR(user_md5);
END;


CREATE FUNCTION "NX_GET_READ_ACL_ID" (id VARCHAR2)
RETURN VARCHAR2
IS
BEGIN
  RETURN nx_hash(nx_get_read_acl(id));
END;


CREATE FUNCTION "NX_HASH" (string VARCHAR2)
RETURN VARCHAR2
IS
BEGIN
  -- hash function 1 is MD4 (faster than 2 = MD5)
  RETURN DBMS_CRYPTO.HASH(UTL_I18N.STRING_TO_RAW(string, 'AL32UTF8'), 1);
END;


CREATE FUNCTION "NX_HASH_USERS" (users NX_STRING_TABLE)
RETURN VARCHAR2
IS
  s VARCHAR2(32767) := NULL;
  sep VARCHAR2(1) := '|';
BEGIN
  -- TODO use canonical (sorted) order for users
  FOR i IN users.FIRST .. users.LAST LOOP
    IF s IS NOT NULL THEN
      s := s || sep;
    END IF;
    s := s || users(i);
  END LOOP;
  RETURN nx_hash(s);
END;


CREATE FUNCTION "NX_IN_TREE" (id VARCHAR2, baseid VARCHAR2)
RETURN NUMBER IS
  curid hierarchy.id%TYPE := id;
BEGIN
  IF baseid IS NULL OR id IS NULL OR baseid = id THEN
    RETURN 0;
  END IF;
  LOOP
    SELECT parentid INTO curid FROM hierarchy WHERE hierarchy.id = curid;
    IF curid IS NULL THEN
      RETURN 0;
    ELSIF curid = baseid THEN
      RETURN 1;
    END IF;
  END LOOP;
END;


CREATE FUNCTION "NX_LIST_READ_ACLS_FOR" (users NX_STRING_TABLE)
RETURN NX_STRING_TABLE
-- List matching read acl ids for a list of user/groups
IS
  negusers NX_STRING_TABLE := NX_STRING_TABLE();
  aclusers NX_STRING_ARRAY;
  acluser VARCHAR2(32767);
  aclids NX_STRING_TABLE := NX_STRING_TABLE();
  sep VARCHAR2(1) := '|';
BEGIN
  -- Build a black list with negative users
  FOR n IN users.FIRST .. users.LAST LOOP
    negusers.EXTEND;
    negusers(n) := '-' || users(n);
  END LOOP;
  -- find match
  FOR r IN (SELECT acl_id, acl FROM aclr) LOOP
    aclusers := split(r.acl, sep);
    FOR i IN aclusers.FIRST .. aclusers.LAST LOOP
      acluser := aclusers(i);
      IF acluser MEMBER OF users THEN
        -- grant
        aclids.EXTEND;
        aclids(aclids.COUNT) := r.acl_id;
        GOTO next_acl;
      END IF;
      IF acluser MEMBER OF negusers THEN
        -- deny
        GOTO next_acl;
      END IF;
    END LOOP;
    <<next_acl>> NULL;
  END LOOP;
  RETURN aclids;
END;


CREATE FUNCTION NX_NODEID
RETURN VARCHAR
IS
  cursid NUMBER := SYS_CONTEXT('USERENV', 'SID');
  curser NUMBER;
BEGIN
  SELECT SERIAL# INTO curser FROM GV$SESSION WHERE SID = cursid AND INST_ID = SYS_CONTEXT('USERENV', 'INSTANCE');
  RETURN cursid || ',' || curser;
END;


CREATE FUNCTION "SPLIT" (string VARCHAR2, sep VARCHAR2)
RETURN NX_STRING_ARRAY
-- splits a string, order matters
IS
  pos PLS_INTEGER := 1;
  len PLS_INTEGER := NVL(LENGTH(string), 0);
  i PLS_INTEGER;
  res NX_STRING_ARRAY := NX_STRING_ARRAY();
BEGIN
  WHILE pos <= len LOOP
    i := INSTR(string, sep, pos);
    IF i = 0 THEN i := len + 1; END IF;
    res.EXTEND;
    res(res.COUNT) := SUBSTR(string, pos, i - pos);
    pos := i + 1;
  END LOOP;
  RETURN res;
END;


CREATE function SQUIRREL_GET_ERROR_OFFSET (query IN varchar2) return number authid current_user is      l_theCursor     integer default dbms_sql.open_cursor;      l_status        integer; begin          begin          dbms_sql.parse(  l_theCursor, query, dbms_sql.native );          exception                  when others then l_status := dbms_sql.last_error_position;          end;          dbms_sql.close_cursor( l_theCursor );          return l_status; end; 


CREATE FUNCTION "SW_GET_READ_ACLS_FOR" (userid VARCHAR)
RETURN NX_STRING_TABLE
-- List read acl ids for a list of user/groups, using the cache
IS
  in_cache NUMBER;
  aclids NX_STRING_TABLE;
BEGIN
        select distinct a.acl_id BULK COLLECT INTO aclids FROM SW_ACLR_USERID_USER u, SW_ACLR_USER_ACLID a
        WHERE u.USERGROUP = a.USERGROUP  AND REGEXP_LIKE(a.acl_id,'*[A-Z0-9]*','i') AND u.USER_ID= userid;
        RETURN aclids;
END;


CREATE FUNCTION SW_RETRIEVE_USER(usergroups NX_STRING_TABLE)
RETURN VARCHAR
IS
        PRAGMA AUTONOMOUS_TRANSACTION; -- needed for insert, ok since what we fill is a cache
        user_md5 VARCHAR2(34) := nx_hash_users(usergroups);
        is_decl number := 0;
BEGIN
        select count(*) INTO is_decl FROM SW_ACLR_USERID_USER WHERE user_id = user_md5;
        IF is_decl = 0 THEN
                -- DBMS_OUTPUT.PUT_LINE('sw_add_user : '||user_md5);
                INSERT INTO SW_ACLR_USERID_USER (select user_md5, column_value from TABLE(usergroups));
                FOR t in (select t.column_value AS c from TABLE(usergroups)  t WHERE NOT EXISTS(SELECT 1 FROM SW_ACLR_USER_ACLID  WHERE usergroup = t.column_value)) LOOP
                        SW_FILL_ACLID(t.c);
                END LOOP;
                COMMIT;
        -- ELSE
                -- DBMS_OUTPUT.PUT_LINE('skip_user : '||user_md5);
        END IF;
        RETURN user_md5;
END;


-- new object type path: SCHEMA_EXPORT/PROCEDURE/PROCEDURE
CREATE procedure affiche_espace_occupe_index(a_index varchar2) is
l_unformatted_blocks number;
l_unformatted_bytes number;
l_fs1_blocks number;
l_fs1_bytes number;
l_fs2_blocks number;
l_fs2_bytes number;
l_fs3_blocks number;
l_fs3_bytes number;
l_fs4_blocks number;
l_fs4_bytes number;
l_full_blocks number;
l_full_bytes number;
procedure affiche(a_nom in varchar2, a_valeur in number) is
begin
dbms_output.put_line(rpad(a_nom,40,'.') || to_char(a_valeur,'999G999G999G999'));
end;
begin
dbms_space.space_usage(user,upper(a_index),'INDEX',l_unformatted_blocks,l_unformatted_bytes,
l_fs1_blocks,l_fs1_bytes,l_fs2_blocks, l_fs2_bytes,l_fs3_blocks,l_fs3_bytes,l_fs4_blocks,
l_fs4_bytes,l_full_blocks,l_full_bytes);
affiche('Non formates		:' , l_unformatted_blocks);
affiche('Blocs 0 a 25% 		:',l_fs1_blocks);
affiche('Blocs 25 a 50% 		:',l_fs2_blocks);
affiche('Blocs 50 a 75% 		:',l_fs3_blocks);
affiche('Blocs 75 a 100% 	:',l_fs4_blocks);
affiche('Blocs complets		:',l_full_blocks);
end;


CREATE procedure affiche_espace_occupe_table(a_table varchar2) is
l_unformatted_blocks number;
l_unformatted_bytes number;
l_fs1_blocks number;
l_fs1_bytes number;
l_fs2_blocks number;
l_fs2_bytes number;
l_fs3_blocks number;
l_fs3_bytes number;
l_fs4_blocks number;
l_fs4_bytes number;
l_full_blocks number;
l_full_bytes number;
procedure affiche(a_nom in varchar2, a_valeur in number) is
begin
dbms_output.put_line(rpad(a_nom,40,'.') || to_char(a_valeur,'999G999G999G999'));
end;
begin
dbms_space.space_usage(user,upper(a_table),'TABLE',l_unformatted_blocks,l_unformatted_bytes,
l_fs1_blocks,l_fs1_bytes,l_fs2_blocks, l_fs2_bytes,l_fs3_blocks,l_fs3_bytes,l_fs4_blocks,
l_fs4_bytes,l_full_blocks,l_full_bytes);
affiche('Non formates		:' , l_unformatted_blocks);
affiche('Blocs 0 a 25% 		:',l_fs1_blocks);
affiche('Blocs 25 a 50% 		:',l_fs2_blocks);
affiche('Blocs 50 a 75% 		:',l_fs3_blocks);
affiche('Blocs 75 a 100% 	:',l_fs4_blocks);
affiche('Blocs complets		:',l_full_blocks);
end;


CREATE PROCEDURE computePrecomptage AS
BEGIN
	delete from RMLBX_PRECALCULLIST;
	DBMS_OUTPUT.PUT_LINE('start genPrecomptage');
	FOR rep in (select rep.id from hierarchy rep where rep.primarytype = 'ReponsesMailbox') LOOP
		computePrecomptageMailbox(rep.id);
	END LOOP;
END;


CREATE PROCEDURE computePrecomptageMailbox(mailboxDocId VARCHAR2) AS
BEGIN
	DBMS_OUTPUT.PUT_LINE('genPrecomptage for '||mailboxDocId);
	DELETE FROM RMLBX_PRECALCULLIST WHERE ID = mailboxDocId;
	INSERT INTO RMLBX_PRECALCULLIST(ID,ITEM) SELECT H.PARENTID, idMinistereAttributaire  || ':' || routingTaskType || ':' || count(*)
		FROM HIERARCHY H, DOSSIER_REPONSES_LINK L, MISC M WHERE H.ID = L.ID AND H.PARENTID = mailboxDocId
		AND H.ID = M.ID AND M.LIFECYCLESTATE = 'todo'
		GROUP BY H.PARENTID, L.idMinistereAttributaire, L.routingTaskType;
	INSERT INTO CLUSTER_INVALS (SELECT NODEID, mailboxDocId, 'rmlbx:preCalculList', 1 FROM CLUSTER_NODES);
END;


CREATE PROCEDURE "INIT_INDEX"
IS
BEGIN
	CTXSYS.CTX_DDL.CREATE_PREFERENCE ('REP_LEXER', 'BASIC_LEXER');
	CTXSYS.CTX_DDL.SET_ATTRIBUTE ('REP_LEXER', 'base_letter', 'YES');
	CTXSYS.CTX_DDL.SET_ATTRIBUTE ('REP_LEXER', 'index_stems', 'FRENCH');
 	CTXSYS.CTX_DDL.CREATE_PREFERENCE('REP_WORDLIST', 'BASIC_WORDLIST');
	CTXSYS.CTX_DDL.SET_ATTRIBUTE('REP_WORDLIST', 'stemmer', 'FRENCH');
	CTXSYS.CTX_DDL.SET_ATTRIBUTE('REP_WORDLIST', 'substring_index', 'NO');
	CTXSYS.CTX_DDL.SET_ATTRIBUTE('REP_WORDLIST', 'prefix_index', 'NO');
END;


CREATE PROCEDURE NX_CLUSTER_INVAL(i VARCHAR2, f VARCHAR2, k INTEGER, nid VARCHAR)
IS
BEGIN
  FOR c IN (SELECT nodeid FROM cluster_nodes WHERE nodeid <> nid) LOOP
    INSERT INTO cluster_invals (nodeid, id, fragments, kind) VALUES (c.nodeid, i, f, k);
  END LOOP;
END;


CREATE PROCEDURE "NX_INIT_ANCESTORS"
IS
BEGIN
  EXECUTE IMMEDIATE 'TRUNCATE TABLE ancestors';
  INSERT INTO ancestors
    SELECT id, nx_get_ancestors(id)
    FROM (SELECT id FROM hierarchy WHERE isproperty=0);
END;


CREATE PROCEDURE "NX_REBUILD_READ_ACLS"
-- Rebuild the read acls tables
IS
BEGIN
  EXECUTE IMMEDIATE 'TRUNCATE TABLE aclr';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE hierarchy_read_acl';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE aclr_modified';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE SW_ACLR_USERID_USER';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE SW_ACLR_USER_ACLID';
  INSERT INTO hierarchy_read_acl
    SELECT id, nx_get_read_acl_id(id)
      FROM (SELECT id FROM hierarchy WHERE isproperty = 0);
END;


CREATE PROCEDURE "NX_UPDATE_READ_ACLS"
IS
  update_count PLS_INTEGER
;BEGIN
 MERGE INTO RLACL t
    USING (SELECT id, LISTAGG(CASE WHEN a."GRANT" = 0 THEN '-' ELSE '' END || a."USER", '|') WITHIN GROUP (ORDER BY pos) AS l
				FROM acls a, ACLR_PERMISSION p WHERE a.permission = p.permission 
        and a.id in (SELECT DISTINCT(m.hierarchy_id) id FROM aclr_modified m)
        group by id) s
    ON (t.hierarchy_id = s.id)
	WHEN MATCHED THEN UPDATE SET acl = s.l
    WHEN NOT MATCHED THEN INSERT (hierarchy_id, acl) VALUES (s.id, s.l)
;MERGE INTO hierarchy_read_acl t
    USING (SELECT DISTINCT(m.hierarchy_id) id
            FROM aclr_modified m
            JOIN hierarchy h ON m.hierarchy_id = h.id
            WHERE m.is_new = 1) s
    ON (t.id = s.id)
    WHEN NOT MATCHED THEN
      INSERT (id, acl_id) VALUES (s.id, nx_get_read_acl_id(s.id))
;DELETE FROM aclr_modified WHERE is_new = 1
;MERGE INTO HIERARCHY_READ_ACL t
    USING (
      WITH recursiveRA
     (hid, hacl) AS
       (SELECT parent.id, nx_get_read_acl(id) as hacl
        FROM hierarchy parent
        WHERE parent.id in (SELECT distinct(HIERARCHY_ID) FROM ACLR_MODIFIED)
        UNION ALL
        SELECT child.id, case when a.acl IS null THEN parent.hacl ELSE a.ACL || '|' || parent.HACL END
        FROM recursiveRA parent, hierarchy child
        LEFT OUTER JOIN RLACL a ON a.HIERARCHY_ID = child.id
        WHERE child.parentid = parent.hid
        )
      SELECT hid, hacl
      FROM recursiveRA
    ) s
    ON (t.id = s.hid)
    WHEN MATCHED THEN 
      UPDATE SET acl_id = nx_hash(s.hacl)
;DELETE FROM aclr_modified
;END
;


CREATE PROCEDURE "NX_VACUUM_READ_ACLS"
-- Remove unused read acls entries
IS
BEGIN
  -- nx_vacuum_read_acls vacuuming
  DELETE FROM aclr WHERE acl_id IN (SELECT r.acl_id FROM aclr r
    JOIN hierarchy_read_acl h ON r.acl_id=h.acl_id
    WHERE h.acl_id IS NULL);
  EXECUTE IMMEDIATE 'TRUNCATE TABLE aclr_modified';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE SW_ACLR_USERID_USER';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE SW_ACLR_USER_ACLID';
END;


CREATE PROCEDURE SW_FILL_ACLID(usergroup VARCHAR) IS
  negusers NX_STRING_TABLE := NX_STRING_TABLE();
  aclusers NX_STRING_ARRAY;
  acluser VARCHAR2(32767);
  aclids NX_STRING_TABLE := NX_STRING_TABLE();
  sep VARCHAR2(1) := '|';
BEGIN
  -- Build a black list with negative users
  negusers.EXTEND;
  negusers(1) := '-' || usergroup;
  --
  -- find match
  FOR r IN (SELECT acl_id, acl FROM aclr) LOOP
    aclusers := split(r.acl, sep);
    FOR i IN aclusers.FIRST .. aclusers.LAST LOOP
      acluser := aclusers(i);
      IF acluser = usergroup THEN
        -- grant
        aclids.EXTEND;
        aclids(aclids.COUNT) := r.acl_id;
        GOTO next_acl;
      END IF;
      IF acluser MEMBER OF negusers THEN
        -- deny
        GOTO next_acl;
      END IF;
    END LOOP;
    <<next_acl>> NULL;
  END LOOP;
  --
  IF aclids.COUNT = 0 THEN
    INSERT INTO SW_ACLR_USER_ACLID VALUES(usergroup, NULL);
  ELSE
    INSERT INTO SW_ACLR_USER_ACLID (SELECT usergroup, COLUMN_VALUE FROM TABLE (aclids));
  END IF;
END;


CREATE PROCEDURE "SW_REBUILD_MISSING_READ_ACLS"
-- Rebuild the missing read acls in hierarchy_read_acl
IS
BEGIN
  INSERT INTO hierarchy_read_acl
    SELECT id, nx_get_read_acl_id(id)
      FROM (select h.id from HIERARCHY h left join hierarchy_read_acl hr on h.id = hr.id where h.ISPROPERTY = 0 and hr.id is null);
END;


CREATE PROCEDURE "UPDATE_CONNEXITE"
IS
BEGIN
     DBMS_OUTPUT.PUT_LINE('start updateConnexite');
      update question set connexite=0;
       FOR connexitean in (SELECT COUNT(1) AS nbre_doublon, hashconnexitean as texte FROM question where hashconnexitean is not null GROUP BY hashconnexitean) LOOP
    IF connexitean.nbre_doublon > 1 THEN
     update question q set q.connexite = q.connexite + connexitean.nbre_doublon where q.hashconnexitean = connexitean.texte;
    END IF;
  END LOOP;
  FOR connexitetitre in (SELECT COUNT(1) AS nbre_doublon, hashconnexitetitre as texte FROM question where hashconnexitetitre is not null GROUP BY hashconnexitetitre) LOOP
    IF connexitetitre.nbre_doublon > 1 THEN
      update question q set q.connexite = q.connexite + connexitetitre.nbre_doublon where q.hashconnexitean = connexitetitre.texte;
    END IF;
   END LOOP;
  FOR connexitetexte in (SELECT COUNT(1) AS nbre_doublon, hashconnexitetexte as texte FROM question where hashconnexitetexte is not null GROUP BY hashconnexitetexte) LOOP
    IF connexitetexte.nbre_doublon > 1 THEN
     update question q set q.connexite = q.connexite + connexitetexte.nbre_doublon where q.hashconnexitean = connexitetexte.texte;
    END IF;
   END LOOP;
    FOR connexitese in (SELECT COUNT(1) AS doublette,HASHCONNEXITESE as hashSE FROM question where HASHCONNEXITESE  is not null GROUP BY HASHCONNEXITESE) LOOP
    IF connexitese.doublette > 1 THEN
      update question p set p.connexite = p.connexite + connexitese.doublette where p.HASHCONNEXITESE = CONNEXITESE.hashSE;
    END IF;
   END LOOP;
 FOR connexitetitre in (SELECT COUNT(1) AS nbre_doublon, hashconnexitetitre as hashSE FROM question where hashconnexitetitre is not null GROUP BY hashconnexitetitre) LOOP
    IF connexitetitre.nbre_doublon > 1 THEN
      update question p set p.connexite = p.connexite + connexitetitre.nbre_doublon  where  p.HASHCONNEXITESE  = connexitetitre.hashSE;
    END IF;
   END LOOP;
  FOR connexitetexte in (SELECT COUNT(1) AS nbre_doublon, hashconnexitetexte as hashSE FROM question where hashconnexitetexte is not null GROUP BY hashconnexitetexte) LOOP
    IF connexitetexte.nbre_doublon > 1 THEN
    update question p set p.connexite = p.connexite + connexitetexte.nbre_doublon  where  p.HASHCONNEXITESE  = connexitetexte.hashSE;
    END IF;
   END LOOP;
   DBMS_OUTPUT.PUT_LINE('end updateConnexite');
END;


-- new object type path: SCHEMA_EXPORT/FUNCTION/ALTER_FUNCTION
ALTER FUNCTION "NX_ACCESS_ALLOWED" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
 REUSE SETTINGS TIMESTAMP '2018-03-08 16:51:24'


ALTER FUNCTION "NX_GET_ANCESTORS" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
 REUSE SETTINGS TIMESTAMP '2018-03-08 16:51:24'


ALTER FUNCTION "NX_GET_READ_ACLS_FOR" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
 REUSE SETTINGS TIMESTAMP '2018-03-08 16:51:24'


ALTER FUNCTION "NX_HASH" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
 REUSE SETTINGS TIMESTAMP '2018-03-08 16:51:24'


ALTER FUNCTION "NX_IN_TREE" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
 REUSE SETTINGS TIMESTAMP '2018-03-08 16:51:24'


ALTER FUNCTION "NX_NODEID" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
 REUSE SETTINGS TIMESTAMP '2018-03-08 16:51:24'


ALTER FUNCTION "SW_GET_READ_ACLS_FOR" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
 REUSE SETTINGS TIMESTAMP '2018-03-08 16:51:24'


ALTER FUNCTION "SQUIRREL_GET_ERROR_OFFSET" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
 REUSE SETTINGS TIMESTAMP '2018-04-10 11:40:43'


-- new object type path: SCHEMA_EXPORT/PROCEDURE/ALTER_PROCEDURE
ALTER PROCEDURE "AFFICHE_ESPACE_OCCUPE_TABLE" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
 REUSE SETTINGS TIMESTAMP '2018-03-08 16:51:24'


ALTER PROCEDURE "COMPUTEPRECOMPTAGEMAILBOX" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
 REUSE SETTINGS TIMESTAMP '2018-03-08 16:51:24'


ALTER PROCEDURE "NX_CLUSTER_INVAL" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
 REUSE SETTINGS TIMESTAMP '2018-03-08 16:51:24'


ALTER PROCEDURE "NX_REBUILD_READ_ACLS" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
 REUSE SETTINGS TIMESTAMP '2018-03-08 16:51:24'


ALTER PROCEDURE "NX_VACUUM_READ_ACLS" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
 REUSE SETTINGS TIMESTAMP '2018-03-08 16:51:24'


ALTER PROCEDURE "SW_REBUILD_MISSING_READ_ACLS" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
 REUSE SETTINGS TIMESTAMP '2018-03-08 16:51:24'


-- CONNECT REPONSES_INTE
CREATE UNIQUE INDEX "ATTRIBUTION#ANONYMOUSTYPE_PK" ON "ATTRIBUTION#ANONYMOUSTYPE" ("ID") 


CREATE UNIQUE INDEX "BIRTREPORTMODEL_PK" ON "BIRTREPORTMODEL" ("ID") 


CREATE UNIQUE INDEX "BIRTREPORT_PK" ON "BIRTREPORT" ("ID") 


CREATE INDEX "CASE_DOCUMENTSID_ID_IDX" ON "CASE_DOCUMENTSID" ("ID") 


CREATE UNIQUE INDEX "CASE_ITEM_PK" ON "CASE_ITEM" ("ID") 


CREATE UNIQUE INDEX "CASE_LINK_PK" ON "CASE_LINK" ("ID") 


CREATE UNIQUE INDEX "IDX_CASE_LINK_1" ON "CASE_LINK" ("ID", "DATE") 


CREATE UNIQUE INDEX "IDX_CASE_LINK_2" ON "CASE_LINK" ("CASEDOCUMENTID", "ID") 


CREATE UNIQUE INDEX "IDX_CASE_LINK_DATE" ON "CASE_LINK" ("DATE", "ID") 


CREATE UNIQUE INDEX "REQUETEFEUILLEROUTE_PK" ON "REQUETEFEUILLEROUTE" ("ID") 


CREATE UNIQUE INDEX "REQUETEMETADONNEES_PK" ON "REQUETEMETADONNEES" ("ID") 


CREATE UNIQUE INDEX "REQUETESIMPLE_PK" ON "REQUETESIMPLE" ("ID") 


CREATE UNIQUE INDEX "REQUETETEXTEINTEGRAL_PK" ON "REQUETETEXTEINTEGRAL" ("ID") 


CREATE UNIQUE INDEX "JETON_DOC_PK" ON "JETON_DOC" ("ID") 


CREATE UNIQUE INDEX "JETON_MAITRE_PK" ON "JETON_MAITRE" ("ID") 


CREATE UNIQUE INDEX "NOTE_PK" ON "NOTE" ("ID") 


CREATE UNIQUE INDEX "ACTIONNABLE_CASE_LINK_PK" ON "ACTIONNABLE_CASE_LINK" ("ID") 


CREATE UNIQUE INDEX "ADVANCED_SEARCH_PK" ON "ADVANCED_SEARCH" ("ID") 


CREATE UNIQUE INDEX "IDX_ACTIONNABLE_CASE_LINK_1" ON "ACTIONNABLE_CASE_LINK" ("STEPDOCUMENTID", "ID") 


CREATE UNIQUE INDEX "IDX_JETON_DOC_COUNT" ON "JETON_DOC" ("ID_JETON", "ID_OWNER", "ID_DOC", "ID") 


CREATE UNIQUE INDEX "STEP_FOLDER_PK" ON "STEP_FOLDER" ("ID") 


CREATE UNIQUE INDEX "TAG_PK" ON "TAG" ("ID") 


CREATE UNIQUE INDEX "SORTINFOTYPE_PK" ON "SORTINFOTYPE" ("ID") 


CREATE UNIQUE INDEX "STATUS_PK" ON "STATUS" ("ID") 


CREATE UNIQUE INDEX "SIGNALEMENTQUESTION_PK" ON "SIGNALEMENTQUESTION" ("ID") 


CREATE UNIQUE INDEX "SMART_FOLDER_PK" ON "SMART_FOLDER" ("ID") 


CREATE UNIQUE INDEX "RELATION_SEARCH_PK" ON "RELATION_SEARCH" ("ID") 


CREATE UNIQUE INDEX "RENOUVELLEMENTQUESTION_PK" ON "RENOUVELLEMENTQUESTION" ("ID") 


CREATE INDEX "REPLOGD_FULLLOG_ID_IDX" ON "REPLOGD_FULLLOG" ("ID") 


CREATE INDEX "REPLOGL_DETAILS_ID_IDX" ON "REPLOGL_DETAILS" ("ID") 


CREATE INDEX "REPLOGL_FULLLOG_ID_IDX" ON "REPLOGL_FULLLOG" ("ID") 


CREATE INDEX "REPLOG_LINES_ID_IDX" ON "REPLOG_LINES" ("ID") 


CREATE UNIQUE INDEX "REPONSES_LOGGING_DETAIL_PK" ON "REPONSES_LOGGING_DETAIL" ("ID") 


CREATE UNIQUE INDEX "REPONSES_LOGGING_LINE_PK" ON "REPONSES_LOGGING_LINE" ("ID") 


CREATE UNIQUE INDEX "REPONSES_LOGGING_PK" ON "REPONSES_LOGGING" ("ID") 


CREATE INDEX "PUBLISH_SECTIONS_ID_IDX" ON "PUBLISH_SECTIONS" ("ID") 


CREATE UNIQUE INDEX "QUERYNAV_PK" ON "QUERYNAV" ("ID") 


CREATE UNIQUE INDEX "RELATEDTEXTRESOURCE_PK" ON "RELATEDTEXTRESOURCE" ("ID") 


CREATE UNIQUE INDEX "RELATION_PK" ON "RELATION" ("ID") 


CREATE INDEX "IDX_PROXIES_1" ON "PROXIES" ("ID", "TARGETID") 


CREATE UNIQUE INDEX "PARAMETRE_PK" ON "PARAMETRE" ("ID") 


CREATE UNIQUE INDEX "PARTICIPANTLIST_PK" ON "PARTICIPANTLIST" ("ID") 


CREATE UNIQUE INDEX "PROFIL_UTILISATEUR_PK" ON "PROFIL_UTILISATEUR" ("ID") 


CREATE UNIQUE INDEX "PROTOCOL_PK" ON "PROTOCOL" ("ID") 


CREATE UNIQUE INDEX "PROXIES_PK" ON "PROXIES" ("ID") 


CREATE INDEX "PROXIES_VERSIONABLEID_IDX" ON "PROXIES" ("VERSIONABLEID") 


CREATE INDEX "PRU_COLUMNS_ID_IDX" ON "PRU_COLUMNS" ("ID") 


CREATE UNIQUE INDEX "IDX_MLBX_PRECALC_1" ON "RMLBX_PRECALCULLIST" ("ID", "ITEM", "POS") 


CREATE UNIQUE INDEX "IDX_RTASK_1" ON "ROUTING_TASK" ("ID", "DATEFINETAPE") 


CREATE UNIQUE INDEX "IDX_MISC_1" ON "MISC" ("ID", "LIFECYCLESTATE") 


CREATE UNIQUE INDEX "IDX_MISC_2" ON "MISC" ("LIFECYCLESTATE", "ID") 


CREATE UNIQUE INDEX "MISC_PK" ON "MISC" ("ID") 


CREATE UNIQUE INDEX "IDX_MAILBOX_1" ON "MAILBOX" ("MAILBOX_ID", "ID") 


CREATE UNIQUE INDEX "LOCKS_PK" ON "LOCKS" ("ID") 


CREATE UNIQUE INDEX "MAILBOX_PK" ON "MAILBOX" ("ID") 


CREATE UNIQUE INDEX "MAIL_PK" ON "MAIL" ("ID") 


CREATE INDEX "HIERARCHY_READ_ACL_ACL_ID_IDX" ON "HIERARCHY_READ_ACL" ("ACL_ID") 


CREATE UNIQUE INDEX "HISTORIQUEATTRIBUTION_PK" ON "HISTORIQUEATTRIBUTION" ("ID") 


CREATE UNIQUE INDEX "IDX_HIER_ACL_1" ON "HIERARCHY_READ_ACL" ("ID", "ACL_ID") 


CREATE UNIQUE INDEX "INDEXATION_PK" ON "INDEXATION" ("ID") 


CREATE UNIQUE INDEX "IDX_IXACOMP_AN_ANALYSE" ON "IXACOMP_AN_ANALYSE" ("ITEM", "ID") 


CREATE UNIQUE INDEX "IDX_IXACOMP_AN_RUBRIQUE" ON "IXACOMP_AN_RUBRIQUE" ("ITEM", "ID") 


CREATE UNIQUE INDEX "IDX_IXACOMP_MOT_MINIST" ON "IXACOMP_MOTCLEF_MINISTERE" ("ITEM", "ID") 


CREATE UNIQUE INDEX "IDX_IXA_AN_ANALYSE" ON "IXA_AN_ANALYSE" ("ITEM", "ID") 


CREATE UNIQUE INDEX "IDX_IXA_AN_RUBRIQUE" ON "IXA_AN_RUBRIQUE" ("ITEM", "ID") 


CREATE UNIQUE INDEX "INDEXATION_COMP_PK" ON "INDEXATION_COMP" ("ID") 


CREATE UNIQUE INDEX "INFO_COMMENTS_PK" ON "INFO_COMMENTS" ("ID") 


CREATE INDEX "IXACOMP_AN_ANALYSE_ID_IDX" ON "IXACOMP_AN_ANALYSE" ("ID") 


CREATE INDEX "IXAC_CCB8C609_IDX" ON "IXACOMP_AN_RUBRIQUE" ("ID") 


CREATE INDEX "IXAC_F6EA5AC3_IDX" ON "IXACOMP_MOTCLEF_MINISTERE" ("ID") 


CREATE INDEX "IXA_AN_ANALYSE_ID_IDX" ON "IXA_AN_ANALYSE" ("ID") 


CREATE INDEX "IXA_AN_RUBRIQUE_ID_IDX" ON "IXA_AN_RUBRIQUE" ("ID") 


CREATE INDEX "CMDI_1093196C_IDX" ON "CMDIST_INITIAL_ACTION_88A481B7" ("ID") 


CREATE INDEX "CMDI_5E2F4527_IDX" ON "CMDIST_INITIAL_COPY_I_D6588F7E" ("ID") 


CREATE INDEX "CMDI_A3C38F3F_IDX" ON "CMDIST_INITIAL_COPY_E_B3610C04" ("ID") 


CREATE UNIQUE INDEX "COMMENT_PK" ON "COMMENT" ("ID") 


CREATE UNIQUE INDEX "COMMON_PK" ON "COMMON" ("ID") 


CREATE UNIQUE INDEX "CONTENT_PK" ON "CONTENT" ("ID") 


CREATE UNIQUE INDEX "CONTENT_VIEW_DISPLAY_PK" ON "CONTENT_VIEW_DISPLAY" ("ID") 


CREATE UNIQUE INDEX "IDX_COMMENT_1" ON "COMMENT" ("COMMENTEDDOCID", "ID") 


CREATE INDEX "CMDI_E06BC7E3_IDX" ON "CMDIST_INITIAL_ACTION_4CD43708" ("ID") 


CREATE UNIQUE INDEX "IDX_CMDITINITACTION_1" ON "CMDIST_INITIAL_ACTION_4CD43708" ("ID", "ITEM") 


CREATE UNIQUE INDEX "IDX_DOSSIER_1" ON "DOSSIER_REPONSE" ("MINISTEREATTRIBUTAIRECOURANT", "ID") 


CREATE UNIQUE INDEX "IDX_DOSSIER_2" ON "DOSSIER_REPONSE" ("IDDOCUMENTQUESTION", "ID") 


CREATE INDEX "IDX_DOSSIER_3" ON "DOSSIER_REPONSE" ("IDDOCUMENTQUESTION") 


CREATE INDEX "IDX_DOSSIER_4" ON "DOSSIER_REPONSE" ("IDDOCUMENTREPONSE") 


CREATE UNIQUE INDEX "IDX_DOSSIER_5" ON "DOSSIER_REPONSE" ("ETAPEREDACTIONATTEINTE", "ID") 


CREATE INDEX "IDX_DOSSIER_6" ON "DOSSIER_REPONSE" ("MINISTEREATTRIBUTAIRECOURANT") 


CREATE INDEX "IDX_DOSSIER_7" ON "DOSSIER_REPONSE" ("MINISTEREREATTRIBUTION") 


CREATE UNIQUE INDEX "IDX_IXACOMP_TA_RUBRIQUE" ON "IXACOMP_TA_RUBRIQUE" ("ITEM", "ID") 


CREATE UNIQUE INDEX "IDX_IXA_MOT_MINIST" ON "IXA_MOTCLEF_MINISTERE" ("ITEM", "ID") 


CREATE UNIQUE INDEX "IDX_IXA_SE_RENVOI" ON "IXA_SE_RENVOI" ("ITEM", "ID") 


CREATE UNIQUE INDEX "IDX_IXA_SE_RUBRIQUE" ON "IXA_SE_RUBRIQUE" ("ITEM", "ID") 


CREATE UNIQUE INDEX "IDX_IXA_SE_THEME" ON "IXA_SE_THEME" ("ITEM", "ID") 


CREATE UNIQUE INDEX "IDX_IXA_TA_RUBRIQUE" ON "IXA_TA_RUBRIQUE" ("ITEM", "ID") 


CREATE INDEX "IXAC_CAB5E8CF_IDX" ON "IXACOMP_TA_RUBRIQUE" ("ID") 


CREATE INDEX "IXA_SE_RENVOI_ID_IDX" ON "IXA_SE_RENVOI" ("ID") 


CREATE INDEX "IXA_SE_RUBRIQUE_ID_IDX" ON "IXA_SE_RUBRIQUE" ("ID") 


CREATE INDEX "IXA_SE_THEME_ID_IDX" ON "IXA_SE_THEME" ("ID") 


CREATE INDEX "IXA_TA_RUBRIQUE_ID_IDX" ON "IXA_TA_RUBRIQUE" ("ID") 


CREATE INDEX "IXA__04FA75C2_IDX" ON "IXA_MOTCLEF_MINISTERE" ("ID") 


CREATE UNIQUE INDEX "IDX_IXACOMP_SE_RUBRIQUE" ON "IXACOMP_SE_RUBRIQUE" ("ITEM", "ID") 


CREATE UNIQUE INDEX "IDX_IXACOMP_SE_THEME" ON "IXACOMP_SE_THEME" ("ITEM", "ID") 


CREATE INDEX "IXACOMP_SE_RENVOI_ID_IDX" ON "IXACOMP_SE_RENVOI" ("ID") 


CREATE INDEX "IXACOMP_SE_THEME_ID_IDX" ON "IXACOMP_SE_THEME" ("ID") 


CREATE INDEX "IXAC_F5D6E39A_IDX" ON "IXACOMP_SE_RUBRIQUE" ("ID") 


CREATE UNIQUE INDEX "TYPE_CONTACT_PK" ON "TYPE_CONTACT" ("ID") 


CREATE UNIQUE INDEX "UID_PK" ON "UID" ("ID") 


CREATE UNIQUE INDEX "UI_TYPES_CONFIGURATION_PK" ON "UI_TYPES_CONFIGURATION" ("ID") 


CREATE UNIQUE INDEX "TIMBRE_PK" ON "TIMBRE" ("ID") 


CREATE UNIQUE INDEX "ALERT_PK" ON "ALERT" ("ID") 


CREATE INDEX "ALLOT_IDDOSSIERS_ID_IDX" ON "ALLOT_IDDOSSIERS" ("ID") 


CREATE INDEX "HIERARCHY_PARENTID_IDX" ON "HIERARCHY" ("PARENTID") 


CREATE UNIQUE INDEX "HIERARCHY_PK" ON "HIERARCHY" ("ID") 


CREATE INDEX "HIER_B0ED9092_IDX" ON "HIERARCHY" ("PARENTID", "NAME") 


CREATE UNIQUE INDEX "IDX_ACLS_1" ON "ACLS" ("ID", "POS", "PERMISSION", "USER", "GRANT", "NAME", "GROUP") 


CREATE UNIQUE INDEX "ALLOTISSEMENT_PK" ON "ALLOTISSEMENT" ("ID") 


CREATE INDEX "LOT_NAME_ID" ON "ALLOTISSEMENT" ("NOM", "ID") 


CREATE INDEX "IDX_QRTZ_J_REQ_RECOVERY" ON "QRTZ_JOB_DETAILS" ("SCHED_NAME", "REQUESTS_RECOVERY") 


CREATE INDEX "IDX_QRTZ_J_GRP" ON "QRTZ_JOB_DETAILS" ("SCHED_NAME", "JOB_GROUP") 


CREATE INDEX "IDX_QRTZ_T_J" ON "QRTZ_TRIGGERS" ("SCHED_NAME", "JOB_NAME", "JOB_GROUP") 


CREATE INDEX "IDX_QRTZ_T_C" ON "QRTZ_TRIGGERS" ("SCHED_NAME", "CALENDAR_NAME") 


CREATE INDEX "IDX_QRTZ_T_G" ON "QRTZ_TRIGGERS" ("SCHED_NAME", "TRIGGER_GROUP") 


CREATE INDEX "IDX_QRTZ_T_N_STATE" ON "QRTZ_TRIGGERS" ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP", "TRIGGER_STATE") 


CREATE INDEX "IDX_QRTZ_T_NEXT_FIRE_TIME" ON "QRTZ_TRIGGERS" ("SCHED_NAME", "NEXT_FIRE_TIME") 


CREATE INDEX "IDX_QRTZ_T_NFT_ST" ON "QRTZ_TRIGGERS" ("SCHED_NAME", "TRIGGER_STATE", "NEXT_FIRE_TIME") 


CREATE INDEX "IDX_QRTZ_T_NFT_MISFIRE" ON "QRTZ_TRIGGERS" ("SCHED_NAME", "MISFIRE_INSTR", "NEXT_FIRE_TIME") 


CREATE INDEX "IDX_QRTZ_T_NFT_ST_MISFIRE" ON "QRTZ_TRIGGERS" ("SCHED_NAME", "MISFIRE_INSTR", "NEXT_FIRE_TIME", "TRIGGER_STATE") 


CREATE INDEX "IDX_QRTZ_T_NFT_ST_MISFIRE_GRP" ON "QRTZ_TRIGGERS" ("SCHED_NAME", "MISFIRE_INSTR", "NEXT_FIRE_TIME", "TRIGGER_GROUP", "TRIGGER_STATE") 


CREATE UNIQUE INDEX "FEUILLE_ROUTE_PK" ON "FEUILLE_ROUTE" ("ID") 


CREATE UNIQUE INDEX "IDX_RTASK_2" ON "ROUTING_TASK" ("ID", "DISTRIBUTIONMAILBOXID") 


CREATE INDEX "IDX_RTASK_3" ON "ROUTING_TASK" ("DATEFINETAPE") 


CREATE INDEX "IDX_RTASK_4" ON "ROUTING_TASK" ("DISTRIBUTIONMAILBOXID") 


CREATE INDEX "IDX_RTASK_5" ON "ROUTING_TASK" ("DOCUMENTROUTEID") 


CREATE UNIQUE INDEX "ROUTING_TASK_PK" ON "ROUTING_TASK" ("ID") 


CREATE UNIQUE INDEX "ROUING_TASK_ROUTE_ID" ON "ROUTING_TASK" ("DOCUMENTROUTEID", "ID") 


CREATE UNIQUE INDEX "DOSSIER_REPONSE_PK" ON "DOSSIER_REPONSE" ("ID") 


CREATE UNIQUE INDEX "DUBLINCORE_PK" ON "DUBLINCORE" ("ID") 


CREATE UNIQUE INDEX "ERRATUM#ANONYMOUSTYPE_PK" ON "ERRATUM#ANONYMOUSTYPE" ("ID") 


CREATE UNIQUE INDEX "FULLTEXT_PK" ON "FULLTEXT" ("ID") 


CREATE UNIQUE INDEX "IDX_FULLTEXT_1" ON "FULLTEXT" ("JOBID", "ID") 


CREATE UNIQUE INDEX "WEBCONTAINER_PK" ON "WEBCONTAINER" ("ID") 


CREATE UNIQUE INDEX "REPOSITORIES_PK" ON "REPOSITORIES" ("ID") 


CREATE UNIQUE INDEX "REQUETECOMPLEXE_PK" ON "REQUETECOMPLEXE" ("ID") 


CREATE UNIQUE INDEX "LOT_DOSSIER_ID" ON "DOSSIER_REPONSE" ("IDDOCUMENTQUESTION", "IDDOSSIERLOT", "ID") 


CREATE UNIQUE INDEX "ELEMENTFONDDOSSIER_PK" ON "ELEMENTFONDDOSSIER" ("ID") 


CREATE UNIQUE INDEX "ETAT_APPLICATION_PK" ON "ETAT_APPLICATION" ("ID") 


CREATE UNIQUE INDEX "FACETED_SEARCH_DEFAULT_PK" ON "FACETED_SEARCH_DEFAULT" ("ID") 


CREATE UNIQUE INDEX "FACETED_SEARCH_PK" ON "FACETED_SEARCH" ("ID") 


CREATE UNIQUE INDEX "FAVORISDOSSIER_PK" ON "FAVORISDOSSIER" ("ID") 


CREATE UNIQUE INDEX "FAVORISINDEXATION_PK" ON "FAVORISINDEXATION" ("ID") 


CREATE UNIQUE INDEX "IDX_DOSSIER_REPONSES_LINK_1" ON "DOSSIER_REPONSES_LINK" ("IDMINISTEREATTRIBUTAIRE", "ID", "ROUTINGTASKTYPE") 


CREATE UNIQUE INDEX "IDX_DOSSIER_REPONSES_LINK_2" ON "DOSSIER_REPONSES_LINK" ("ID", "NUMEROQUESTION") 


CREATE UNIQUE INDEX "IDX_DOSSIER_REPONSES_LINK_3" ON "DOSSIER_REPONSES_LINK" ("ID", "ROUTINGTASKID") 


CREATE UNIQUE INDEX "IDX_QUESTION_1" ON "QUESTION" ("NUMEROQUESTION", "ID") 


CREATE INDEX "IDX_QUESTION_11" ON "QUESTION" ("DATEPUBLICATIONJO") 


CREATE INDEX "IDX_QUESTION_12" ON "QUESTION" ("ETATRAPPELE") 


CREATE INDEX "IDX_QUESTION_13" ON "QUESTION" ("LEGISLATUREQUESTION") 


CREATE INDEX "IDX_QUESTION_14" ON "QUESTION" ("NOMCOMPLETAUTEUR") 


CREATE INDEX "IDX_QUESTION_15" ON "QUESTION" ("NUMEROQUESTION") 


CREATE INDEX "IDX_QUESTION_16" ON "QUESTION" ("GROUPEPOLITIQUE") 


CREATE INDEX "IDX_QUESTION_17" ON "QUESTION" ("ETATSIGNALE") 


CREATE INDEX "IDX_QUESTION_18" ON "QUESTION" ("ETATRENOUVELE") 


CREATE INDEX "IDX_QUESTION_19" ON "QUESTION" ("HASHCONNEXITETITRE") 


CREATE UNIQUE INDEX "IDX_QUESTION_2" ON "QUESTION" ("GROUPEPOLITIQUE", "ID") 


CREATE INDEX "IDX_QUESTION_20" ON "QUESTION" ("HASHCONNEXITETEXTE") 


CREATE INDEX "IDX_QUESTION_21" ON "QUESTION" ("HASHCONNEXITEAN") 


CREATE INDEX "IDX_QUESTION_22" ON "QUESTION" ("HASHCONNEXITESE") 


CREATE INDEX "IDX_QUESTION_23" ON "QUESTION" ("NUMEROQUESTION", "LEGISLATUREQUESTION", "ORIGINEQUESTION") 


CREATE UNIQUE INDEX "IDX_QUESTION_6" ON "QUESTION" ("INTITULEMINISTERE", "ID") 


CREATE INDEX "IDX_QUESTION_7" ON "QUESTION" ("ETATQUESTION") 


CREATE INDEX "IDX_QUESTION_8" ON "QUESTION" ("ORIGINEQUESTION") 


CREATE UNIQUE INDEX "IDX_REPONSE_1" ON "REPONSE" ("ID", "DATEPUBLICATIONJOREPONSE") 


CREATE UNIQUE INDEX "QUESTION_PK" ON "QUESTION" ("ID") 


CREATE UNIQUE INDEX "REPONSE_PK" ON "REPONSE" ("ID") 


CREATE UNIQUE INDEX "DOSSIER_REPONSES_LINK_PK" ON "DOSSIER_REPONSES_LINK" ("ID") 


CREATE UNIQUE INDEX "IDX_DOS_REP_LINK_MIN_TASK_ID" ON "DOSSIER_REPONSES_LINK" ("IDMINISTEREATTRIBUTAIRE", "ROUTINGTASKTYPE", "ID") 


CREATE INDEX "IDX_QUESTION_24_DILA" ON "QUESTION" ("TYPEQUESTION", "DATEPUBLICATIONJO", "ID", "NUMEROQUESTION") 


CREATE UNIQUE INDEX "LOCK_JETON_MAITRE_PK" ON "LOCK_JETON_MAITRE" ("ID") 


CREATE INDEX "CLUSTER_INVALS_NODEID_IDX" ON "CLUSTER_INVALS" ("NODEID") 


CREATE UNIQUE INDEX "LISTEELIMINATION_PK" ON "LISTEELIMINATION" ("ID") 


CREATE INDEX "IDX_QRTZ_FT_INST_JOB_REQ_RCVRY" ON "QRTZ_FIRED_TRIGGERS" ("SCHED_NAME", "INSTANCE_NAME", "REQUESTS_RECOVERY") 


CREATE INDEX "IDX_QRTZ_FT_J_G" ON "QRTZ_FIRED_TRIGGERS" ("SCHED_NAME", "JOB_NAME", "JOB_GROUP") 


CREATE INDEX "IDX_QRTZ_FT_JG" ON "QRTZ_FIRED_TRIGGERS" ("SCHED_NAME", "JOB_GROUP") 


CREATE INDEX "IDX_QRTZ_FT_T_G" ON "QRTZ_FIRED_TRIGGERS" ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") 


CREATE INDEX "IDX_QRTZ_FT_TG" ON "QRTZ_FIRED_TRIGGERS" ("SCHED_NAME", "TRIGGER_GROUP") 


CREATE UNIQUE INDEX "USERSETTINGS_PK" ON "USERSETTINGS" ("ID") 


CREATE UNIQUE INDEX "VCARD_PK" ON "VCARD" ("ID") 


CREATE UNIQUE INDEX "VERSIONS_PK" ON "VERSIONS" ("ID") 


CREATE INDEX "VERS_E6513A3A_IDX" ON "VERSIONS" ("VERSIONABLEID") 


CREATE UNIQUE INDEX "WSNOTIFICATION_PK" ON "WSNOTIFICATION" ("ID") 


CREATE INDEX "IDX_DELEGATION_1" ON "DELEGATION" ("DESTINATAIREID") 


CREATE UNIQUE INDEX "IDX_DOCRIPARTDOC_1" ON "DOCRI_PARTICIPATINGDOCUMENTS" ("ITEM", "ID") 


CREATE INDEX "DC_CONTRIBUTORS_ID_IDX" ON "DC_CONTRIBUTORS" ("ID") 


CREATE INDEX "DC_SUBJECTS_ID_IDX" ON "DC_SUBJECTS" ("ID") 


CREATE UNIQUE INDEX "DEFAULTSETTINGS_PK" ON "DEFAULTSETTINGS" ("ID") 


CREATE UNIQUE INDEX "DELEGATION_PK" ON "DELEGATION" ("ID") 


CREATE INDEX "DOCR_C6FD7970_IDX" ON "DOCRI_PARTICIPATINGDOCUMENTS" ("ID") 


CREATE UNIQUE INDEX "IDX_DCCONTRIB_1" ON "DC_CONTRIBUTORS" ("ID", "POS", "ITEM") 


CREATE INDEX "IDX_JETON_DOC_1" ON "JETON_DOC" ("ID_OWNER") 


CREATE INDEX "IDX_JETON_DOC_3" ON "JETON_DOC" ("TYPE_WEBSERVICE") 


CREATE INDEX "IDX_THEME_1" ON "LOCALTHEMECONFIG" ("DOCID") 


CREATE INDEX "MLBX_A22042A4_IDX" ON "MLBX_NOTIFIED_USERS" ("ID") 


CREATE INDEX "MLBX_FAVORITES_ID_IDX" ON "MLBX_FAVORITES" ("ID") 


CREATE INDEX "MLBX_GROUPS_ID_IDX" ON "MLBX_GROUPS" ("ID") 


CREATE INDEX "MLBX_PROFILES_ID_IDX" ON "MLBX_PROFILES" ("ID") 


CREATE INDEX "MLBX_USERS_ID_IDX" ON "MLBX_USERS" ("ID") 


CREATE UNIQUE INDEX "NAV_PK" ON "NAV" ("ID") 


CREATE INDEX "IDX_NXP_LOGS_1" ON "NXP_LOGS" ("LOG_DOC_UUID") 


CREATE INDEX "IDX_NXP_LOGS_2" ON "NXP_LOGS" ("LOG_EVENT_DATE") 


CREATE UNIQUE INDEX "NAVIGATIONSETTINGS_PK" ON "NAVIGATIONSETTINGS" ("ID") 


CREATE UNIQUE INDEX "PARAMETER_PK" ON "PARAMETER" ("ID") 


CREATE UNIQUE INDEX "IDX_HIER_1" ON "HIERARCHY" ("PRIMARYTYPE", "ID") 


CREATE INDEX "IDX_HIER_2" ON "HIERARCHY" ("PARENTID", "ISPROPERTY") 


CREATE UNIQUE INDEX "IDX_HIER_4" ON "HIERARCHY" ("ID", "PRIMARYTYPE") 


CREATE UNIQUE INDEX "IDX_HIER_6" ON "HIERARCHY" ("ID", "ISVERSION") 


CREATE INDEX "IDX_ACTIONNABLE_CASE_LINK_2" ON "ACTIONNABLE_CASE_LINK" ("AUTOMATICVALIDATION") 


CREATE INDEX "IDX_ACTIONNABLE_CASE_LINK_3" ON "ACTIONNABLE_CASE_LINK" ("DUEDATE") 


CREATE INDEX "ACLR_ACL_ID_IDX" ON "ACLR" ("ACL_ID") 


CREATE INDEX "ACLS_ID_IDX" ON "ACLS" ("ID") 


CREATE INDEX "CMDI_F03AFF82_IDX" ON "CMDIST_ALL_ACTION_PAR_6B4BBED8" ("ID") 


CREATE INDEX "CMDI_FA613CD3_IDX" ON "CMDIST_ALL_COPY_PARTI_21AB3C5B" ("ID") 


CREATE INDEX "ALTR_RECIPIENTS_ID_IDX" ON "ALTR_RECIPIENTS" ("ID") 


CREATE UNIQUE INDEX "IDX_BATCH_LOG_PK" ON "BATCH_LOG" ("ID_LOG") 


CREATE UNIQUE INDEX "IDX_BATCH_RESULT_PK" ON "BATCH_RESULT" ("ID_RESULT") 


CREATE UNIQUE INDEX "NOTIFICATIONS_SUIVI_BATCHS_PK" ON "NOTIFICATIONS_SUIVI_BATCHS" ("ID") 


CREATE UNIQUE INDEX "INFO_UTILISATEUR_CONNECTION_PK" ON "INFO_UTILISATEUR_CONNECTION" ("ID") 


CREATE UNIQUE INDEX "IDX_INFO_UTIL_CONNECT_ISLOGOUT" ON "INFO_UTILISATEUR_CONNECTION" ("ISLOGOUT", "ID") 


CREATE UNIQUE INDEX "IDX_INFO_UTIL_CONNECT_USERNAME" ON "INFO_UTILISATEUR_CONNECTION" ("USERNAME", "ID") 


CREATE INDEX "IDX_HIERARCHY_NAME_PRIM" ON "HIERARCHY" ("NAME", "PRIMARYTYPE") 


CREATE UNIQUE INDEX "ID_GOUVERNEMENT_PK" ON "GOUVERNEMENT" ("ID_ORGANIGRAMME") 


CREATE UNIQUE INDEX "ID_INSTITUTION_PK" ON "INSTITUTION" ("ID_ORGANIGRAMME") 


CREATE UNIQUE INDEX "ID_POSTE_PK" ON "POSTE" ("ID_ORGANIGRAMME") 


CREATE UNIQUE INDEX "ID_UNITE_PK" ON "UNITE_STRUCTURELLE" ("ID_ORGANIGRAMME") 


CREATE UNIQUE INDEX "ID_ENTITE_PK" ON "ENTITE" ("ID_ORGANIGRAMME") 


CREATE UNIQUE INDEX "ETATQUESTION_PK" ON "ETATQUESTION" ("ID") 


CREATE UNIQUE INDEX "FONDDOSSIER_PK" ON "FONDDOSSIER" ("ID") 


CREATE UNIQUE INDEX "IDX_HIER_3" ON "HIERARCHY" ("PARENTID", "PRIMARYTYPE", "ID") 


CREATE UNIQUE INDEX "FILE_PK" ON "FILE" ("ID") 


CREATE INDEX "IDX$$_158D30001" ON "DOSSIER_REPONSE" ("ID", "IDDOCUMENTFDD") 


CREATE INDEX "BATCH_RESULT_ID_LOG" ON "BATCH_RESULT" ("ID_LOG") 


CREATE INDEX "NSB_RECEIVERMAILLIST_ID" ON "NSB_RECEIVERMAILLIST" ("ID") 


CREATE INDEX "IDX_NXP_LOGS_3" ON "NXP_LOGS" ("LOG_DOC_PATH", "LOG_ID") 


CREATE INDEX "IDX_ACLRMODIFIED_1" ON "ACLR_MODIFIED" ("HIERARCHY_ID") 


CREATE INDEX "IDX_SW_ACLR_USERID_USER_USE2" ON "SW_ACLR_USERID_USER" ("USERGROUP", "USER_ID") 


CREATE INDEX "IDX_SW_ACLR_USERID_USER_USERID" ON "SW_ACLR_USERID_USER" ("USER_ID", "USERGROUP") 


CREATE INDEX "IDX_SW_ACLR_USER_ACLID_UG" ON "SW_ACLR_USER_ACLID" ("USERGROUP", "ACL_ID") 


-- new object type path: SCHEMA_EXPORT/TABLE/INDEX/FUNCTIONAL_INDEX/INDEX
CREATE UNIQUE INDEX "IDX_QUESTION_3" ON "QUESTION" (LOWER("NOMAUTEUR"), "ID") 


CREATE UNIQUE INDEX "IDX_QUESTION_4" ON "QUESTION" (LOWER("PRENOMAUTEUR"), "ID") 


CREATE UNIQUE INDEX "IDX_QUESTION_5" ON "QUESTION" ("ORIGINEQUESTION", TO_CHAR("NUMEROQUESTION"), "ID") 


-- new object type path: SCHEMA_EXPORT/TABLE/CONSTRAINT/CONSTRAINT
ALTER TABLE "RENOUVELLEMENTQUESTION" ADD CONSTRAINT "RENOUVELLEMENTQUESTION_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "REPONSES_LOGGING" ADD CONSTRAINT "REPONSES_LOGGING_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "REPONSES_LOGGING_DETAIL" ADD CONSTRAINT "REPONSES_LOGGING_DETAIL_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "REPONSES_LOGGING_LINE" ADD CONSTRAINT "REPONSES_LOGGING_LINE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "REPOSITORIES" ADD CONSTRAINT "REPOSITORIES_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "REQUETECOMPLEXE" ADD CONSTRAINT "REQUETECOMPLEXE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "REQUETEFEUILLEROUTE" ADD CONSTRAINT "REQUETEFEUILLEROUTE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "PARAMETRE" ADD CONSTRAINT "PARAMETRE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "PARTICIPANTLIST" ADD CONSTRAINT "PARTICIPANTLIST_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "PROFIL_UTILISATEUR" ADD CONSTRAINT "PROFIL_UTILISATEUR_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "PROTOCOL" ADD CONSTRAINT "PROTOCOL_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "PROXIES" ADD CONSTRAINT "PROXIES_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "MAILBOX" ADD CONSTRAINT "MAILBOX_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "MISC" ADD CONSTRAINT "MISC_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "NAV" ADD CONSTRAINT "NAV_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "NAVIGATIONSETTINGS" ADD CONSTRAINT "NAVIGATIONSETTINGS_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "NXP_LOGS" ADD PRIMARY KEY ("LOG_ID") ENABLE


ALTER TABLE "NXP_LOGS_MAPEXTINFOS" ADD PRIMARY KEY ("LOG_FK", "MAPKEY") ENABLE


ALTER TABLE "NXP_LOGS_MAPEXTINFOS" ADD UNIQUE ("INFO_FK") ENABLE


ALTER TABLE "PARAMETER" ADD CONSTRAINT "PARAMETER_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "QUERYNAV" ADD CONSTRAINT "QUERYNAV_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "RELATEDTEXTRESOURCE" ADD CONSTRAINT "RELATEDTEXTRESOURCE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "RELATION" ADD CONSTRAINT "RELATION_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "RELATION_SEARCH" ADD CONSTRAINT "RELATION_SEARCH_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "HIERARCHY" ADD CONSTRAINT "HIERARCHY_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "ACTIONNABLE_CASE_LINK" ADD CONSTRAINT "ACTIONNABLE_CASE_LINK_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "ADVANCED_SEARCH" ADD CONSTRAINT "ADVANCED_SEARCH_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "ALERT" ADD CONSTRAINT "ALERT_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "ALLOTISSEMENT" ADD CONSTRAINT "ALLOTISSEMENT_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "ATTRIBUTION#ANONYMOUSTYPE" ADD CONSTRAINT "ATTRIBUTION#ANONYMOUSTYPE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "BIRTREPORT" ADD CONSTRAINT "BIRTREPORT_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "BIRTREPORTMODEL" ADD CONSTRAINT "BIRTREPORTMODEL_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "CASE_ITEM" ADD CONSTRAINT "CASE_ITEM_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "CASE_LINK" ADD CONSTRAINT "CASE_LINK_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "COMMENT" ADD CONSTRAINT "COMMENT_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "COMMON" ADD CONSTRAINT "COMMON_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "CONTENT" ADD CONSTRAINT "CONTENT_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "CONTENT_VIEW_DISPLAY" ADD CONSTRAINT "CONTENT_VIEW_DISPLAY_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "ETAT_APPLICATION" ADD CONSTRAINT "ETAT_APPLICATION_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "ERRATUM#ANONYMOUSTYPE" ADD CONSTRAINT "ERRATUM#ANONYMOUSTYPE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "FULLTEXT" ADD CONSTRAINT "FULLTEXT_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "JENA_LONG_LIT" ADD PRIMARY KEY ("ID") ENABLE


ALTER TABLE "JENA_LONG_URI" ADD PRIMARY KEY ("ID") ENABLE


ALTER TABLE "QUESTION" ADD CONSTRAINT "QUESTION_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "REPONSE" ADD CONSTRAINT "REPONSE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "WEBCONTAINER" ADD CONSTRAINT "WEBCONTAINER_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "QRTZ_JOB_DETAILS" ADD PRIMARY KEY ("SCHED_NAME", "JOB_NAME", "JOB_GROUP") ENABLE


ALTER TABLE "QRTZ_TRIGGERS" ADD PRIMARY KEY ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") ENABLE


ALTER TABLE "QRTZ_BLOB_TRIGGERS" ADD PRIMARY KEY ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") ENABLE


ALTER TABLE "JENA_PREFIX" ADD PRIMARY KEY ("ID") ENABLE


ALTER TABLE "NOTE" ADD CONSTRAINT "NOTE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "NXP_LOGS_EXTINFO" ADD PRIMARY KEY ("LOG_EXTINFO_ID") ENABLE


ALTER TABLE "INFO_UTILISATEUR_CONNECTION" ADD CONSTRAINT "INFO_UTILISATEUR_CONNECTION_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "HISTORIQUE_MDP" ADD PRIMARY KEY ("ID") ENABLE


ALTER TABLE "GOUVERNEMENT" ADD CONSTRAINT "GOUVERNEMENT_PK" PRIMARY KEY ("ID_ORGANIGRAMME") ENABLE


ALTER TABLE "INSTITUTION" ADD CONSTRAINT "INSTITUTION_PK" PRIMARY KEY ("ID_ORGANIGRAMME") ENABLE


ALTER TABLE "ENTITE" ADD CONSTRAINT "ENTITE_PK" PRIMARY KEY ("ID_ORGANIGRAMME") ENABLE


ALTER TABLE "UNITE_STRUCTURELLE" ADD CONSTRAINT "UNITE_PK" PRIMARY KEY ("ID_ORGANIGRAMME") ENABLE


ALTER TABLE "POSTE" ADD CONSTRAINT "POSTE_PK" PRIMARY KEY ("ID_ORGANIGRAMME") ENABLE


ALTER TABLE "ETATQUESTION" ADD CONSTRAINT "ETATQUESTION_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "HIERARCHY_READ_ACL" ADD PRIMARY KEY ("ID") ENABLE


ALTER TABLE "QRTZ_CALENDARS" ADD PRIMARY KEY ("SCHED_NAME", "CALENDAR_NAME") ENABLE


ALTER TABLE "QRTZ_SCHEDULER_STATE" ADD PRIMARY KEY ("SCHED_NAME", "INSTANCE_NAME") ENABLE


ALTER TABLE "TIMBRE" ADD CONSTRAINT "TIMBRE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "STATISTIQUE_VALEUR" ADD PRIMARY KEY ("ID") ENABLE


ALTER TABLE "BATCH_LOG" ADD CONSTRAINT "BATCH_LOG_PK" PRIMARY KEY ("ID_LOG") ENABLE


ALTER TABLE "BATCH_RESULT" ADD CONSTRAINT "BATCH_RESULT_PK" PRIMARY KEY ("ID_RESULT") ENABLE


ALTER TABLE "NOTIFICATIONS_SUIVI_BATCHS" ADD CONSTRAINT "NOTIFICATIONS_SUIVI_BATCHS_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "SIGNALEMENTQUESTION" ADD CONSTRAINT "SIGNALEMENTQUESTION_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "SMART_FOLDER" ADD CONSTRAINT "SMART_FOLDER_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "SORTINFOTYPE" ADD CONSTRAINT "SORTINFOTYPE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "STATISTIQUE_DIRECTION" ADD PRIMARY KEY ("ID") ENABLE


ALTER TABLE "STATISTIQUE_GROUPE" ADD PRIMARY KEY ("ID") ENABLE


ALTER TABLE "STATISTIQUE_MINISTERE" ADD PRIMARY KEY ("ID") ENABLE


ALTER TABLE "STATISTIQUE_MOIS" ADD PRIMARY KEY ("ID") ENABLE


ALTER TABLE "STATISTIQUE_QUESTION_REPONSE" ADD PRIMARY KEY ("ID") ENABLE


ALTER TABLE "STATUS" ADD CONSTRAINT "STATUS_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "STEP_FOLDER" ADD CONSTRAINT "STEP_FOLDER_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "TAG" ADD CONSTRAINT "TAG_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "TYPE_CONTACT" ADD CONSTRAINT "TYPE_CONTACT_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "UID" ADD CONSTRAINT "UID_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "ROUTING_TASK" ADD CONSTRAINT "ROUTING_TASK_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "REQUETEMETADONNEES" ADD CONSTRAINT "REQUETEMETADONNEES_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "REQUETESIMPLE" ADD CONSTRAINT "REQUETESIMPLE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "REQUETETEXTEINTEGRAL" ADD CONSTRAINT "REQUETETEXTEINTEGRAL_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "JENA_GRAPH" ADD PRIMARY KEY ("ID") ENABLE


ALTER TABLE "JETON_DOC" ADD CONSTRAINT "JETON_DOC_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "JETON_MAITRE" ADD CONSTRAINT "JETON_MAITRE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "LOCALTHEMECONFIG" ADD PRIMARY KEY ("ID") ENABLE


ALTER TABLE "LOCKS" ADD CONSTRAINT "LOCKS_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "MAIL" ADD CONSTRAINT "MAIL_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "DEFAULTSETTINGS" ADD CONSTRAINT "DEFAULTSETTINGS_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "DELEGATION" ADD CONSTRAINT "DELEGATION_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "DOSSIER_REPONSE" ADD CONSTRAINT "DOSSIER_REPONSE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "DOSSIER_REPONSES_LINK" ADD CONSTRAINT "DOSSIER_REPONSES_LINK_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "DUBLINCORE" ADD CONSTRAINT "DUBLINCORE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "ELEMENTFONDDOSSIER" ADD CONSTRAINT "ELEMENTFONDDOSSIER_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "FACETED_SEARCH" ADD CONSTRAINT "FACETED_SEARCH_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "FACETED_SEARCH_DEFAULT" ADD CONSTRAINT "FACETED_SEARCH_DEFAULT_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "FAVORISDOSSIER" ADD CONSTRAINT "FAVORISDOSSIER_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "FAVORISINDEXATION" ADD CONSTRAINT "FAVORISINDEXATION_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "FEUILLE_ROUTE" ADD CONSTRAINT "FEUILLE_ROUTE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "FILE" ADD CONSTRAINT "FILE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "FONDDOSSIER" ADD CONSTRAINT "FONDDOSSIER_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "HISTORIQUEATTRIBUTION" ADD CONSTRAINT "HISTORIQUEATTRIBUTION_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "INDEXATION" ADD CONSTRAINT "INDEXATION_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "INDEXATION_COMP" ADD CONSTRAINT "INDEXATION_COMP_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "INFO_COMMENTS" ADD CONSTRAINT "INFO_COMMENTS_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "QRTZ_LOCKS" ADD PRIMARY KEY ("SCHED_NAME", "LOCK_NAME") ENABLE


ALTER TABLE "LISTEELIMINATION" ADD CONSTRAINT "LISTEELIMINATION_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "LOCK_JETON_MAITRE" ADD CONSTRAINT "LOCK_JETON_MAITRE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "NXP_UIDSEQ" ADD PRIMARY KEY ("SEQ_ID") ENABLE


ALTER TABLE "NXP_UIDSEQ" ADD UNIQUE ("SEQ_KEY") ENABLE


ALTER TABLE "QRTZ_SIMPLE_TRIGGERS" ADD PRIMARY KEY ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") ENABLE


ALTER TABLE "QRTZ_CRON_TRIGGERS" ADD PRIMARY KEY ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") ENABLE


ALTER TABLE "QRTZ_SIMPROP_TRIGGERS" ADD PRIMARY KEY ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") ENABLE


ALTER TABLE "QRTZ_PAUSED_TRIGGER_GRPS" ADD PRIMARY KEY ("SCHED_NAME", "TRIGGER_GROUP") ENABLE


ALTER TABLE "UI_TYPES_CONFIGURATION" ADD CONSTRAINT "UI_TYPES_CONFIGURATION_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "USERSETTINGS" ADD CONSTRAINT "USERSETTINGS_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "USERSUBSCRIPTION" ADD PRIMARY KEY ("ID") ENABLE


ALTER TABLE "VCARD" ADD CONSTRAINT "VCARD_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "VERSIONS" ADD CONSTRAINT "VERSIONS_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "WSNOTIFICATION" ADD CONSTRAINT "WSNOTIFICATION_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "QRTZ_FIRED_TRIGGERS" ADD PRIMARY KEY ("SCHED_NAME", "ENTRY_ID") ENABLE


-- new object type path: SCHEMA_EXPORT/TABLE/CONSTRAINT/REF_CONSTRAINT
ALTER TABLE "HIERARCHY" ADD CONSTRAINT "HIER_7A50B200_FK" FOREIGN KEY ("PARENTID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "ACLS" ADD CONSTRAINT "ACLS_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "ACTIONNABLE_CASE_LINK" ADD CONSTRAINT "ACTI_D69A363C_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "ADVANCED_SEARCH" ADD CONSTRAINT "ADVA_102157D6_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "ALERT" ADD CONSTRAINT "ALERT_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "ALLOT_IDDOSSIERS" ADD CONSTRAINT "ALLO_67CE8C90_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "ALLOTISSEMENT" ADD CONSTRAINT "ALLOTISSEMENT_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "ALTR_RECIPIENTS" ADD CONSTRAINT "ALTR_C630CF28_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "ATTRIBUTION#ANONYMOUSTYPE" ADD CONSTRAINT "ATTR_7B66046D_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "BIRTREPORT" ADD CONSTRAINT "BIRTREPORT_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "BIRTREPORTMODEL" ADD CONSTRAINT "BIRT_CB0F83D0_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CASE_DOCUMENTSID" ADD CONSTRAINT "CASE_99AB76F4_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CASE_ITEM" ADD CONSTRAINT "CASE_ITEM_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CASE_LINK" ADD CONSTRAINT "CASE_LINK_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CLASSIFICATION_TARGETS" ADD CONSTRAINT "CLAS_4898D61D_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CMDIST_ALL_ACTION_PAR_6B4BBED8" ADD CONSTRAINT "CMDI_7B09D466_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CMDIST_ALL_COPY_PARTI_21AB3C5B" ADD CONSTRAINT "CMDI_516D49CB_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CMDIST_INITIAL_ACTION_4CD43708" ADD CONSTRAINT "CMDI_DBF5EC6D_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CMDIST_INITIAL_ACTION_88A481B7" ADD CONSTRAINT "CMDI_248596C2_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CMDIST_INITIAL_COPY_E_B3610C04" ADD CONSTRAINT "CMDI_ED3FDFAC_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CMDIST_INITIAL_COPY_I_D6588F7E" ADD CONSTRAINT "CMDI_3EE0F322_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CMDOC_SENDERS" ADD CONSTRAINT "CMDOC_SENDERS_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "COMMENT" ADD CONSTRAINT "COMMENT_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "COMMON" ADD CONSTRAINT "COMMON_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CONTENT" ADD CONSTRAINT "CONTENT_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CONTENT_VIEW_DISPLAY" ADD CONSTRAINT "CONT_0FEB3678_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CVD_SELECTEDLAYOUTCOLUMNS" ADD CONSTRAINT "CVD__98E4BA2C_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "DC_CONTRIBUTORS" ADD CONSTRAINT "DC_C_4015E4A8_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "DC_SUBJECTS" ADD CONSTRAINT "DC_SUBJECTS_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "DEFAULTSETTINGS" ADD CONSTRAINT "DEFA_795A5897_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "DELEGATION" ADD CONSTRAINT "DELEGATION_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "DEL_PROFILLIST" ADD CONSTRAINT "DEL_PROFILLIST_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "DOCRI_PARTICIPATINGDOCUMENTS" ADD CONSTRAINT "DOCR_336D9931_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "DOSSIER_REPONSE" ADD CONSTRAINT "DOSS_F4FA3C63_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "DOSSIER_REPONSES_LINK" ADD CONSTRAINT "DOSS_E3001DCC_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "DUBLINCORE" ADD CONSTRAINT "DUBLINCORE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "ELEMENTFONDDOSSIER" ADD CONSTRAINT "ELEM_EDF685BB_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "FACETED_SEARCH" ADD CONSTRAINT "FACETED_SEARCH_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "FACETED_SEARCH_DEFAULT" ADD CONSTRAINT "FACE_D7EAAFD8_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "FAVORISDOSSIER" ADD CONSTRAINT "FAVORISDOSSIER_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "FAVORISINDEXATION" ADD CONSTRAINT "FAVO_36C497DF_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "FEUILLE_ROUTE" ADD CONSTRAINT "FEUILLE_ROUTE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "FILE" ADD CONSTRAINT "FILE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "FONDDOSSIER" ADD CONSTRAINT "FONDDOSSIER_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "FSD_DC_COVERAGE" ADD CONSTRAINT "FSD__A5BA3E76_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "FSD_DC_CREATOR" ADD CONSTRAINT "FSD_DC_CREATOR_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "FSD_DC_NATURE" ADD CONSTRAINT "FSD_DC_NATURE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "FSD_DC_SUBJECTS" ADD CONSTRAINT "FSD__56431C6C_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "FSD_ECM_PATH" ADD CONSTRAINT "FSD_ECM_PATH_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "HIERARCHY_READ_ACL" ADD CONSTRAINT "HIERARCHY_READ_ACL_ID_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "HISTORIQUEATTRIBUTION" ADD CONSTRAINT "HIST_A9D3CB76_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "INDEXATION" ADD CONSTRAINT "INDEXATION_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "INDEXATION_COMP" ADD CONSTRAINT "INDE_F21B7009_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "INFO_COMMENTS" ADD CONSTRAINT "INFO_COMMENTS_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "IXA_AN_ANALYSE" ADD CONSTRAINT "IXA_AN_ANALYSE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "IXA_AN_RUBRIQUE" ADD CONSTRAINT "IXA__AB4AA9D3_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "IXACOMP_AN_ANALYSE" ADD CONSTRAINT "IXAC_16923046_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "IXACOMP_AN_RUBRIQUE" ADD CONSTRAINT "IXAC_C62A5B20_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "IXACOMP_MOTCLEF_MINISTERE" ADD CONSTRAINT "IXAC_1F600CE3_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "IXACOMP_SE_RENVOI" ADD CONSTRAINT "IXAC_1A24F39E_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "IXACOMP_SE_RUBRIQUE" ADD CONSTRAINT "IXAC_FB83EC02_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "IXACOMP_SE_THEME" ADD CONSTRAINT "IXAC_A9CD4796_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "IXACOMP_TA_RUBRIQUE" ADD CONSTRAINT "IXAC_F9BDB866_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "IXA_MOTCLEF_MINISTERE" ADD CONSTRAINT "IXA__97D03FBC_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "IXA_SE_RENVOI" ADD CONSTRAINT "IXA_SE_RENVOI_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "IXA_SE_RUBRIQUE" ADD CONSTRAINT "IXA__F5EEFBB1_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "IXA_SE_THEME" ADD CONSTRAINT "IXA_SE_THEME_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "IXA_TA_RUBRIQUE" ADD CONSTRAINT "IXA__AE90BCA6_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "JETON_DOC" ADD CONSTRAINT "JETON_DOC_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "JETON_MAITRE" ADD CONSTRAINT "JETON_MAITRE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MAIL" ADD CONSTRAINT "MAIL_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MAILBOX" ADD CONSTRAINT "MAILBOX_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MAILBOX_ID" ADD CONSTRAINT "MAILBOX_ID_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MAIL_CC_RECIPIENTS" ADD CONSTRAINT "MAIL_0700D9E5_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MAIL_RECIPIENTS" ADD CONSTRAINT "MAIL_926B433B_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MISC" ADD CONSTRAINT "MISC_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MLBX_FAVORITES" ADD CONSTRAINT "MLBX_FAVORITES_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MLBX_GROUPS" ADD CONSTRAINT "MLBX_GROUPS_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MLBX_NOTIFIED_USERS" ADD CONSTRAINT "MLBX_9887A51E_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MLBX_PROFILES" ADD CONSTRAINT "MLBX_PROFILES_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MLBX_USERS" ADD CONSTRAINT "MLBX_USERS_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "NAV" ADD CONSTRAINT "NAV_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "NAVIGATIONSETTINGS" ADD CONSTRAINT "NAVI_9BCB26B1_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "NXP_LOGS_MAPEXTINFOS" ADD CONSTRAINT "FKF96F609C4EA9779" FOREIGN KEY ("INFO_FK")
	  REFERENCES "NXP_LOGS_EXTINFO" ("LOG_EXTINFO_ID") ENABLE


ALTER TABLE "NXP_LOGS_MAPEXTINFOS" ADD CONSTRAINT "FKF96F609E7AC49AA" FOREIGN KEY ("LOG_FK")
	  REFERENCES "NXP_LOGS" ("LOG_ID") ENABLE


ALTER TABLE "PARAMETER" ADD CONSTRAINT "PARAMETER_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "PARAMETRE" ADD CONSTRAINT "PARAMETRE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "PARTICIPANTLIST" ADD CONSTRAINT "PART_E4211619_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "PROFIL_UTILISATEUR" ADD CONSTRAINT "PROF_24CEB1DF_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "PROTOCOL" ADD CONSTRAINT "PROTOCOL_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "PROXIES" ADD CONSTRAINT "PROXIES_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "PROXIES" ADD CONSTRAINT "PROXIES_TARGETID_HIERARCHY_FK" FOREIGN KEY ("TARGETID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "PRU_COLUMNS" ADD CONSTRAINT "PRU_COLUMNS_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "PUBLISH_SECTIONS" ADD CONSTRAINT "PUBL_D888C7AF_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "QUERYNAV" ADD CONSTRAINT "QUERYNAV_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "RELATEDTEXTRESOURCE" ADD CONSTRAINT "RELA_835C3B64_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "RELATION" ADD CONSTRAINT "RELATION_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "RELATION_SEARCH" ADD CONSTRAINT "RELA_30BD7D76_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "REL_SRCH_ECM_PATH" ADD CONSTRAINT "REL__E3A6C2F4_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "RENOUVELLEMENTQUESTION" ADD CONSTRAINT "RENO_4AFFE04B_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "REPLOGL_DETAILS" ADD CONSTRAINT "REPL_294569B7_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "REPLOG_LINES" ADD CONSTRAINT "REPLOG_LINES_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "REPONSES_LOGGING" ADD CONSTRAINT "REPO_F95E4AAC_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "REPONSES_LOGGING_DETAIL" ADD CONSTRAINT "REPO_11A28224_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "REPONSES_LOGGING_LINE" ADD CONSTRAINT "REPO_9492F96B_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "REPOSITORIES" ADD CONSTRAINT "REPOSITORIES_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "REQUETECOMPLEXE" ADD CONSTRAINT "REQU_531E415A_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "REQUETEFEUILLEROUTE" ADD CONSTRAINT "REQU_126F669D_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "REQUETEMETADONNEES" ADD CONSTRAINT "REQU_C98AA63A_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "REQUETESIMPLE" ADD CONSTRAINT "REQUETESIMPLE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "REQUETETEXTEINTEGRAL" ADD CONSTRAINT "REQU_FFB2E76B_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "RMLBX_PRECALCULLIST" ADD CONSTRAINT "RMLB_D6ED5563_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "ROUTING_TASK" ADD CONSTRAINT "ROUTING_TASK_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "RQC_CARACTERISTIQUEQUESTION" ADD CONSTRAINT "RQC__2F846F29_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "RQC_ORIGINEQUESTION" ADD CONSTRAINT "RQC__9C51B20D_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "RQMET_ETATQUESTION" ADD CONSTRAINT "RQME_9F7ADB70_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "SEARCH_COVERAGE" ADD CONSTRAINT "SEAR_34319F67_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "SEARCH_CURRENTLIFECYCLESTATES" ADD CONSTRAINT "SEAR_1B5AF6D2_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "SEARCH_NATURE" ADD CONSTRAINT "SEARCH_NATURE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "SEARCH_SEARCHPATH" ADD CONSTRAINT "SEAR_8976FDB6_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "SEARCH_SUBJECTS" ADD CONSTRAINT "SEAR_110E4D75_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "SIGNALEMENTQUESTION" ADD CONSTRAINT "SIGN_6745533D_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "SMART_FOLDER" ADD CONSTRAINT "SMART_FOLDER_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "SORTINFOTYPE" ADD CONSTRAINT "SORTINFOTYPE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "STATUS" ADD CONSTRAINT "STATUS_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "STEP_FOLDER" ADD CONSTRAINT "STEP_FOLDER_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "TAG" ADD CONSTRAINT "TAG_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "TYPE_CONTACT" ADD CONSTRAINT "TYPE_CONTACT_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "UID" ADD CONSTRAINT "UID_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "UITYPESCONF_ALLOWEDTYPES" ADD CONSTRAINT "UITY_694B86C3_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "UITYPESCONF_DENIEDTYPES" ADD CONSTRAINT "UITY_6E2ADC3E_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "UI_TYPES_CONFIGURATION" ADD CONSTRAINT "UI_T_F6D8BC6A_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "USERSETTINGS" ADD CONSTRAINT "USERSETTINGS_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "VCARD" ADD CONSTRAINT "VCARD_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "VERSIONS" ADD CONSTRAINT "VERSIONS_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "WSNOTIFICATION" ADD CONSTRAINT "WSNOTIFICATION_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "QRTZ_SIMPLE_TRIGGERS" ADD FOREIGN KEY ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP")
	  REFERENCES "QRTZ_TRIGGERS" ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") ENABLE


ALTER TABLE "QRTZ_CRON_TRIGGERS" ADD FOREIGN KEY ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP")
	  REFERENCES "QRTZ_TRIGGERS" ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") ENABLE


ALTER TABLE "QRTZ_SIMPROP_TRIGGERS" ADD FOREIGN KEY ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP")
	  REFERENCES "QRTZ_TRIGGERS" ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") ENABLE


ALTER TABLE "LISTEELIMINATION" ADD CONSTRAINT "LIST_3B07BA5B_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "LOCK_JETON_MAITRE" ADD CONSTRAINT "LJM_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "LOCK_JETON_MAITRE" ADD CONSTRAINT "LJM_ID_JETON_MAITRE_FK" FOREIGN KEY ("ID_JETON_MAITRE")
	  REFERENCES "JETON_MAITRE" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "TIMBRE" ADD CONSTRAINT "TIMBRE_00C5451D_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "BATCH_RESULT" ADD CONSTRAINT "BR_ID_BATCH_LOG_FK" FOREIGN KEY ("ID_LOG")
	  REFERENCES "BATCH_LOG" ("ID_LOG") ON DELETE CASCADE ENABLE


ALTER TABLE "NOTIFICATIONS_SUIVI_BATCHS" ADD CONSTRAINT "NOTI_B002CA82_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "NSB_RECEIVERMAILLIST" ADD CONSTRAINT "NSB__021DEF94_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "INFO_UTILISATEUR_CONNECTION" ADD CONSTRAINT "INFO_B4B11272_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "ENTITE" ADD CONSTRAINT "EN_ID_PARENT_GOUV_LOG_FK" FOREIGN KEY ("ID_PARENT_GOUV")
	  REFERENCES "GOUVERNEMENT" ("ID_ORGANIGRAMME") ON DELETE CASCADE ENABLE


ALTER TABLE "ETATQUESTION" ADD CONSTRAINT "ETATQUESTION_PARENT_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "ETAT_APPLICATION" ADD CONSTRAINT "ETAT_E81FD654_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "REPLOGD_FULLLOG" ADD CONSTRAINT "REPL_68E6D88C_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "REPLOGL_FULLLOG" ADD CONSTRAINT "REPL_DBB0E430_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "ANCESTORS" ADD CONSTRAINT "ANCESTORS_HIERARCHY_ID_FK" FOREIGN KEY ("HIERARCHY_ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "ERRATUM#ANONYMOUSTYPE" ADD CONSTRAINT "ERRA_90BF0BDB_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "FULLTEXT" ADD CONSTRAINT "FULLTEXT_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "NOTE" ADD CONSTRAINT "NOTE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "QUESTION" ADD CONSTRAINT "QUESTION_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "REPONSE" ADD CONSTRAINT "REPONSE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "WEBCONTAINER" ADD CONSTRAINT "WEBCONTAINER_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "QRTZ_TRIGGERS" ADD FOREIGN KEY ("SCHED_NAME", "JOB_NAME", "JOB_GROUP")
	  REFERENCES "QRTZ_JOB_DETAILS" ("SCHED_NAME", "JOB_NAME", "JOB_GROUP") ENABLE


ALTER TABLE "QRTZ_BLOB_TRIGGERS" ADD FOREIGN KEY ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP")
	  REFERENCES "QRTZ_TRIGGERS" ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") ENABLE


-- new object type path: SCHEMA_EXPORT/TABLE/TRIGGER
-- CONNECT REPONSES_INTE
CREATE TRIGGER "NX_TRIG_ACLR_MODIFIED"
  AFTER INSERT ON aclr
  FOR EACH ROW
       WHEN (NEW.acl_id IS NOT NULL) DECLARE
  acl NX_STRING_ARRAY;
  ace VARCHAR(4000);
  sep VARCHAR2(1) := '|';
BEGIN
	FOR r IN (SELECT DISTINCT USERGROUP FROM SW_ACLR_USER_ACLID) LOOP
		acl := split(:NEW.acl, sep);
		FOR i IN acl.FIRST .. acl.LAST LOOP
			ace := acl(i);
			IF ace = r.usergroup THEN
				-- GRANTED
				INSERT INTO SW_ACLR_USER_ACLID SELECT r.usergroup, :NEW.acl_id FROM DUAL
				WHERE NOT EXISTS (SELECT 1 FROM SW_ACLR_USER_ACLID WHERE usergroup = r.usergroup AND acl_id = :NEW.acl_id);
			END IF;
		END LOOP;
	END LOOP;
END;


ALTER TRIGGER "NX_TRIG_ACLR_MODIFIED" ENABLE


CREATE TRIGGER "NX_TRIG_HIER_READ_ACL_MOD"
  AFTER INSERT OR UPDATE ON hierarchy_read_acl
  FOR EACH ROW
       WHEN (NEW.acl_id IS NOT NULL) BEGIN
  MERGE INTO aclr USING DUAL
    ON (aclr.acl_id = :NEW.acl_id)
    WHEN NOT MATCHED THEN
    INSERT (acl_id, acl) VALUES (:NEW.acl_id, nx_get_read_acl(:NEW.id));
END;


ALTER TRIGGER "NX_TRIG_HIER_READ_ACL_MOD" ENABLE


CREATE TRIGGER "NX_TRIG_HIERARCHY_UPDATE"  
  AFTER UPDATE ON hierarchy
  FOR EACH ROW
          WHEN (NEW.isproperty = 0 AND NEW.parentid <> OLD.parentid) BEGIN
  INSERT INTO aclr_modified (hierarchy_id, is_new) VALUES (:NEW.id, 0);
END;


ALTER TRIGGER "NX_TRIG_HIERARCHY_UPDATE" ENABLE


CREATE TRIGGER "NX_TRIG_FT_UPDATE"  
  BEFORE INSERT OR UPDATE ON "FULLTEXT"
  FOR EACH ROW
BEGIN
    :NEW."FULLTEXT" := :NEW."SIMPLETEXT" || :NEW."BINARYTEXT";
  :NEW."FULLTEXT_IDQUESTION" := :NEW."SIMPLETEXT_IDQUESTION" || :NEW."BINARYTEXT_IDQUESTION";
  :NEW."FULLTEXT_TXTREPONSE" := :NEW."SIMPLETEXT_TXTREPONSE" || :NEW."BINARYTEXT_TXTREPONSE";
  :NEW."FULLTEXT_TXTQUESTION" := :NEW."SIMPLETEXT_TXTQUESTION" || :NEW."BINARYTEXT_TXTQUESTION";
  :NEW."FULLTEXT_SENATTITRE" := :NEW."SIMPLETEXT_SENATTITRE" || :NEW."BINARYTEXT_SENATTITRE";
END;


ALTER TRIGGER "NX_TRIG_FT_UPDATE" ENABLE


CREATE TRIGGER "NX_TRIG_ACLS_MODIFIED"  
  AFTER INSERT OR UPDATE OR DELETE ON acls
  FOR EACH ROW
-- Trigger to log change in the acls table
DECLARE
  doc_id acls.id%TYPE := CASE WHEN DELETING THEN :OLD.id ELSE :NEW.id END;
BEGIN
  INSERT INTO aclr_modified (hierarchy_id, is_new) VALUES (doc_id, 0);
END;


ALTER TRIGGER "NX_TRIG_ACLS_MODIFIED" ENABLE


CREATE TRIGGER "NX_TRIG_HIERARCHY_INSERT"  
  AFTER INSERT ON hierarchy
  FOR EACH ROW
          WHEN (NEW.isproperty = 0) BEGIN
  INSERT INTO aclr_modified (hierarchy_id, is_new) VALUES (:NEW.id, 1);
END;


ALTER TRIGGER "NX_TRIG_HIERARCHY_INSERT" ENABLE


-- new object type path: SCHEMA_EXPORT/TABLE/INDEX/DOMAIN_INDEX/INDEX
BEGIN 
ctxsys.driimp.create_index('FULL_989918B1_IDX','FULLTEXT',USER,
'ID','1','FULLTEXT_TXTQUESTION','112',
'0','924709','8130','924817',
NULL, NULL, NULL, 0,'TQY','ON COMMIT','12582912',NULL, NULL, NULL);
ctxsys.driimp.set_object('DATASTORE','DIRECT_DATASTORE',0);
ctxsys.driimp.set_object('DATATYPE','LOB_DATATYPE',0);
ctxsys.driimp.set_object('DATAX','SYNCH_DATAX',0);
ctxsys.driimp.set_object('FILTER','NULL_FILTER',0);
ctxsys.driimp.set_object('SECTION_GROUP','NULL_SECTION_GROUP',0);
ctxsys.driimp.set_object('LEXER','BASIC_LEXER',2);
ctxsys.driimp.set_value('BASE_LETTER','1');
ctxsys.driimp.set_value('INDEX_STEMS','4');
ctxsys.driimp.set_object('WORDLIST','BASIC_WORDLIST',3);
ctxsys.driimp.set_value('STEMMER','4');
ctxsys.driimp.set_value('SUBSTRING_INDEX','0');
ctxsys.driimp.set_value('PREFIX_INDEX','0');
ctxsys.driimp.set_object('STOPLIST','BASIC_STOPLIST',114);
ctxsys.driimp.set_value('STOP_WORD','Mr');
ctxsys.driimp.set_value('STOP_WORD','Mrs');
ctxsys.driimp.set_value('STOP_WORD','Ms');
ctxsys.driimp.set_value('STOP_WORD','a');
ctxsys.driimp.set_value('STOP_WORD','all');
ctxsys.driimp.set_value('STOP_WORD','almost');
ctxsys.driimp.set_value('STOP_WORD','also');
ctxsys.driimp.set_value('STOP_WORD','although');
ctxsys.driimp.set_value('STOP_WORD','an');
ctxsys.driimp.set_value('STOP_WORD','and');
ctxsys.driimp.set_value('STOP_WORD','any');
ctxsys.driimp.set_value('STOP_WORD','are');
ctxsys.driimp.set_value('STOP_WORD','as');
ctxsys.driimp.set_value('STOP_WORD','at');
ctxsys.driimp.set_value('STOP_WORD','be');
ctxsys.driimp.set_value('STOP_WORD','because');
ctxsys.driimp.set_value('STOP_WORD','been');
ctxsys.driimp.set_value('STOP_WORD','both');
ctxsys.driimp.set_value('STOP_WORD','but');
ctxsys.driimp.set_value('STOP_WORD','by');
ctxsys.driimp.set_value('STOP_WORD','can');
ctxsys.driimp.set_value('STOP_WORD','could');
ctxsys.driimp.set_value('STOP_WORD','d');
ctxsys.driimp.set_value('STOP_WORD','did');
ctxsys.driimp.set_value('STOP_WORD','do');
ctxsys.driimp.set_value('STOP_WORD','does');
ctxsys.driimp.set_value('STOP_WORD','either');
ctxsys.driimp.set_value('STOP_WORD','for');
ctxsys.driimp.set_value('STOP_WORD','from');
ctxsys.driimp.set_value('STOP_WORD','had');
ctxsys.driimp.set_value('STOP_WORD','has');
ctxsys.driimp.set_value('STOP_WORD','have');
ctxsys.driimp.set_value('STOP_WORD','having');
ctxsys.driimp.set_value('STOP_WORD','he');
ctxsys.driimp.set_value('STOP_WORD','her');
ctxsys.driimp.set_value('STOP_WORD','here');
ctxsys.driimp.set_value('STOP_WORD','hers');
ctxsys.driimp.set_value('STOP_WORD','him');
ctxsys.driimp.set_value('STOP_WORD','his');
ctxsys.driimp.set_value('STOP_WORD','how');
ctxsys.driimp.set_value('STOP_WORD','however');
ctxsys.driimp.set_value('STOP_WORD','i');
ctxsys.driimp.set_value('STOP_WORD','if');
ctxsys.driimp.set_value('STOP_WORD','in');
ctxsys.driimp.set_value('STOP_WORD','into');
ctxsys.driimp.set_value('STOP_WORD','is');
ctxsys.driimp.set_value('STOP_WORD','it');
ctxsys.driimp.set_value('STOP_WORD','its');
ctxsys.driimp.set_value('STOP_WORD','just');
ctxsys.driimp.set_value('STOP_WORD','ll');
ctxsys.driimp.set_value('STOP_WORD','me');
ctxsys.driimp.set_value('STOP_WORD','might');
ctxsys.driimp.set_value('STOP_WORD','my');
ctxsys.driimp.set_value('STOP_WORD','no');
ctxsys.driimp.set_value('STOP_WORD','non');
ctxsys.driimp.set_value('STOP_WORD','nor');
ctxsys.driimp.set_value('STOP_WORD','not');
ctxsys.driimp.set_value('STOP_WORD','of');
ctxsys.driimp.set_value('STOP_WORD','on');
ctxsys.driimp.set_value('STOP_WORD','one');
ctxsys.driimp.set_value('STOP_WORD','only');
ctxsys.driimp.set_value('STOP_WORD','onto');
ctxsys.driimp.set_value('STOP_WORD','or');
ctxsys.driimp.set_value('STOP_WORD','our');
ctxsys.driimp.set_value('STOP_WORD','ours');
ctxsys.driimp.set_value('STOP_WORD','s');
ctxsys.driimp.set_value('STOP_WORD','shall');
ctxsys.driimp.set_value('STOP_WORD','she');
ctxsys.driimp.set_value('STOP_WORD','should');
ctxsys.driimp.set_value('STOP_WORD','since');
ctxsys.driimp.set_value('STOP_WORD','so');
ctxsys.driimp.set_value('STOP_WORD','some');
ctxsys.driimp.set_value('STOP_WORD','still');
ctxsys.driimp.set_value('STOP_WORD','such');
ctxsys.driimp.set_value('STOP_WORD','t');
ctxsys.driimp.set_value('STOP_WORD','than');
ctxsys.driimp.set_value('STOP_WORD','that');
ctxsys.driimp.set_value('STOP_WORD','the');
ctxsys.driimp.set_value('STOP_WORD','their');
ctxsys.driimp.set_value('STOP_WORD','them');
ctxsys.driimp.set_value('STOP_WORD','then');
ctxsys.driimp.set_value('STOP_WORD','there');
ctxsys.driimp.set_value('STOP_WORD','therefore');
ctxsys.driimp.set_value('STOP_WORD','these');
ctxsys.driimp.set_value('STOP_WORD','they');
ctxsys.driimp.set_value('STOP_WORD','this');
ctxsys.driimp.set_value('STOP_WORD','those');
ctxsys.driimp.set_value('STOP_WORD','though');
ctxsys.driimp.set_value('STOP_WORD','through');
ctxsys.driimp.set_value('STOP_WORD','thus');
ctxsys.driimp.set_value('STOP_WORD','to');
ctxsys.driimp.set_value('STOP_WORD','too');
ctxsys.driimp.set_value('STOP_WORD','until');
ctxsys.driimp.set_value('STOP_WORD','ve');
ctxsys.driimp.set_value('STOP_WORD','very');
ctxsys.driimp.set_value('STOP_WORD','was');
ctxsys.driimp.set_value('STOP_WORD','we');
ctxsys.driimp.set_value('STOP_WORD','were');
ctxsys.driimp.set_value('STOP_WORD','what');
ctxsys.driimp.set_value('STOP_WORD','when');
ctxsys.driimp.set_value('STOP_WORD','where');
ctxsys.driimp.set_value('STOP_WORD','whether');
ctxsys.driimp.set_value('STOP_WORD','which');
ctxsys.driimp.set_value('STOP_WORD','while');
ctxsys.driimp.set_value('STOP_WORD','who');
ctxsys.driimp.set_value('STOP_WORD','whose');
ctxsys.driimp.set_value('STOP_WORD','why');
ctxsys.driimp.set_value('STOP_WORD','will');
ctxsys.driimp.set_value('STOP_WORD','with');
ctxsys.driimp.set_value('STOP_WORD','would');
ctxsys.driimp.set_value('STOP_WORD','yet');
ctxsys.driimp.set_value('STOP_WORD','you');
ctxsys.driimp.set_value('STOP_WORD','your');
ctxsys.driimp.set_value('STOP_WORD','yours');
ctxsys.driimp.set_object('STORAGE','BASIC_STORAGE',2);
ctxsys.driimp.set_value('R_TABLE_CLAUSE','lob (data) store as (cache)');
ctxsys.driimp.set_value('I_INDEX_CLAUSE','compress 2');
commit;
COMMIT; 
END; 


CREATE INDEX "FULL_989918B1_IDX" ON "FULLTEXT" ("FULLTEXT_TXTQUESTION") 
   INDEXTYPE IS "CTXSYS"."CONTEXT" 


BEGIN 
ctxsys.driimp.create_index('FULL_80158323_IDX','FULLTEXT',USER,
'ID','1','FULLTEXT_TXTREPONSE','112',
'0','924709','8130','924817',
NULL, NULL, NULL, 0,'TQY','ON COMMIT','12582912',NULL, NULL, NULL);
ctxsys.driimp.set_object('DATASTORE','DIRECT_DATASTORE',0);
ctxsys.driimp.set_object('DATATYPE','LOB_DATATYPE',0);
ctxsys.driimp.set_object('DATAX','SYNCH_DATAX',0);
ctxsys.driimp.set_object('FILTER','NULL_FILTER',0);
ctxsys.driimp.set_object('SECTION_GROUP','NULL_SECTION_GROUP',0);
ctxsys.driimp.set_object('LEXER','BASIC_LEXER',2);
ctxsys.driimp.set_value('BASE_LETTER','1');
ctxsys.driimp.set_value('INDEX_STEMS','4');
ctxsys.driimp.set_object('WORDLIST','BASIC_WORDLIST',3);
ctxsys.driimp.set_value('STEMMER','4');
ctxsys.driimp.set_value('SUBSTRING_INDEX','0');
ctxsys.driimp.set_value('PREFIX_INDEX','0');
ctxsys.driimp.set_object('STOPLIST','BASIC_STOPLIST',200);
ctxsys.driimp.set_value('STOP_WORD','a');
ctxsys.driimp.set_value('STOP_WORD','afin');
ctxsys.driimp.set_value('STOP_WORD','ailleurs');
ctxsys.driimp.set_value('STOP_WORD','ainsi');
ctxsys.driimp.set_value('STOP_WORD','alors');
ctxsys.driimp.set_value('STOP_WORD','après');
ctxsys.driimp.set_value('STOP_WORD','attendant');
ctxsys.driimp.set_value('STOP_WORD','au');
ctxsys.driimp.set_value('STOP_WORD','au-dessous');
ctxsys.driimp.set_value('STOP_WORD','au-dessus');
ctxsys.driimp.set_value('STOP_WORD','aucun');
ctxsys.driimp.set_value('STOP_WORD','aucune');
ctxsys.driimp.set_value('STOP_WORD','auprès');
ctxsys.driimp.set_value('STOP_WORD','auquel');
ctxsys.driimp.set_value('STOP_WORD','aussi');
ctxsys.driimp.set_value('STOP_WORD','aussitôt');
ctxsys.driimp.set_value('STOP_WORD','autant');
ctxsys.driimp.set_value('STOP_WORD','autour');
ctxsys.driimp.set_value('STOP_WORD','aux');
ctxsys.driimp.set_value('STOP_WORD','auxquelles');
ctxsys.driimp.set_value('STOP_WORD','auxquels');
ctxsys.driimp.set_value('STOP_WORD','avec');
ctxsys.driimp.set_value('STOP_WORD','beaucoup');
ctxsys.driimp.set_value('STOP_WORD','ce');
ctxsys.driimp.set_value('STOP_WORD','ceci');
ctxsys.driimp.set_value('STOP_WORD','cela');
ctxsys.driimp.set_value('STOP_WORD','celle');
ctxsys.driimp.set_value('STOP_WORD','celles');
ctxsys.driimp.set_value('STOP_WORD','celui');
ctxsys.driimp.set_value('STOP_WORD','cependant');
ctxsys.driimp.set_value('STOP_WORD','certain');
ctxsys.driimp.set_value('STOP_WORD','certaine');
ctxsys.driimp.set_value('STOP_WORD','certaines');
ctxsys.driimp.set_value('STOP_WORD','certains');
ctxsys.driimp.set_value('STOP_WORD','ces');
ctxsys.driimp.set_value('STOP_WORD','cet');
ctxsys.driimp.set_value('STOP_WORD','cette');
ctxsys.driimp.set_value('STOP_WORD','ceux');
ctxsys.driimp.set_value('STOP_WORD','chacun');
ctxsys.driimp.set_value('STOP_WORD','chacune');
ctxsys.driimp.set_value('STOP_WORD','chaque');
ctxsys.driimp.set_value('STOP_WORD','chez');
ctxsys.driimp.set_value('STOP_WORD','combien');
ctxsys.driimp.set_value('STOP_WORD','comme');
ctxsys.driimp.set_value('STOP_WORD','comment');
ctxsys.driimp.set_value('STOP_WORD','concernant');
ctxsys.driimp.set_value('STOP_WORD','dans');
ctxsys.driimp.set_value('STOP_WORD','de');
ctxsys.driimp.set_value('STOP_WORD','dedans');
ctxsys.driimp.set_value('STOP_WORD','dehors');
ctxsys.driimp.set_value('STOP_WORD','delà');
ctxsys.driimp.set_value('STOP_WORD','depuis');
ctxsys.driimp.set_value('STOP_WORD','des');
ctxsys.driimp.set_value('STOP_WORD','desquelles');
ctxsys.driimp.set_value('STOP_WORD','desquels');
ctxsys.driimp.set_value('STOP_WORD','dessus');
ctxsys.driimp.set_value('STOP_WORD','donc');
ctxsys.driimp.set_value('STOP_WORD','donné');
ctxsys.driimp.set_value('STOP_WORD','dont');
ctxsys.driimp.set_value('STOP_WORD','du');
ctxsys.driimp.set_value('STOP_WORD','duquel');
ctxsys.driimp.set_value('STOP_WORD','durant');
ctxsys.driimp.set_value('STOP_WORD','dès');
ctxsys.driimp.set_value('STOP_WORD','déjà');
ctxsys.driimp.set_value('STOP_WORD','elle');
ctxsys.driimp.set_value('STOP_WORD','elles');
ctxsys.driimp.set_value('STOP_WORD','en');
ctxsys.driimp.set_value('STOP_WORD','encore');
ctxsys.driimp.set_value('STOP_WORD','entre');
ctxsys.driimp.set_value('STOP_WORD','et');
ctxsys.driimp.set_value('STOP_WORD','etc');
ctxsys.driimp.set_value('STOP_WORD','eux');
ctxsys.driimp.set_value('STOP_WORD','furent');
ctxsys.driimp.set_value('STOP_WORD','grâce');
ctxsys.driimp.set_value('STOP_WORD','hormis');
ctxsys.driimp.set_value('STOP_WORD','hors');
ctxsys.driimp.set_value('STOP_WORD','ici');
ctxsys.driimp.set_value('STOP_WORD','il');
ctxsys.driimp.set_value('STOP_WORD','ils');
ctxsys.driimp.set_value('STOP_WORD','jadis');
ctxsys.driimp.set_value('STOP_WORD','je');
ctxsys.driimp.set_value('STOP_WORD','jusqu');
ctxsys.driimp.set_value('STOP_WORD','jusque');
ctxsys.driimp.set_value('STOP_WORD','la');
ctxsys.driimp.set_value('STOP_WORD','laquelle');
ctxsys.driimp.set_value('STOP_WORD','le');
ctxsys.driimp.set_value('STOP_WORD','lequel');
ctxsys.driimp.set_value('STOP_WORD','les');
ctxsys.driimp.set_value('STOP_WORD','lesquelles');
ctxsys.driimp.set_value('STOP_WORD','lesquels');
ctxsys.driimp.set_value('STOP_WORD','leur');
ctxsys.driimp.set_value('STOP_WORD','leurs');
ctxsys.driimp.set_value('STOP_WORD','lors');
ctxsys.driimp.set_value('STOP_WORD','lorsque');
ctxsys.driimp.set_value('STOP_WORD','lui');
ctxsys.driimp.set_value('STOP_WORD','là');
ctxsys.driimp.set_value('STOP_WORD','ma');
ctxsys.driimp.set_value('STOP_WORD','mais');
ctxsys.driimp.set_value('STOP_WORD','malgré');
ctxsys.driimp.set_value('STOP_WORD','me');
ctxsys.driimp.set_value('STOP_WORD','mes');
ctxsys.driimp.set_value('STOP_WORD','mien');
ctxsys.driimp.set_value('STOP_WORD','mienne');
ctxsys.driimp.set_value('STOP_WORD','miennes');
ctxsys.driimp.set_value('STOP_WORD','miens');
ctxsys.driimp.set_value('STOP_WORD','moins');
ctxsys.driimp.set_value('STOP_WORD','moment');
ctxsys.driimp.set_value('STOP_WORD','mon');
ctxsys.driimp.set_value('STOP_WORD','moyennant');
ctxsys.driimp.set_value('STOP_WORD','même');
ctxsys.driimp.set_value('STOP_WORD','mêmes');
ctxsys.driimp.set_value('STOP_WORD','ne');
ctxsys.driimp.set_value('STOP_WORD','ni');
ctxsys.driimp.set_value('STOP_WORD','non');
ctxsys.driimp.set_value('STOP_WORD','nos');
ctxsys.driimp.set_value('STOP_WORD','notamment');
ctxsys.driimp.set_value('STOP_WORD','notre');
ctxsys.driimp.set_value('STOP_WORD','notres');
ctxsys.driimp.set_value('STOP_WORD','nous');
ctxsys.driimp.set_value('STOP_WORD','nulle');
ctxsys.driimp.set_value('STOP_WORD','nulles');
ctxsys.driimp.set_value('STOP_WORD','nôtre');
ctxsys.driimp.set_value('STOP_WORD','nôtres');
ctxsys.driimp.set_value('STOP_WORD','on');
ctxsys.driimp.set_value('STOP_WORD','ou');
ctxsys.driimp.set_value('STOP_WORD','où');
ctxsys.driimp.set_value('STOP_WORD','par');
ctxsys.driimp.set_value('STOP_WORD','parce');
ctxsys.driimp.set_value('STOP_WORD','parmi');
ctxsys.driimp.set_value('STOP_WORD','plus');
ctxsys.driimp.set_value('STOP_WORD','plusieurs');
ctxsys.driimp.set_value('STOP_WORD','pour');
ctxsys.driimp.set_value('STOP_WORD','pourquoi');
ctxsys.driimp.set_value('STOP_WORD','près');
ctxsys.driimp.set_value('STOP_WORD','puis');
ctxsys.driimp.set_value('STOP_WORD','puisque');
ctxsys.driimp.set_value('STOP_WORD','quand');
ctxsys.driimp.set_value('STOP_WORD','quant');
ctxsys.driimp.set_value('STOP_WORD','que');
ctxsys.driimp.set_value('STOP_WORD','quel');
ctxsys.driimp.set_value('STOP_WORD','quelle');
ctxsys.driimp.set_value('STOP_WORD','quelqu''un');
ctxsys.driimp.set_value('STOP_WORD','quelqu''une');
ctxsys.driimp.set_value('STOP_WORD','quelque');
ctxsys.driimp.set_value('STOP_WORD','quelques-unes');
ctxsys.driimp.set_value('STOP_WORD','quelques-uns');
ctxsys.driimp.set_value('STOP_WORD','quels');
ctxsys.driimp.set_value('STOP_WORD','qui');
ctxsys.driimp.set_value('STOP_WORD','quiconque');
ctxsys.driimp.set_value('STOP_WORD','quoi');
ctxsys.driimp.set_value('STOP_WORD','quoique');
ctxsys.driimp.set_value('STOP_WORD','sa');
ctxsys.driimp.set_value('STOP_WORD','sans');
ctxsys.driimp.set_value('STOP_WORD','sauf');
ctxsys.driimp.set_value('STOP_WORD','se');
ctxsys.driimp.set_value('STOP_WORD','selon');
ctxsys.driimp.set_value('STOP_WORD','ses');
ctxsys.driimp.set_value('STOP_WORD','sien');
ctxsys.driimp.set_value('STOP_WORD','sienne');
ctxsys.driimp.set_value('STOP_WORD','siennes');
ctxsys.driimp.set_value('STOP_WORD','siens');
ctxsys.driimp.set_value('STOP_WORD','soi');
ctxsys.driimp.set_value('STOP_WORD','soi-même');
ctxsys.driimp.set_value('STOP_WORD','soit');
ctxsys.driimp.set_value('STOP_WORD','sont');
ctxsys.driimp.set_value('STOP_WORD','suis');
ctxsys.driimp.set_value('STOP_WORD','sur');
ctxsys.driimp.set_value('STOP_WORD','ta');
ctxsys.driimp.set_value('STOP_WORD','tandis');
ctxsys.driimp.set_value('STOP_WORD','tant');
ctxsys.driimp.set_value('STOP_WORD','te');
ctxsys.driimp.set_value('STOP_WORD','telle');
ctxsys.driimp.set_value('STOP_WORD','telles');
ctxsys.driimp.set_value('STOP_WORD','tes');
ctxsys.driimp.set_value('STOP_WORD','tienne');
ctxsys.driimp.set_value('STOP_WORD','tiennes');
ctxsys.driimp.set_value('STOP_WORD','tiens');
ctxsys.driimp.set_value('STOP_WORD','toi');
ctxsys.driimp.set_value('STOP_WORD','ton');
ctxsys.driimp.set_value('STOP_WORD','toujours');
ctxsys.driimp.set_value('STOP_WORD','tous');
ctxsys.driimp.set_value('STOP_WORD','toute');
ctxsys.driimp.set_value('STOP_WORD','toutes');
ctxsys.driimp.set_value('STOP_WORD','trop');
ctxsys.driimp.set_value('STOP_WORD','très');
ctxsys.driimp.set_value('STOP_WORD','tu');
ctxsys.driimp.set_value('STOP_WORD','un');
ctxsys.driimp.set_value('STOP_WORD','une');
ctxsys.driimp.set_value('STOP_WORD','vos');
ctxsys.driimp.set_value('STOP_WORD','votre');
ctxsys.driimp.set_value('STOP_WORD','vous');
ctxsys.driimp.set_value('STOP_WORD','vu');
ctxsys.driimp.set_value('STOP_WORD','vôtre');
ctxsys.driimp.set_value('STOP_WORD','vôtres');
ctxsys.driimp.set_value('STOP_WORD','y');
ctxsys.driimp.set_value('STOP_WORD','à');
ctxsys.driimp.set_value('STOP_WORD','ça');
ctxsys.driimp.set_value('STOP_WORD','étaient');
ctxsys.driimp.set_value('STOP_WORD','était');
ctxsys.driimp.set_value('STOP_WORD','étant');
ctxsys.driimp.set_object('STORAGE','BASIC_STORAGE',2);
ctxsys.driimp.set_value('R_TABLE_CLAUSE','lob (data) store as (cache)');
ctxsys.driimp.set_value('I_INDEX_CLAUSE','compress 2');
commit;
COMMIT; 
END; 


CREATE INDEX "FULL_80158323_IDX" ON "FULLTEXT" ("FULLTEXT_TXTREPONSE") 
   INDEXTYPE IS "CTXSYS"."CONTEXT" 


BEGIN 
ctxsys.driimp.create_index('FULL_406097D3_IDX','FULLTEXT',USER,
'ID','1','FULLTEXT_SENATTITRE','112',
'0','924816','8130','924817',
NULL, NULL, NULL, 0,'TQY','ON COMMIT','12582912',NULL, NULL, NULL);
ctxsys.driimp.set_object('DATASTORE','DIRECT_DATASTORE',0);
ctxsys.driimp.set_object('DATATYPE','LOB_DATATYPE',0);
ctxsys.driimp.set_object('DATAX','SYNCH_DATAX',0);
ctxsys.driimp.set_object('FILTER','NULL_FILTER',0);
ctxsys.driimp.set_object('SECTION_GROUP','NULL_SECTION_GROUP',0);
ctxsys.driimp.set_object('LEXER','BASIC_LEXER',2);
ctxsys.driimp.set_value('BASE_LETTER','1');
ctxsys.driimp.set_value('INDEX_STEMS','4');
ctxsys.driimp.set_object('WORDLIST','BASIC_WORDLIST',3);
ctxsys.driimp.set_value('STEMMER','4');
ctxsys.driimp.set_value('SUBSTRING_INDEX','0');
ctxsys.driimp.set_value('PREFIX_INDEX','0');
ctxsys.driimp.set_object('STOPLIST','BASIC_STOPLIST',114);
ctxsys.driimp.set_value('STOP_WORD','Mr');
ctxsys.driimp.set_value('STOP_WORD','Mrs');
ctxsys.driimp.set_value('STOP_WORD','Ms');
ctxsys.driimp.set_value('STOP_WORD','a');
ctxsys.driimp.set_value('STOP_WORD','all');
ctxsys.driimp.set_value('STOP_WORD','almost');
ctxsys.driimp.set_value('STOP_WORD','also');
ctxsys.driimp.set_value('STOP_WORD','although');
ctxsys.driimp.set_value('STOP_WORD','an');
ctxsys.driimp.set_value('STOP_WORD','and');
ctxsys.driimp.set_value('STOP_WORD','any');
ctxsys.driimp.set_value('STOP_WORD','are');
ctxsys.driimp.set_value('STOP_WORD','as');
ctxsys.driimp.set_value('STOP_WORD','at');
ctxsys.driimp.set_value('STOP_WORD','be');
ctxsys.driimp.set_value('STOP_WORD','because');
ctxsys.driimp.set_value('STOP_WORD','been');
ctxsys.driimp.set_value('STOP_WORD','both');
ctxsys.driimp.set_value('STOP_WORD','but');
ctxsys.driimp.set_value('STOP_WORD','by');
ctxsys.driimp.set_value('STOP_WORD','can');
ctxsys.driimp.set_value('STOP_WORD','could');
ctxsys.driimp.set_value('STOP_WORD','d');
ctxsys.driimp.set_value('STOP_WORD','did');
ctxsys.driimp.set_value('STOP_WORD','do');
ctxsys.driimp.set_value('STOP_WORD','does');
ctxsys.driimp.set_value('STOP_WORD','either');
ctxsys.driimp.set_value('STOP_WORD','for');
ctxsys.driimp.set_value('STOP_WORD','from');
ctxsys.driimp.set_value('STOP_WORD','had');
ctxsys.driimp.set_value('STOP_WORD','has');
ctxsys.driimp.set_value('STOP_WORD','have');
ctxsys.driimp.set_value('STOP_WORD','having');
ctxsys.driimp.set_value('STOP_WORD','he');
ctxsys.driimp.set_value('STOP_WORD','her');
ctxsys.driimp.set_value('STOP_WORD','here');
ctxsys.driimp.set_value('STOP_WORD','hers');
ctxsys.driimp.set_value('STOP_WORD','him');
ctxsys.driimp.set_value('STOP_WORD','his');
ctxsys.driimp.set_value('STOP_WORD','how');
ctxsys.driimp.set_value('STOP_WORD','however');
ctxsys.driimp.set_value('STOP_WORD','i');
ctxsys.driimp.set_value('STOP_WORD','if');
ctxsys.driimp.set_value('STOP_WORD','in');
ctxsys.driimp.set_value('STOP_WORD','into');
ctxsys.driimp.set_value('STOP_WORD','is');
ctxsys.driimp.set_value('STOP_WORD','it');
ctxsys.driimp.set_value('STOP_WORD','its');
ctxsys.driimp.set_value('STOP_WORD','just');
ctxsys.driimp.set_value('STOP_WORD','ll');
ctxsys.driimp.set_value('STOP_WORD','me');
ctxsys.driimp.set_value('STOP_WORD','might');
ctxsys.driimp.set_value('STOP_WORD','my');
ctxsys.driimp.set_value('STOP_WORD','no');
ctxsys.driimp.set_value('STOP_WORD','non');
ctxsys.driimp.set_value('STOP_WORD','nor');
ctxsys.driimp.set_value('STOP_WORD','not');
ctxsys.driimp.set_value('STOP_WORD','of');
ctxsys.driimp.set_value('STOP_WORD','on');
ctxsys.driimp.set_value('STOP_WORD','one');
ctxsys.driimp.set_value('STOP_WORD','only');
ctxsys.driimp.set_value('STOP_WORD','onto');
ctxsys.driimp.set_value('STOP_WORD','or');
ctxsys.driimp.set_value('STOP_WORD','our');
ctxsys.driimp.set_value('STOP_WORD','ours');
ctxsys.driimp.set_value('STOP_WORD','s');
ctxsys.driimp.set_value('STOP_WORD','shall');
ctxsys.driimp.set_value('STOP_WORD','she');
ctxsys.driimp.set_value('STOP_WORD','should');
ctxsys.driimp.set_value('STOP_WORD','since');
ctxsys.driimp.set_value('STOP_WORD','so');
ctxsys.driimp.set_value('STOP_WORD','some');
ctxsys.driimp.set_value('STOP_WORD','still');
ctxsys.driimp.set_value('STOP_WORD','such');
ctxsys.driimp.set_value('STOP_WORD','t');
ctxsys.driimp.set_value('STOP_WORD','than');
ctxsys.driimp.set_value('STOP_WORD','that');
ctxsys.driimp.set_value('STOP_WORD','the');
ctxsys.driimp.set_value('STOP_WORD','their');
ctxsys.driimp.set_value('STOP_WORD','them');
ctxsys.driimp.set_value('STOP_WORD','then');
ctxsys.driimp.set_value('STOP_WORD','there');
ctxsys.driimp.set_value('STOP_WORD','therefore');
ctxsys.driimp.set_value('STOP_WORD','these');
ctxsys.driimp.set_value('STOP_WORD','they');
ctxsys.driimp.set_value('STOP_WORD','this');
ctxsys.driimp.set_value('STOP_WORD','those');
ctxsys.driimp.set_value('STOP_WORD','though');
ctxsys.driimp.set_value('STOP_WORD','through');
ctxsys.driimp.set_value('STOP_WORD','thus');
ctxsys.driimp.set_value('STOP_WORD','to');
ctxsys.driimp.set_value('STOP_WORD','too');
ctxsys.driimp.set_value('STOP_WORD','until');
ctxsys.driimp.set_value('STOP_WORD','ve');
ctxsys.driimp.set_value('STOP_WORD','very');
ctxsys.driimp.set_value('STOP_WORD','was');
ctxsys.driimp.set_value('STOP_WORD','we');
ctxsys.driimp.set_value('STOP_WORD','were');
ctxsys.driimp.set_value('STOP_WORD','what');
ctxsys.driimp.set_value('STOP_WORD','when');
ctxsys.driimp.set_value('STOP_WORD','where');
ctxsys.driimp.set_value('STOP_WORD','whether');
ctxsys.driimp.set_value('STOP_WORD','which');
ctxsys.driimp.set_value('STOP_WORD','while');
ctxsys.driimp.set_value('STOP_WORD','who');
ctxsys.driimp.set_value('STOP_WORD','whose');
ctxsys.driimp.set_value('STOP_WORD','why');
ctxsys.driimp.set_value('STOP_WORD','will');
ctxsys.driimp.set_value('STOP_WORD','with');
ctxsys.driimp.set_value('STOP_WORD','would');
ctxsys.driimp.set_value('STOP_WORD','yet');
ctxsys.driimp.set_value('STOP_WORD','you');
ctxsys.driimp.set_value('STOP_WORD','your');
ctxsys.driimp.set_value('STOP_WORD','yours');
ctxsys.driimp.set_object('STORAGE','BASIC_STORAGE',2);
ctxsys.driimp.set_value('R_TABLE_CLAUSE','lob (data) store as (cache)');
ctxsys.driimp.set_value('I_INDEX_CLAUSE','compress 2');
commit;
COMMIT; 
END; 


CREATE INDEX "FULL_406097D3_IDX" ON "FULLTEXT" ("FULLTEXT_SENATTITRE") 
   INDEXTYPE IS "CTXSYS"."CONTEXT" 


BEGIN 
ctxsys.driimp.create_index('FULL_E17194F7_IDX','FULLTEXT',USER,
'ID','1','FULLTEXT_IDQUESTION','112',
'0','924816','8130','924817',
NULL, NULL, NULL, 0,'TQY','ON COMMIT','12582912',NULL, NULL, NULL);
ctxsys.driimp.set_object('DATASTORE','DIRECT_DATASTORE',0);
ctxsys.driimp.set_object('DATATYPE','LOB_DATATYPE',0);
ctxsys.driimp.set_object('DATAX','SYNCH_DATAX',0);
ctxsys.driimp.set_object('FILTER','NULL_FILTER',0);
ctxsys.driimp.set_object('SECTION_GROUP','NULL_SECTION_GROUP',0);
ctxsys.driimp.set_object('LEXER','BASIC_LEXER',0);
ctxsys.driimp.set_object('WORDLIST','BASIC_WORDLIST',2);
ctxsys.driimp.set_value('STEMMER','1');
ctxsys.driimp.set_value('FUZZY_MATCH','1');
ctxsys.driimp.set_object('STOPLIST','BASIC_STOPLIST',114);
ctxsys.driimp.set_value('STOP_WORD','Mr');
ctxsys.driimp.set_value('STOP_WORD','Mrs');
ctxsys.driimp.set_value('STOP_WORD','Ms');
ctxsys.driimp.set_value('STOP_WORD','a');
ctxsys.driimp.set_value('STOP_WORD','all');
ctxsys.driimp.set_value('STOP_WORD','almost');
ctxsys.driimp.set_value('STOP_WORD','also');
ctxsys.driimp.set_value('STOP_WORD','although');
ctxsys.driimp.set_value('STOP_WORD','an');
ctxsys.driimp.set_value('STOP_WORD','and');
ctxsys.driimp.set_value('STOP_WORD','any');
ctxsys.driimp.set_value('STOP_WORD','are');
ctxsys.driimp.set_value('STOP_WORD','as');
ctxsys.driimp.set_value('STOP_WORD','at');
ctxsys.driimp.set_value('STOP_WORD','be');
ctxsys.driimp.set_value('STOP_WORD','because');
ctxsys.driimp.set_value('STOP_WORD','been');
ctxsys.driimp.set_value('STOP_WORD','both');
ctxsys.driimp.set_value('STOP_WORD','but');
ctxsys.driimp.set_value('STOP_WORD','by');
ctxsys.driimp.set_value('STOP_WORD','can');
ctxsys.driimp.set_value('STOP_WORD','could');
ctxsys.driimp.set_value('STOP_WORD','d');
ctxsys.driimp.set_value('STOP_WORD','did');
ctxsys.driimp.set_value('STOP_WORD','do');
ctxsys.driimp.set_value('STOP_WORD','does');
ctxsys.driimp.set_value('STOP_WORD','either');
ctxsys.driimp.set_value('STOP_WORD','for');
ctxsys.driimp.set_value('STOP_WORD','from');
ctxsys.driimp.set_value('STOP_WORD','had');
ctxsys.driimp.set_value('STOP_WORD','has');
ctxsys.driimp.set_value('STOP_WORD','have');
ctxsys.driimp.set_value('STOP_WORD','having');
ctxsys.driimp.set_value('STOP_WORD','he');
ctxsys.driimp.set_value('STOP_WORD','her');
ctxsys.driimp.set_value('STOP_WORD','here');
ctxsys.driimp.set_value('STOP_WORD','hers');
ctxsys.driimp.set_value('STOP_WORD','him');
ctxsys.driimp.set_value('STOP_WORD','his');
ctxsys.driimp.set_value('STOP_WORD','how');
ctxsys.driimp.set_value('STOP_WORD','however');
ctxsys.driimp.set_value('STOP_WORD','i');
ctxsys.driimp.set_value('STOP_WORD','if');
ctxsys.driimp.set_value('STOP_WORD','in');
ctxsys.driimp.set_value('STOP_WORD','into');
ctxsys.driimp.set_value('STOP_WORD','is');
ctxsys.driimp.set_value('STOP_WORD','it');
ctxsys.driimp.set_value('STOP_WORD','its');
ctxsys.driimp.set_value('STOP_WORD','just');
ctxsys.driimp.set_value('STOP_WORD','ll');
ctxsys.driimp.set_value('STOP_WORD','me');
ctxsys.driimp.set_value('STOP_WORD','might');
ctxsys.driimp.set_value('STOP_WORD','my');
ctxsys.driimp.set_value('STOP_WORD','no');
ctxsys.driimp.set_value('STOP_WORD','non');
ctxsys.driimp.set_value('STOP_WORD','nor');
ctxsys.driimp.set_value('STOP_WORD','not');
ctxsys.driimp.set_value('STOP_WORD','of');
ctxsys.driimp.set_value('STOP_WORD','on');
ctxsys.driimp.set_value('STOP_WORD','one');
ctxsys.driimp.set_value('STOP_WORD','only');
ctxsys.driimp.set_value('STOP_WORD','onto');
ctxsys.driimp.set_value('STOP_WORD','or');
ctxsys.driimp.set_value('STOP_WORD','our');
ctxsys.driimp.set_value('STOP_WORD','ours');
ctxsys.driimp.set_value('STOP_WORD','s');
ctxsys.driimp.set_value('STOP_WORD','shall');
ctxsys.driimp.set_value('STOP_WORD','she');
ctxsys.driimp.set_value('STOP_WORD','should');
ctxsys.driimp.set_value('STOP_WORD','since');
ctxsys.driimp.set_value('STOP_WORD','so');
ctxsys.driimp.set_value('STOP_WORD','some');
ctxsys.driimp.set_value('STOP_WORD','still');
ctxsys.driimp.set_value('STOP_WORD','such');
ctxsys.driimp.set_value('STOP_WORD','t');
ctxsys.driimp.set_value('STOP_WORD','than');
ctxsys.driimp.set_value('STOP_WORD','that');
ctxsys.driimp.set_value('STOP_WORD','the');
ctxsys.driimp.set_value('STOP_WORD','their');
ctxsys.driimp.set_value('STOP_WORD','them');
ctxsys.driimp.set_value('STOP_WORD','then');
ctxsys.driimp.set_value('STOP_WORD','there');
ctxsys.driimp.set_value('STOP_WORD','therefore');
ctxsys.driimp.set_value('STOP_WORD','these');
ctxsys.driimp.set_value('STOP_WORD','they');
ctxsys.driimp.set_value('STOP_WORD','this');
ctxsys.driimp.set_value('STOP_WORD','those');
ctxsys.driimp.set_value('STOP_WORD','though');
ctxsys.driimp.set_value('STOP_WORD','through');
ctxsys.driimp.set_value('STOP_WORD','thus');
ctxsys.driimp.set_value('STOP_WORD','to');
ctxsys.driimp.set_value('STOP_WORD','too');
ctxsys.driimp.set_value('STOP_WORD','until');
ctxsys.driimp.set_value('STOP_WORD','ve');
ctxsys.driimp.set_value('STOP_WORD','very');
ctxsys.driimp.set_value('STOP_WORD','was');
ctxsys.driimp.set_value('STOP_WORD','we');
ctxsys.driimp.set_value('STOP_WORD','were');
ctxsys.driimp.set_value('STOP_WORD','what');
ctxsys.driimp.set_value('STOP_WORD','when');
ctxsys.driimp.set_value('STOP_WORD','where');
ctxsys.driimp.set_value('STOP_WORD','whether');
ctxsys.driimp.set_value('STOP_WORD','which');
ctxsys.driimp.set_value('STOP_WORD','while');
ctxsys.driimp.set_value('STOP_WORD','who');
ctxsys.driimp.set_value('STOP_WORD','whose');
ctxsys.driimp.set_value('STOP_WORD','why');
ctxsys.driimp.set_value('STOP_WORD','will');
ctxsys.driimp.set_value('STOP_WORD','with');
ctxsys.driimp.set_value('STOP_WORD','would');
ctxsys.driimp.set_value('STOP_WORD','yet');
ctxsys.driimp.set_value('STOP_WORD','you');
ctxsys.driimp.set_value('STOP_WORD','your');
ctxsys.driimp.set_value('STOP_WORD','yours');
ctxsys.driimp.set_object('STORAGE','BASIC_STORAGE',2);
ctxsys.driimp.set_value('R_TABLE_CLAUSE','lob (data) store as (cache)');
ctxsys.driimp.set_value('I_INDEX_CLAUSE','compress 2');
commit;
COMMIT; 
END; 


CREATE INDEX "FULL_E17194F7_IDX" ON "FULLTEXT" ("FULLTEXT_IDQUESTION") 
   INDEXTYPE IS "CTXSYS"."CONTEXT" 


BEGIN 
ctxsys.driimp.create_index('FULLTEXT_FULLTEXT_IDX','FULLTEXT',USER,
'ID','1','FULLTEXT','112',
'0','924816','8130','924817',
NULL, NULL, NULL, 0,'TQY','ON COMMIT','12582912',NULL, NULL, NULL);
ctxsys.driimp.set_object('DATASTORE','DIRECT_DATASTORE',0);
ctxsys.driimp.set_object('DATATYPE','LOB_DATATYPE',0);
ctxsys.driimp.set_object('DATAX','SYNCH_DATAX',0);
ctxsys.driimp.set_object('FILTER','NULL_FILTER',0);
ctxsys.driimp.set_object('SECTION_GROUP','NULL_SECTION_GROUP',0);
ctxsys.driimp.set_object('LEXER','BASIC_LEXER',0);
ctxsys.driimp.set_object('WORDLIST','BASIC_WORDLIST',2);
ctxsys.driimp.set_value('STEMMER','1');
ctxsys.driimp.set_value('FUZZY_MATCH','1');
ctxsys.driimp.set_object('STOPLIST','BASIC_STOPLIST',114);
ctxsys.driimp.set_value('STOP_WORD','Mr');
ctxsys.driimp.set_value('STOP_WORD','Mrs');
ctxsys.driimp.set_value('STOP_WORD','Ms');
ctxsys.driimp.set_value('STOP_WORD','a');
ctxsys.driimp.set_value('STOP_WORD','all');
ctxsys.driimp.set_value('STOP_WORD','almost');
ctxsys.driimp.set_value('STOP_WORD','also');
ctxsys.driimp.set_value('STOP_WORD','although');
ctxsys.driimp.set_value('STOP_WORD','an');
ctxsys.driimp.set_value('STOP_WORD','and');
ctxsys.driimp.set_value('STOP_WORD','any');
ctxsys.driimp.set_value('STOP_WORD','are');
ctxsys.driimp.set_value('STOP_WORD','as');
ctxsys.driimp.set_value('STOP_WORD','at');
ctxsys.driimp.set_value('STOP_WORD','be');
ctxsys.driimp.set_value('STOP_WORD','because');
ctxsys.driimp.set_value('STOP_WORD','been');
ctxsys.driimp.set_value('STOP_WORD','both');
ctxsys.driimp.set_value('STOP_WORD','but');
ctxsys.driimp.set_value('STOP_WORD','by');
ctxsys.driimp.set_value('STOP_WORD','can');
ctxsys.driimp.set_value('STOP_WORD','could');
ctxsys.driimp.set_value('STOP_WORD','d');
ctxsys.driimp.set_value('STOP_WORD','did');
ctxsys.driimp.set_value('STOP_WORD','do');
ctxsys.driimp.set_value('STOP_WORD','does');
ctxsys.driimp.set_value('STOP_WORD','either');
ctxsys.driimp.set_value('STOP_WORD','for');
ctxsys.driimp.set_value('STOP_WORD','from');
ctxsys.driimp.set_value('STOP_WORD','had');
ctxsys.driimp.set_value('STOP_WORD','has');
ctxsys.driimp.set_value('STOP_WORD','have');
ctxsys.driimp.set_value('STOP_WORD','having');
ctxsys.driimp.set_value('STOP_WORD','he');
ctxsys.driimp.set_value('STOP_WORD','her');
ctxsys.driimp.set_value('STOP_WORD','here');
ctxsys.driimp.set_value('STOP_WORD','hers');
ctxsys.driimp.set_value('STOP_WORD','him');
ctxsys.driimp.set_value('STOP_WORD','his');
ctxsys.driimp.set_value('STOP_WORD','how');
ctxsys.driimp.set_value('STOP_WORD','however');
ctxsys.driimp.set_value('STOP_WORD','i');
ctxsys.driimp.set_value('STOP_WORD','if');
ctxsys.driimp.set_value('STOP_WORD','in');
ctxsys.driimp.set_value('STOP_WORD','into');
ctxsys.driimp.set_value('STOP_WORD','is');
ctxsys.driimp.set_value('STOP_WORD','it');
ctxsys.driimp.set_value('STOP_WORD','its');
ctxsys.driimp.set_value('STOP_WORD','just');
ctxsys.driimp.set_value('STOP_WORD','ll');
ctxsys.driimp.set_value('STOP_WORD','me');
ctxsys.driimp.set_value('STOP_WORD','might');
ctxsys.driimp.set_value('STOP_WORD','my');
ctxsys.driimp.set_value('STOP_WORD','no');
ctxsys.driimp.set_value('STOP_WORD','non');
ctxsys.driimp.set_value('STOP_WORD','nor');
ctxsys.driimp.set_value('STOP_WORD','not');
ctxsys.driimp.set_value('STOP_WORD','of');
ctxsys.driimp.set_value('STOP_WORD','on');
ctxsys.driimp.set_value('STOP_WORD','one');
ctxsys.driimp.set_value('STOP_WORD','only');
ctxsys.driimp.set_value('STOP_WORD','onto');
ctxsys.driimp.set_value('STOP_WORD','or');
ctxsys.driimp.set_value('STOP_WORD','our');
ctxsys.driimp.set_value('STOP_WORD','ours');
ctxsys.driimp.set_value('STOP_WORD','s');
ctxsys.driimp.set_value('STOP_WORD','shall');
ctxsys.driimp.set_value('STOP_WORD','she');
ctxsys.driimp.set_value('STOP_WORD','should');
ctxsys.driimp.set_value('STOP_WORD','since');
ctxsys.driimp.set_value('STOP_WORD','so');
ctxsys.driimp.set_value('STOP_WORD','some');
ctxsys.driimp.set_value('STOP_WORD','still');
ctxsys.driimp.set_value('STOP_WORD','such');
ctxsys.driimp.set_value('STOP_WORD','t');
ctxsys.driimp.set_value('STOP_WORD','than');
ctxsys.driimp.set_value('STOP_WORD','that');
ctxsys.driimp.set_value('STOP_WORD','the');
ctxsys.driimp.set_value('STOP_WORD','their');
ctxsys.driimp.set_value('STOP_WORD','them');
ctxsys.driimp.set_value('STOP_WORD','then');
ctxsys.driimp.set_value('STOP_WORD','there');
ctxsys.driimp.set_value('STOP_WORD','therefore');
ctxsys.driimp.set_value('STOP_WORD','these');
ctxsys.driimp.set_value('STOP_WORD','they');
ctxsys.driimp.set_value('STOP_WORD','this');
ctxsys.driimp.set_value('STOP_WORD','those');
ctxsys.driimp.set_value('STOP_WORD','though');
ctxsys.driimp.set_value('STOP_WORD','through');
ctxsys.driimp.set_value('STOP_WORD','thus');
ctxsys.driimp.set_value('STOP_WORD','to');
ctxsys.driimp.set_value('STOP_WORD','too');
ctxsys.driimp.set_value('STOP_WORD','until');
ctxsys.driimp.set_value('STOP_WORD','ve');
ctxsys.driimp.set_value('STOP_WORD','very');
ctxsys.driimp.set_value('STOP_WORD','was');
ctxsys.driimp.set_value('STOP_WORD','we');
ctxsys.driimp.set_value('STOP_WORD','were');
ctxsys.driimp.set_value('STOP_WORD','what');
ctxsys.driimp.set_value('STOP_WORD','when');
ctxsys.driimp.set_value('STOP_WORD','where');
ctxsys.driimp.set_value('STOP_WORD','whether');
ctxsys.driimp.set_value('STOP_WORD','which');
ctxsys.driimp.set_value('STOP_WORD','while');
ctxsys.driimp.set_value('STOP_WORD','who');
ctxsys.driimp.set_value('STOP_WORD','whose');
ctxsys.driimp.set_value('STOP_WORD','why');
ctxsys.driimp.set_value('STOP_WORD','will');
ctxsys.driimp.set_value('STOP_WORD','with');
ctxsys.driimp.set_value('STOP_WORD','would');
ctxsys.driimp.set_value('STOP_WORD','yet');
ctxsys.driimp.set_value('STOP_WORD','you');
ctxsys.driimp.set_value('STOP_WORD','your');
ctxsys.driimp.set_value('STOP_WORD','yours');
ctxsys.driimp.set_object('STORAGE','BASIC_STORAGE',2);
ctxsys.driimp.set_value('R_TABLE_CLAUSE','lob (data) store as (cache)');
ctxsys.driimp.set_value('I_INDEX_CLAUSE','compress 2');
commit;
COMMIT; 
END; 


CREATE INDEX "FULLTEXT_FULLTEXT_IDX" ON "FULLTEXT" ("FULLTEXT") 
   INDEXTYPE IS "CTXSYS"."CONTEXT" 


