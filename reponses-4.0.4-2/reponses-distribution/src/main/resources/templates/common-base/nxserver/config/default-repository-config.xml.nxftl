<#escape x as x?xml>
<?xml version="1.0"?>
<component name="default-repository-config">
  <extension target="org.nuxeo.ecm.core.blob.BlobManager" point="configuration">
    <blobprovider name="default">
      <class>${nuxeo.core.binarymanager}</class>
      <property name="path">${repository.binary.store}</property>
      <property name="key">${nuxeo.core.binarymanager_key}</property>
    </blobprovider>
  </extension>

<#if "${nuxeo.mongodb.server}" == "">

  <extension target="org.nuxeo.ecm.core.storage.sql.RepositoryService"
    point="repository">
    <repository name="default" label="label.default.repository">
      <pool minPoolSize="${nuxeo.vcs["min-pool-size"]}" maxPoolSize="${nuxeo.vcs["max-pool-size"]}"
        blockingTimeoutMillis="${nuxeo.vcs["blocking-timeout-millis"]}"
        idleTimeoutMinutes="${nuxeo.vcs["idle-timeout-minutes"]}"
        activeTimeoutMinutes="${nuxeo.vcs["active-timeout-minutes"]}" />
      <clustering id="${repository.clustering.id}" enabled="${repository.clustering.enabled}" delay="${repository.clustering.delay}" />
      <clusterInvalidatorClass>org.nuxeo.ecm.core.storage.sql.VCSPubSubInvalidator</clusterInvalidatorClass>
      <noDDL>${nuxeo.vcs.noddl}</noDDL>
      <ddlMode>${nuxeo.vcs.ddlmode}</ddlMode>
      <aclOptimizations enabled="${nuxeo.vcs.optimizations.acl.enabled}" readAclMaxSize="${nuxeo.vcs.optimizations.acl.maxsize}"/>
      <pathOptimizations enabled="${nuxeo.vcs.optimizations.path.enabled}"/>
      <proxies enabled="false"/>
      <idType>${nuxeo.vcs.idtype}</idType>
      <changeTokenEnabled>${nuxeo.changetoken.enabled}</changeTokenEnabled>
      <indexing>
<#if "${nuxeo.db.type}" == "postgresql">
        <fulltext disabled="${nuxeo.vcs.fulltext.disabled}" searchDisabled="${nuxeo.vcs.fulltext.search.disabled}"
                  analyzer="${nuxeo.vcs.fulltext.analyzer.language}">
          <index name="default">
            <!-- all props implied -->
          </index>
          <index name="title">
            <field>dc:title</field>
          </index>
          <index name="description">
            <field>dc:description</field>
          </index>
        </fulltext>
<#elseif "${nuxeo.db.type}" == "mssql">
        <fulltext disabled="${nuxeo.vcs.fulltext.disabled}" searchDisabled="${nuxeo.vcs.fulltext.search.disabled}"
                  analyzer="${nuxeo.vcs.fulltext.analyzer.language}">
          <index name="default">
            <!-- all props implied -->
          </index>
          <!-- SQL Server does not support more than one fulltext index per
          table: to add support for multiple fulltext index would required to
          change the datamodel of VCS -->
       </fulltext>
<#elseif "${nuxeo.db.type}" == "mysql">
        <!-- For MySQL -->
        <fulltext disabled="${nuxeo.vcs.fulltext.disabled}" searchDisabled="${nuxeo.vcs.fulltext.search.disabled}">
          <index name="default">
            <!-- all props implied -->
          </index>
          <index name="title">
            <field>dc:title</field>
          </index>
          <index name="description">
            <field>dc:description</field>
          </index>
        </fulltext>
<#elseif "${nuxeo.db.type}" == "oracle">
        <!-- For oracle -->
		<!-- JGZ: Les documents File et Dossier ont besoin d'être indexés, ne 
			les ajoutez pas ! -->
		<excludedTypes>
			<type>AdministrativeStatus</type>
			<type>BibliothequeRequetesRoot</type>
			<type>DelegationRoot</type>
			<type>FondDeDossierRepertoire</type>
			<type>AdministrativeStatusContainer</type>
			<type>BirtReport</type>
			<type>FavorisDossierRoot</type>
			<type>FeuilleRouteModelFolder</type>
			<type>QuestionsConnexesRoot</type>
			<type>SmartFolder</type>
			<type>Workspace</type>
			<type>content</type>
			<type>CaseRoot</type>
			<type>NaiadFeuilleRouteInstancesRoot</type>
			<type>FavorisIndexation</type>
			<type>AdminWorkspace</type>
			<type>BirtReportModel</type>
			<type>Domain</type>
			<type>FondDeDossier</type>
			<type>QuestionConnexe</type>
			<type>QuestionConnexeAA</type>
			<type>AllotissementsRoot</type>
			<type>DossierLink</type>
			<type>NaiadFeuilleRoute</type>
			<type>Folder</type>
			<type>ParametreFolder</type>
			<type>HiddenFolder</type>
			<type>ManagementRoot</type>
			<type>WorkspaceRoot</type>
			<type>BirtReportModelsRoot</type>
			<type>Parametre</type>
			<type>NaiadFeuilleRouteStep</type>
			<type>UserWorkspacesRoot</type>
			<type>JetonMaitreFolder</type>
			<type>Comment</type>
			<type>ReponsesMailbox</type>
			<type>StepFolder</type>
			<type>etatQuestion#anonymousType</type>
			<type>JetonDocFolder</type>
			<type>MailboxRoot</type>
			<type>Dossier</type>
			<type>Root</type>
			<type>parameter</type>
			<type>FavorisIndexationRoot</type>
			<type>RequeteRoot</type>
			<type>File</type>
			<type>JetonMaitre</type>
			<type>Allotissement</type>
			<type>WsNotificationRoot</type>
			<type>EtatApplication</type>
			<type>JetonDoc</type>
			<type>InfoUtilisateurConnection</type>
			<type>InfoUtilisateurConnectionRoot</type>
			<type>ReponsesLoggingLine</type>
			<type>ReponsesLoggingRoot</type>
			<type>ReponsesLogging</type>
			<type>ReponsesLoggingDetail</type>
		</excludedTypes>

		<fulltext analyser="LEXER REP_LEXER WORDLIST REP_WORDLIST STOPLIST REP_STOPLIST">
			<index name="default">
				<!-- all props implied -->
			</index>
			<index name="idQuestion">
				<field>qu:sourceNumeroQuestion</field>
			</index>
			<index name="txtReponse">
				<field>note</field>
			</index>
			<index name="txtQuestion">
				<field>qu:texteQuestion</field>
			</index>
			<index name="senatTitre">
				<field>qu:senatQuestionTitre</field>
			</index>
            <index name="actualiteObjet">
                <field>act:objet</field>
            </index>
		</fulltext>
<#else>
		<excludedTypes>
			<type>AdministrativeStatus</type>
			<type>BibliothequeRequetesRoot</type>
			<type>DelegationRoot</type>
			<type>FondDeDossierRepertoire</type>
			<type>AdministrativeStatusContainer</type>
			<type>BirtReport</type>
			<type>FavorisDossierRoot</type>
			<type>FeuilleRouteModelFolder</type>
			<type>QuestionsConnexesRoot</type>
			<type>SmartFolder</type>
			<type>Workspace</type>
			<type>content</type>
			<type>CaseRoot</type>
			<type>NaiadFeuilleRouteInstancesRoot</type>
			<type>FavorisIndexation</type>
			<type>AdminWorkspace</type>
			<type>BirtReportModel</type>
			<type>Domain</type>
			<type>FondDeDossier</type>
			<type>QuestionConnexe</type>
			<type>QuestionConnexeAA</type>
			<type>AllotissementsRoot</type>
			<type>DossierLink</type>
			<type>NaiadFeuilleRoute</type>
			<type>Folder</type>
			<type>ParametreFolder</type>
			<type>HiddenFolder</type>
			<type>ManagementRoot</type>
			<type>WorkspaceRoot</type>
			<type>BirtReportModelsRoot</type>
			<type>Parametre</type>
			<type>NaiadFeuilleRouteStep</type>
			<type>UserWorkspacesRoot</type>
			<type>JetonMaitreFolder</type>
			<type>Comment</type>
			<type>ReponsesMailbox</type>
			<type>StepFolder</type>
			<type>etatQuestion#anonymousType</type>
			<type>JetonDocFolder</type>
			<type>MailboxRoot</type>
			<type>Dossier</type>
			<type>Root</type>
			<type>parameter</type>
			<type>FavorisIndexationRoot</type>
			<type>RequeteRoot</type>
			<type>File</type>
			<type>JetonMaitre</type>
			<type>Allotissement</type>
			<type>WsNotificationRoot</type>
			<type>EtatApplication</type>
			<type>JetonDoc</type>
			<type>InfoUtilisateurConnection</type>
			<type>InfoUtilisateurConnectionRoot</type>
			<type>ReponsesLoggingLine</type>
			<type>ReponsesLoggingRoot</type>
			<type>ReponsesLogging</type>
			<type>ReponsesLoggingDetail</type>
		</excludedTypes>
        <!-- for H2 -->
		<fulltext disabled="${nuxeo.vcs.fulltext.disabled}" searchDisabled="${nuxeo.vcs.fulltext.search.disabled}" analyzer="org.apache.lucene.analysis.standard.StandardAnalyzer">
			<index name="default">
				<!-- all props implied -->
			</index>
			<index name="txtReponse">
				<field>note</field>
			</index>
			<index name="idQuestion">
				<field>qu:sourceNumeroQuestion</field>
			</index>
			<index name="txtQuestion">
				<field>qu:texteQuestion</field>
			</index>
			<index name="senatTitre">
				<field>qu:senatQuestionTitre</field>
			</index>
            <index name="actualiteObjet">
                <field>act:objet</field>
            </index>
		</fulltext>
</#if>
      </indexing>
<#if "${nuxeo.db.type}" != "mysql">
      <usersSeparator key="${nuxeo.db.user_separator_key}" />
</#if>
<#if "${nuxeo.db.type}" == "mysql">
      <schema>
        <field type="largetext">var_ParallelDocumentReview:review_result</field>
      </schema>
<#elseif "${nuxeo.db.type}" == "oracle">
	<schema>
		<field type="largetext">note</field>
		<field type="largetext">webp:content</field>
		<field type="largetext">webc:welcomeText</field>
		<field type="largetext">comment:comment</field>
		<field type="largetext">post</field>
		<field type="largetext">mail:mail</field>
		<field type="largetext">qu:texteQuestion</field>
		<field type="largetext">qu:texte_consolide</field>
		<field type="largetext">rep:signature</field>
		<field type="largetext">rep:erratum</field>
		<field type="largetext">eapp:message</field>
		<field type="largetext">replogd:fullLog</field>
		<field type="largetext">replogl:fullLog</field>
        <field type="largetext">act:contenu</field>
	</schema>
<#elseif "${nuxeo.db.type}" == "default">
	<schema>
		<field type="largetext">note</field>
		<field type="largetext">webp:content</field>
		<field type="largetext">webc:welcomeText</field>
		<field type="largetext">comment:comment</field>
		<field type="largetext">post</field>
		<field type="largetext">mail:mail</field>
		<field type="largetext">qu:texteQuestion</field>
		<field type="largetext">qu:texte_consolide</field>
		<field type="largetext">rep:texte_consolide</field>
        <field type="largetext">act:contenu</field>
	</schema>
</#if>
    </repository>
  </extension>

  <extension target="org.nuxeo.runtime.kv.KeyValueService" point="configuration">
    <store name="default" class="org.nuxeo.ecm.core.storage.sql.kv.SQLKeyValueStore">
      <property name="datasource">jdbc/keyvaluestore</property>
      <property name="table">kv</property>
    </store>
  </extension>

<#else>

  <require>org.nuxeo.runtime.mongodb.MongoDBComponent</require>

  <extension target="org.nuxeo.ecm.core.storage.mongodb.MongoDBRepositoryService"
      point="repository">
    <!-- it will lookup for "repository/default" connection -->
    <repository name="default" label="label.default.repository">
      <fulltext disabled="${nuxeo.vcs.fulltext.disabled}" searchDisabled="${nuxeo.vcs.fulltext.search.disabled}" />
      <cache enabled="${nuxeo.dbs.cache.enabled}" maxSize="${nuxeo.dbs.cache.maxSize}"
             concurrencyLevel="${nuxeo.dbs.cache.concurrencyLevel}" ttl="${nuxeo.dbs.cache.ttl}" />
      <clustering id="${repository.clustering.id}" enabled="${repository.clustering.enabled}">
        <invalidatorClass>org.nuxeo.ecm.core.storage.dbs.DBSPubSubInvalidator</invalidatorClass>
      </clustering>
      <changeTokenEnabled>${nuxeo.changetoken.enabled}</changeTokenEnabled>
    </repository>
  </extension>

</#if>

</component>
</#escape>
